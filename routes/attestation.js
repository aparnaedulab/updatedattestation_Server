var path = require('path');
var root_path = path.dirname(require.main.filename);
var models = require(root_path + '/models');
const express = require('express');
var router = express.Router();
const middlewares = require('../middlewares');
var fs = require('fs');
const multer = require('multer');
var pdfreader = require('pdfreader');
var constant = require(root_path + '/config/constant');
var moment = require('moment');
var models = require("../models");
var self_PDF = require(root_path + '/utils/self_letters');
var urlencode = require('urlencode');
var request = require('request');
var converter = require('number-to-words');
var sequelize = require("sequelize");
const Op = sequelize.Op;
const functions = require(root_path + '/utils/function');
const upload = multer({ dest: 'public/upload/marklist' }); // Specify the destination directory for uploaded files
const tesseract = require("node-tesseract-ocr")
const config = {
    lang: "eng",
    oem: 1,
    psm: 3
}


// router.use(fileUpload({
//     createParentPath: true
//   }))

router.get('/getname', middlewares.getUserInfo, function (req, res) {
	console.log("inside getname" + req.query.userId);
	var userId = req.query.userId;
	var files = [];
	var transcript_files = [];
	models.UserMarklist_Upload.findAll({
		where: {
			user_id: userId,
			app_id: {
				[Op.ne]: null
			}
		}
	}).then(function (marksheet) {
		files = marksheet;
		files.forEach(function (file) {
			if (file.file_name.includes('.PDF')) {
				var filename = file.file_name
				var splitedname = filename.split('.')
				var extensionname = splitedname.pop();
				var final;
				setTimeout(function () {
					var filename = file.file_name
					var extension = filename.split('.').pop();
					var randomString = functions.generateRandomString(10, 'alphabetic')
					var newFileName = randomString + '.' + 'pdf'
					var new_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + file.file_name
					models.UserMarklist_Upload.update({
						file_name: newFileName
					}, {
						where: {
							user_id: userId,
							file_name: file.file_name

						}
					}).then(function (data) {
						var old_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + newFileName
						fs.rename(new_file_path, old_file_path, function (err) {
							if (err) throw err;
							console.log('File Renamed.');
						});
					})

				}, 2000)
			}
			if (file.file_name.includes('.pdf')) {
				var filename = file.file_name
				var splitedname = filename.split('.')
				var extensionname = splitedname.pop();
				var final;
				setTimeout(function () {
					if (file.file_name.includes(' ')) {
						var file_name = file.file_name;
						var new_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + file_name
						var joined = file_name.split(" ").join("");
						console.log("joined" + joined);
						models.UserMarklist_Upload.update({
							file_name: joined
						}, {
							where: {
								user_id: userId,
								file_name: file_name

							}
						}).then(function (data) {
							var old_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + joined
							fs.rename(new_file_path, old_file_path, function (err) {
								if (err) throw err;
								console.log('File Renamed.');
							});
						})

					} else if (file.file_name.includes('.')) {
						if (splitedname[1]) {
							console.log(" in 1");
							var filename = file.file_name
							var extension = filename.split('.').pop();
							// console.log("demo" + demo);
							// var demo2 = demo.pop();
							var randomString = functions.generateRandomString(10, 'alphabetic')
							var newFileName = randomString + '.' + extension
							console.log("newFileName" + newFileName);
							var new_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + file.file_name
							models.UserMarklist_Upload.update({
								file_name: newFileName
							}, {
								where: {
									user_id: userId,
									file_name: file.file_name

								}
							}).then(function (data) {
								var old_file_path = constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + newFileName
								fs.rename(new_file_path, old_file_path, function (err) {
									if (err) throw err;
									console.log('File Renamed.');
								});
							})
						} else {
							console.log("no dot found");
						}
					} else {
						console.log("no space found");
					}
				}, 2000)
			} else {
				console.log("NO need to trim");
			}
		})

	})

	models.User_Transcript.findAll({
		where: {
			user_id: userId,
			app_id: {
				[Op.ne]: null
			}
		}
	}).then(function (marksheet) {
		files = marksheet;
		files.forEach(function (file) {
			if (file.file_name.includes('.pdf')) {
				var filename = file.file_name
				var splitedname = filename.split('.')
				var extensionname = splitedname.pop();
				var final;
				setTimeout(function () {
					if (file.file_name.includes(' ')) {
						var file_name = file.file_name;
						var new_file_path = constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + file_name
						var joined = file_name.split(" ").join("");
						console.log("joined" + joined);
						models.User_Transcript.update({
							file_name: joined
						}, {
							where: {
								user_id: userId,
								file_name: file_name

							}
						}).then(function (data) {
							var old_file_path = constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + joined
							fs.rename(new_file_path, old_file_path, function (err) {
								if (err) throw err;
								console.log('File Renamed.');
							});
						})

					} else if (file.file_name.includes('.')) {
						if (splitedname[1]) {
							console.log(" in 1");
							var filename = file.file_name
							var extension = filename.split('.').pop();
							// console.log("demo" + demo);
							// var demo2 = demo.pop();
							var randomString = functions.generateRandomString(10, 'alphabetic')
							var newFileName = randomString + '.' + extension
							console.log("newFileName" + newFileName);
							var new_file_path = constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + file.file_name
							models.User_Transcript.update({
								file_name: newFileName
							}, {
								where: {
									user_id: userId,
									file_name: file.file_name

								}
							}).then(function (data) {
								var old_file_path = constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + newFileName
								fs.rename(new_file_path, old_file_path, function (err) {
									if (err) throw err;
									console.log('File Renamed.');
								});
							})
						} else {
							console.log("no dot found");
						}
					} else {
						console.log("no space found");
					}
				}, 2000)
			} else {
				console.log("NO need to trim");
			}
		})

	})
	// models.User_Transcript.findAll({
	// 	where :{
	// 		user_id : userId,
	// 		app_id : {
	// 			[Op.ne] : null
	// 		}
	// 	}
	// }).then(function (transcript){
	// 	transcript_files = transcript;
	// 	console.log("transcript_files" + transcript_files.length);
	// 	transcript_files.forEach(function (file){
	// 		console.log("file.file_namefile.file_name" + file.file_name);
	// 		if(file.file_name.includes('.pdf')){
	// 			setTimeout(function(){
	// 			if(file.file_name.includes(' ')){
	// 				var file_name = file.file_name;
	// 				var new_file_path = constant.FILE_LOCATION +'public/upload/transcript/' + userId + '/' + file_name
	// 				var joined =file_name.split(" ").join("");
	// 				console.log("joined" + joined);
	// 				models.User_Transcript.update({
	// 					file_name : joined
	// 				}, {
	// 					where: {
	// 						user_id: userId,
	// 						file_name : file_name

	// 					}
	// 				}).then(function (data) {
	// 					var old_file_path =  constant.FILE_LOCATION +'public/upload/transcript/' + userId + '/' + joined
	// 					fs.rename(new_file_path,old_file_path, function (err) {
	// 						if (err) throw err;
	// 						console.log('File Renamed.');
	// 					  });
	// 				})

	// 		}else{
	// 			console.log("no space found");
	// 		}
	// 	},2000)
	// 		}

	// 	else{
	// 			console.log("NO need to trim");
	// 		}
	// 	})

	// })

	res.json({
		status: 200
	})

})

router.get('/getInstituteData', middlewares.getUserInfo, function (req, res) {
	console.log('/getInstituteData');
	var user_id = req.User.id;
	var data = [];
	var status;
	if (req.query.editFlag == 'true') {
		models.Institution_details.findAll({
			where: {
				user_id: user_id,
				app_id: req.query.app_id
			}
		}).then(function (allDetails) {
			if (allDetails.length > 0) {
				allDetails.forEach(function (detail) {
					var email;
					if (detail.OtherEmail)
						email = detail.email + ', ' + detail.OtherEmail;
					else
						email = detail.email;
					if (detail.app_id == null) {
						status = 'not_applied';
					} else {
						status = 'applied';
					}
					var referenceNo;
					if (detail.type == 'study')
						referenceNo = detail.studyrefno ? detail.studyrefno : 'Not Added';
					if (detail.type == 'employment')
						referenceNo = detail.emprefno ? detail.emprefno : 'Not Added';;
					if (detail.type == 'IQAS')
						referenceNo = detail.iqasno ? detail.iqasno : 'Not Added';;
					if (detail.type == 'CES')
						referenceNo = detail.cesno ? detail.cesno : 'Not Added';;
					if (detail.type == 'ICAS')
						referenceNo = detail.icasno ? detail.icasno : 'Not Added';;
					if (detail.type == 'visa')
						referenceNo = detail.visarefno ? detail.visarefno : 'Not Added';;
					if (detail.type == 'MYIEE')
						referenceNo = detail.myieeno ? detail.myieeno : 'Not Added';;
					if (detail.type == 'ICES')
						referenceNo = detail.icesno ? detail.icesno : 'Not Added';;
					if (detail.type == 'NASBA')
						referenceNo = detail.nasbano ? detail.nasbano : 'Not Added';;
					if (detail.type == 'Educational Perspective')
						referenceNo = detail.eduperno ? detail.eduperno : 'Not Added';;
					if (detail.type == 'NCEES')
						referenceNo = detail.nceesno ? detail.nceesno : 'Not Added';;
					if (detail.type == 'NARIC')
						referenceNo = detail.naricno ? detail.naricno : 'Not Added';;
					if (detail.type == 'Educational credential evaluators WES')
						referenceNo = detail.wesno ? detail.wesno : 'Not Added';;
					if (detail.type == 'others')
						referenceNo = detail.otheraccno ? detail.otheraccno : 'Not Added';;
					if (detail.type == 'National Committee on Accreditation')
						referenceNo = detail.ncano ? detail.ncano : 'Not Added';;
					if (detail.type == 'HRD')
						referenceNo = detail.hrdno ? detail.hrdno : 'Not Added';;
					data.push({
						id: detail.id,
						university_name: detail.university_name,
						email: email,
						country_name: detail.country_name,
						contact_number: detail.contact_number,
						status: status,
						contact_person: detail.contact_person,
						type: detail.type,
						address: detail.address,
						landmark: detail.landmark,
						pincode: detail.pincode,
						reference_no: referenceNo,
						emailAsWes: detail.emailAsWes,
						nameaswes: detail.nameaswes,
						lastnameaswes: detail.lastnameaswes
					})
				});
				if (data.length == allDetails.length) {
					res.json({
						status: 200,
						data: data
					});
				}
			} else {
				res.json({
					status: 400
				});
			}

		});
	} else {
		models.Institution_details.findAll({
			where: {
				user_id: user_id,
				app_id: null
			}
		}).then(function (allDetails) {
			if (allDetails.length > 0) {
				allDetails.forEach(function (detail) {
					var email;
					if (detail.OtherEmail)
						email = detail.email + ', ' + detail.OtherEmail;
					else
						email = detail.email;
					if (detail.app_id == null) {
						status = 'not_applied';
					} else {
						status = 'applied';
					}
					var referenceNo;
					if (detail.type == 'study')
						referenceNo = detail.studyrefno ? detail.studyrefno : 'Not Added';
					if (detail.type == 'employment')
						referenceNo = detail.emprefno ? detail.emprefno : 'Not Added';;
					if (detail.type == 'IQAS')
						referenceNo = detail.iqasno ? detail.iqasno : 'Not Added';;
					if (detail.type == 'CES')
						referenceNo = detail.cesno ? detail.cesno : 'Not Added';;
					if (detail.type == 'ICAS')
						referenceNo = detail.icasno ? detail.icasno : 'Not Added';;
					if (detail.type == 'visa')
						referenceNo = detail.visarefno ? detail.visarefno : 'Not Added';;
					if (detail.type == 'MYIEE')
						referenceNo = detail.myieeno ? detail.myieeno : 'Not Added';;
					if (detail.type == 'ICES')
						referenceNo = detail.icesno ? detail.icesno : 'Not Added';;
					if (detail.type == 'NASBA')
						referenceNo = detail.nasbano ? detail.nasbano : 'Not Added';;
					if (detail.type == 'Educational Perspective')
						referenceNo = detail.eduperno ? detail.eduperno : 'Not Added';;
					if (detail.type == 'NCEES')
						referenceNo = detail.nceesno ? detail.nceesno : 'Not Added';;
					if (detail.type == 'NARIC')
						referenceNo = detail.naricno ? detail.naricno : 'Not Added';;
					if (detail.type == 'Educational credential evaluators WES')
						referenceNo = detail.wesno ? detail.wesno : 'Not Added';;
					if (detail.type == 'others')
						referenceNo = detail.otheraccno ? detail.otheraccno : 'Not Added';;
					if (detail.type == 'National Committee on Accreditation')
						referenceNo = detail.ncano ? detail.ncano : 'Not Added';;
					if (detail.type == 'HRD')
						referenceNo = detail.hrdno ? detail.hrdno : 'Not Added';;

					data.push({
						id: detail.id,
						university_name: detail.university_name,
						email: email,
						country_name: detail.country_name,
						contact_number: detail.contact_number,
						status: status,
						contact_person: detail.contact_person,
						type: detail.type,
						address: detail.address,
						landmark: detail.landmark,
						pincode: detail.pincode,
						reference_no: referenceNo,
						emailAsWes: detail.emailAsWes,
						nameaswes: detail.nameaswes,
						lastnameaswes: detail.lastnameaswes
					})
				});
				if (data.length == allDetails.length) {
					res.json({
						status: 200,
						data: data
					});
				}
			} else {
				res.json({
					status: 400
				});
			}

		});
	}
});

router.post('/sendEmailToStudent', middlewares.getUserInfo, function (req, res) {
	console.log("sendEmailToStudent");
	var value = req.body.value
	var email = req.body.email;
	setTimeout(function () {
		request.post(constant.BASE_URL_SENDGRID + 'sendEmailToStudent_AdminSide', {
			json: {
				email: email,
				value: value
			}
		}, function (error, response, body) {
			console.log("response" + JSON.stringify(response));
			console.log("response" + JSON.stringify(body));
			if (response) {
				res.json({
					status: 200
				})
			} else {
				res.json({
					status: 400
				})
			}
		})
	}, 1000);


});
router.get('/getHRDInstituteData', middlewares.getUserInfo, function (req, res) {
	console.log('/getHRDInstituteData');

	models.Hrd_details.findAll({
		where: {
			user_id: req.User.id,
			app_id: null
		}
	}).then(function (gethrd_Data) {
		if (gethrd_Data.length > 0) {
			res.json({
				status: 200,
				hrddata: gethrd_Data
			})
		} else {
			res.json({
				status: 400,
			})
		}
	})
});

router.post('/createInstitute', middlewares.getUserInfo, middlewares.getUserEducationalInfo, function (req, res) {
	console.log('/createInstitute');
	var universityName = req.body.universityName;
	var country = req.body.country;
	var studyrefno = req.body.studyrefno;
	var myieeno = req.body.myieeno;
	var icesno = req.body.icesno;
	var emprefno = req.body.emprefno;
	var visarefno = req.body.visarefno;
	var email = req.body.email;
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	if (email) {
		emailArr = email.split(', ');
		if (emailArr.length > 1) {
			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		} else {
			anotherEmailArr = email;
			anotherEmail = null;
		}
	} else {
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	var contactNumber = req.body.contactNumber;
	var user_id = req.User.id;
	var contact_person = req.body.contact_person;
	var address = req.body.address;
	var landmark = req.body.landmark;
	var pincode = req.body.pincode;
	var wesNumber = req.body.wesNumber;
	var cesno = req.body.cesno;
	var nasbano = req.body.nasbano;
	var eduperno = req.body.eduperno;
	var iqasno = req.body.iqasno;
	var icasno = req.body.icasno;
	var studyaccno = req.body.studyaccno;
	var empaccno = req.body.empaccno;
	var visaaccno = req.body.visaaccno;
	var accountno = req.body.otheraccno;
	var nceesno = req.body.nceesno;
	var naricno = req.body.naricno;
	var ncano = req.body.ncano;
	var emailAsWes = req.body.emailAsWes;
	var nameaswes = req.body.nameaswes;
	var lastnameaswes = req.body.lastnameaswes;
	var hrdno = req.body.hrdno;
	var amount;
	if (req.User.current_location == "WITHIN") {
		amount = 536 * req.userEducational;
	} else if (req.User.current_location == "OUTSIDE") {
		if (req.User.id == '54944') {
			amount = '100';
		} else if (req.User.id == '54946') {
			amount = '200';
		} else if (req.User.id == '54947') {
			amount = '300';
		} else if (req.User.id == '54948') {
			amount = '400';
		} else if (req.User.id == '54949') {
			amount = '500';
		} else if (req.User.id == '54950') {
			amount = '600';
		} else if (req.User.id == '54951') {
			amount = '700';
		} else if (req.User.id == '54952') {
			amount = '800';
		} else if (req.User.id == '54953') {
			amount = '900';
		} else if (req.User.id == '54954') {
			amount = '1000';
		} else if (req.User.id == '54955') {
			amount = '1100';
		} else if (req.User.id == '54956') {
			amount = '1200';
		} else if (req.User.id == '54957') {
			amount = '1300';
		} else if (req.User.id == '54958') {
			amount = '1400';
		} else if (req.User.id == '54959') {
			amount = '1500';
		} else if (req.User.id == '54961') {
			amount = '1600';
		} else if (req.User.id == '54962') {
			amount = '1700';
		} else if (req.User.id == '54963') {
			amount = '1800';
		} else if (req.User.id == '54964') {
			amount = '1900';
		} else if (req.User.id == '54966') {
			amount = '2000';
		} else {
			amount = 8308 * req.userEducational;
		}
	}
	models.Institution_details.create({
		university_name: (universityName) ? universityName : null,
		country_name: (country) ? country : null,
		email: (emailArr) ? anotherEmailArr : null,
		contact_number: (contactNumber) ? contactNumber : null,
		user_id: user_id,
		contact_person: (contact_person) ? contact_person : null,
		type: req.body.type,
		address: (address) ? address : null,
		landmark: (landmark) ? landmark : null,
		pincode: (pincode) ? pincode : null,
		wesno: (wesNumber) ? wesNumber : null,
		cesno: (cesno) ? cesno : null,
		icesno: (icesno) ? icesno : null,
		eduPerno: (eduperno) ? eduperno : null,
		iqasno: (iqasno) ? iqasno : null,
		icasno: (icasno) ? icasno : null,
		studyrefno: (studyrefno) ? studyrefno : null,
		emprefno: (emprefno) ? emprefno : null,
		visarefno: (visarefno) ? visarefno : null,
		studyaccno: (studyaccno) ? studyaccno : null,
		empaccno: (empaccno) ? empaccno : null,
		visaaccno: (visaaccno) ? visaaccno : null,
		nasbano: (nasbano) ? nasbano : null,
		otheraccno: (accountno) ? accountno : null,
		myieeno: (myieeno) ? myieeno : null,
		OtherEmail: (anotherEmail) ? anotherEmail : null,
		nceesno: (nceesno) ? nceesno : null,
		naricno: (naricno) ? naricno : null,
		ncano: (ncano) ? ncano : null,
		emailAsWes: emailAsWes ? emailAsWes : null,
		nameaswes: (nameaswes) ? nameaswes : null,
		lastnameaswes: (lastnameaswes) ? lastnameaswes : null,
		hrdno: (hrdno) ? hrdno : null,
	}).then(function (data) {
		if (data) {
			models.Cart.create({
				university_name: data.university_name,
				email: data.email,
				fees: amount,
				user_id: user_id,
				institute_id: data.id,
			}).then(function (cart_created) {
				res.json({
					status: 200,
					message: "data is inserted"
				})
			});
		} else {
			res.json({
				status: 400,
				message: "data is not inserted"
			})
		}
	})
});
router.post('/saveWes_FormDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/saveWes_FormDetails');
	var data = req.body.formdata;
	console.log("dataa" + JSON.stringify(data));

	models.Wes_Form.update({
		currentaddress: data.addressCtrl,
		state: data.stateCtrl,
		city: data.cityCtrl,
		postal_code: data.postalCtrl,
		dob: data.dobCtrl,
		institute_name: data.institutionnameCtrl,
		datefrom: data.fromdateCtrl,
		dateto: data.todateCtrl,
		degree: data.degreeCtrl,
		yearaward: data.yearawardCtrl,
		major: data.majorCtrl,
		sturolno: data.rollnoCtrl,
	}, {
		where: {
			user_id: req.User.id
		}
	}).then(function (data) {
		if (data) {
			res.json({
				status: 200,
				message: "data is inserted",
				data: data
			})
		} else {
			res.json({
				status: 400,
				message: "data is not inserted"
			})
		}
	})
});
router.get('/suggestInstitute', middlewares.getUserInfo, function (req, res) {
	console.log('/suggestInstitute');
	models.Institution_details.findAll({
		attributes: [[models.sequelize.fn('DISTINCT', models.sequelize.col('university_name')), 'uni_name']],
	}).then(function (data) {
		if (data) {
			res.json({
				status: 200,
				data: data
			})
		} else {
			res.json({
				status: 400,
				message: "data is not inserted"
			})
		}
	})
})

// for feching values in hrd purpose

router.get('/getHrddata', middlewares.getUserInfo, function (req, res) {
	console.log('/getHrddata');

	var educationDetails = {
		bachelors: [],
		masters: [],
		phd: []
	};


	models.User.findAll({
		where: {
			id: req.User.id
		}
	}).then(function (uservalues) {
		models.Applied_For_Details.findAll({
			where: {
				user_id: req.User.id,
				app_id: null
			}
		}).then(function (user) {

			if (req.query.editFlag == 'true') {
				console.log('true');
				if (req.query.degreeValue == 'Masters,Bachelors') {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: "Masters",
						}
					}).then(function (master_Details) {
						let masters_duration;
						var differentStream = [];
						var masterDetails = [];
						if (master_Details.length > 0) {
							master_Details.forEach(detail => {
								if (detail.app_id != null) {
									var app_idArr = detail.app_id.split(",");
									app_idArr.forEach(app_id => {
										if (app_id == req.query.app_id) {
											masterDetails.push(detail);
										}
									})
								}
							})
						}
						if (masterDetails.length > 0) {
							if (masterDetails[0].college_stream_type == true) {
								let college_List = []
								masterDetails.forEach(master => {
									models.College.find({
										where: {
											id: master.collegeId
										}
									}).then(collegename => {
										if (master.patteren == "Annual") {
											college_List.push({
												clg_name: collegename.name,
												academic_year: master.name
											})
										} else if (master.patteren == "Semester") {
											switch (master.name) {
												case 'Semester 2':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'First Year'
													})
													break;
												case 'Semester 4':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Second Year'
													})
													break;
												case 'Semester 6':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Third Year'
													})
													break;
												case 'Semester 8':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fourth Year'
													})

													break;
												case 'Semester 10':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fifth Year'
													})
													break;
											}
										}
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Masters_' + master.faculty
											}
										}).then(function (instructionalDetails) {
											if (differentStream.length > 0) {
												var flag = false;
												differentStream.forEach(single => {
													if (single.faculty == master.faculty) {
														flag = true;
													}
												})
												if (flag == false) {

													differentStream.push({
														faculty: master.faculty,
														instructionalDetails: instructionalDetails,
														type: master.type
													})
												}
											} else {
												differentStream.push({
													faculty: master.faculty,
													instructionalDetails: instructionalDetails,
													type: master.type
												})
											}
										})
									})
								})
								setTimeout(() => {
									var differentCollege = []
									differentStream.forEach(mast => {
										models.facultymaster.find({
											where: {
												degree: 'Masters',
												faculty: mast.faculty
											}
										}).then(function (facultyMaster) {
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Masters",
													faculty: mast.faculty,
												}
											}).then(function (userMarklist) {
												if (userMarklist.length > 0) {
													if (userMarklist[0].patteren == "Annual") {
														userMarklist.forEach(marklist => {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: mast.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year,
																form: true
															})
														})
													} else if (userMarklist[0].patteren == "Semester") {
														var semesters = facultyMaster.year * 2;
														for (var i = 2; i <= semesters; i = i + 2) {
															var sem = "Semester " + i
															userMarklist.forEach(marklist => {
																if (marklist.name == sem) {
																	differentCollege.push({
																		faculty: marklist.faculty,
																		collegeId: marklist.collegeId,
																		instructionalDetails: mast.instructionalDetails,
																		type: marklist.type,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year,
																		form: true
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(() => {
										var masters = [];
										differentCollege.forEach(coll => {
											var college = [];
											models.College.find({
												where: {
													id: coll.collegeId
												}
											}).then(collegename => {
												if (masters.length > 0) {
													masters.forEach(mast => {
														if (mast.faculty == coll.faculty) {
															mastFlag = true;
															var count = 0;
															mast.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= mast.colleges.length) {
																mast.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															if (mast.instructionalDetails.length > 0) {
																mast.form = true;
															}
														}
													})

													if (mastFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														masters.push({
															faculty: coll.faculty,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															college_name: collegename.name,
															form: true
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													masters.push({
														faculty: coll.faculty,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														college_name: collegename.name,
														form: true
													})
												}
											})
										})
										educationDetails.masters = masters;
										models.userMarkList.findAll({
											where: {
												user_id: req.User.id,
												type: "Bachelors",
											}
										}).then(function (bachelorDetails) {
											// let clg_duration =3;
											var differentStream = [];
											if (bachelorDetails.length > 0) {
												if (bachelorDetails[0].college_stream_type == true) {
													let college_List = [];
													bachelorDetails.forEach(bachelor => {
														models.College.find({
															where: {
																id: bachelor.collegeId
															}
														}).then(collegename => {
															if (bachelor.patteren == "Annual") {
																//academic_year = bachelor.name;
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: bachelor.name
																})
															} else if (bachelor.patteren == "Semester") {
																switch (bachelor.name) {
																	case 'Semester 2':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'First Year'
																		})
																		break;
																	case 'Semester 4':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Second Year'
																		})
																		break;
																	case 'Semester 6':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Third Year'
																		})
																		break;
																	case 'Semester 8':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Fourth Year'
																		})

																		break;
																	case 'Semester 10':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Fifth Year'
																		})
																		break;
																}
															}
															models.InstructionalDetails.findAll({
																where: {
																	userId: req.User.id,
																	education: 'Bachelors_' + bachelor.faculty
																}
															}).then(function (instructionalDetails) {
																if (differentStream.length > 0) {
																	var flag = false;
																	differentStream.forEach(single => {
																		if (single.faculty == bachelor.faculty) {
																			flag = true;
																		}
																	})
																	if (flag == false) {

																		differentStream.push({
																			faculty: bachelor.faculty,
																			instructionalDetails: instructionalDetails,
																			type: bachelor.type,
																		})
																	}
																} else {
																	differentStream.push({
																		faculty: bachelor.faculty,
																		instructionalDetails: instructionalDetails,
																		type: bachelor.type,
																	})
																}
															})
														})
													})
													setTimeout(() => {
														var differentCollege = []
														differentStream.forEach(bach => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bach.faculty
																}
															}).then(function (facultyMaster) {
																models.userMarkList.findAll({
																	where: {
																		user_id: req.User.id,
																		type: "Bachelors",
																		faculty: bach.faculty,
																	}
																}).then(function (userMarklist) {
																	if (userMarklist.length > 0) {
																		if (userMarklist[0].patteren == "Annual") {
																			userMarklist.forEach(marklist => {
																				differentCollege.push({
																					faculty: marklist.faculty,
																					collegeId: marklist.collegeId,
																					instructionalDetails: bach.instructionalDetails,
																					type: marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year
																				})
																			})
																		} else if (userMarklist[0].patteren == "Semester") {
																			var semesters = facultyMaster.year * 2;
																			for (var i = 2; i <= semesters; i = i + 2) {
																				var sem = "Semester " + i
																				userMarklist.forEach(marklist => {
																					if (marklist.name == sem) {
																						differentCollege.push({
																							faculty: marklist.faculty,
																							collegeId: marklist.collegeId,
																							instructionalDetails: bach.instructionalDetails,
																							type: marklist.type,
																							// college_List : college_List,
																							clg_duration: facultyMaster.year
																						})
																					}
																				})
																			}
																		}
																	}
																})
															})
														})
														setTimeout(() => {
															var bachelors = [];
															differentCollege.forEach(coll => {
																var college = [];
																var bachFlag = false;
																if (bachelors.length > 0) {
																	bachelors.forEach(bach => {
																		if (bach.faculty == coll.faculty) {
																			bachFlag = true;
																			var count = 0;
																			bach.colleges.forEach(clg => {
																				if (clg.collegeId == coll.collegeId) {
																					count++;
																				}
																			})
																			if (count <= bach.colleges.length) {
																				bach.colleges.push({
																					collegeId: coll.collegeId
																				})
																			}

																			if (bach.instructionalDetails.length > 0) {
																				bach.form = true;
																			}
																		}
																	})

																	if (bachFlag == false) {
																		college.push({
																			collegeId: coll.collegeId
																		})

																		bachelors.push({
																			faculty: coll.faculty,
																			colleges: college,
																			instructionalDetails: coll.instructionalDetails,
																			college_List: college_List,
																			type: coll.type + ' of ' + coll.faculty,
																			clg_duration: coll.clg_duration,
																		})
																	}
																} else {
																	college.push({
																		collegeId: coll.collegeId
																	})
																	bachelors.push({
																		faculty: coll.faculty,
																		colleges: college,
																		instructionalDetails: coll.instructionalDetails,
																		college_List: college_List,
																		type: coll.type + ' of ' + coll.faculty,
																		clg_duration: coll.clg_duration,
																	})
																}
															})
															educationDetails.bachelors = bachelors;
															res.json({
																status: 200,
																data: educationDetails
															})
														}, 3000)
													}, 4000)

												} else if (bachelorDetails[0].college_stream_type == false) {
													models.College.find({
														where: {
															id: bachelorDetails[0].collegeId
														}
													}).then(collegename => {
														models.facultymaster.find({
															where: {
																degree: 'Bachelors',
																faculty: bachelorDetails[0].faculty
															}
														}).then(function (facultyMaster) {
															models.InstructionalDetails.findAll({
																where: {
																	userId: req.User.id,
																	education: 'Bachelors_' + bachelorDetails[0].faculty
																}
															}).then(function (instructionalDetails) {
																var college = [];
																college.push({
																	collegeId: bachelorDetails[0].collegeId
																})
																educationDetails.bachelors.push({
																	faculty: bachelorDetails[0].faculty,
																	colleges: college,
																	instructionalDetails: instructionalDetails,
																	type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																	college_name: collegename.name,
																	clg_duration: facultyMaster.year,
																})
																res.json({
																	status: 200,
																	data: educationDetails
																})
															})
														})
													})
												}
											}
										})
									}, 3000)
								}, 4000)

							} else if (masterDetails[0].college_stream_type == false) {
								models.College.find({
									where: {
										id: masterDetails[0].collegeId
									}
								}).then(master_collegename => {
									models.facultymaster.find({
										where: {
											degree: 'Masters',
											faculty: masterDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Masters_' + masterDetails[0].faculty
											}
										}).then(function (instructionalDetails) {
											var college = [];
											college.push({
												collegeId: masterDetails[0].collegeId
											})
											educationDetails.masters.push({
												faculty: masterDetails[0].faculty,
												colleges: college,
												instructionalDetails: instructionalDetails,
												type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
												college_name: master_collegename.name,
												clg_duration: facultyMaster.year,
												form: true
											})
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Bachelors",
												}
											}).then(function (bachelorDetails) {
												var differentStream = [];
												let clg_duration;
												if (bachelorDetails.length > 0) {
													if (bachelorDetails[0].college_stream_type == true) {
														let college_List = [];
														bachelorDetails.forEach(bachelor => {
															models.College.find({
																where: {
																	id: bachelor.collegeId
																}
															}).then(collegename => {
																if (bachelor.patteren == "Annual") {
																	//academic_year = bachelor.name;
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: bachelor.name
																	})
																} else if (bachelor.patteren == "Semester") {
																	switch (bachelor.name) {
																		case 'Semester 2':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'First Year'
																			})
																			break;
																		case 'Semester 4':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Second Year'
																			})
																			break;
																		case 'Semester 6':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Third Year'
																			})
																			break;
																		case 'Semester 8':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fourth Year'
																			})

																			break;
																		case 'Semester 10':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fifth Year'
																			})
																			break;
																	}
																}
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelor.faculty
																	}
																}).then(function (instructionalDetails) {
																	if (differentStream.length > 0) {
																		var flag = false;
																		differentStream.forEach(single => {
																			if (single.faculty == bachelor.faculty) {
																				flag = true;
																			}
																		})
																		if (flag == false) {

																			differentStream.push({
																				faculty: bachelor.faculty,
																				instructionalDetails: instructionalDetails,
																				type: bachelor.type,
																			})
																		}
																	} else {
																		differentStream.push({
																			faculty: bachelor.faculty,
																			instructionalDetails: instructionalDetails,
																			type: bachelor.type,
																		})
																	}
																})
															})
														})
														setTimeout(() => {
															var differentCollege = []
															differentStream.forEach(bach => {
																models.facultymaster.find({
																	where: {
																		degree: 'Bachelors',
																		faculty: bach.faculty
																	}
																}).then(function (facultyMaster) {
																	models.userMarkList.findAll({
																		where: {
																			user_id: req.User.id,
																			type: "Bachelors",
																			faculty: bach.faculty,
																		}
																	}).then(function (userMarklist) {
																		if (userMarklist.length > 0) {
																			if (userMarklist[0].patteren == "Annual") {
																				userMarklist.forEach(marklist => {
																					differentCollege.push({
																						faculty: marklist.faculty,
																						collegeId: marklist.collegeId,
																						instructionalDetails: bach.instructionalDetails,
																						// college_List : college_List,
																						type: user_Marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				})
																			} else if (userMarklist[0].patteren == "Semester") {
																				var semesters = facultyMaster.year * 2;
																				for (var i = 2; i <= semesters; i = i + 2) {
																					var sem = "Semester " + i
																					userMarklist.forEach(marklist => {
																						if (marklist.name == sem) {
																							differentCollege.push({
																								faculty: marklist.faculty,
																								collegeId: marklist.collegeId,
																								instructionalDetails: bach.instructionalDetails,
																								// college_List : college_List,
																								type: user_Marklist.type,
																								clg_duration: facultyMaster.year
																							})
																						}
																					})
																				}
																			}
																		}
																	})
																})
															})
															setTimeout(() => {
																var bachelors = [];
																differentCollege.forEach(coll => {
																	var college = [];
																	var bachFlag = false;
																	if (bachelors.length > 0) {
																		bachelors.forEach(bach => {
																			if (bach.faculty == coll.faculty) {
																				bachFlag = true;
																				var count = 0;
																				bach.colleges.forEach(clg => {
																					if (clg.collegeId == coll.collegeId) {
																						count++;
																					}
																				})
																				if (count <= bach.colleges.length) {
																					bach.colleges.push({
																						collegeId: coll.collegeId
																					})
																				}

																				if (bach.instructionalDetails.length > 0) {
																					bach.form = true;
																				}
																			}
																		})

																		if (bachFlag == false) {
																			college.push({
																				collegeId: coll.collegeId
																			})

																			bachelors.push({
																				faculty: coll.faculty,
																				colleges: college,
																				instructionalDetails: coll.instructionalDetails,
																				type: coll.type + ' of ' + coll.faculty,
																				college_List: college_List,
																				clg_duration: coll.clg_duration,
																			})
																		}
																	} else {
																		college.push({
																			collegeId: coll.collegeId
																		})
																		bachelors.push({
																			faculty: coll.faculty,
																			colleges: college,
																			instructionalDetails: coll.instructionalDetails,
																			type: coll.type + ' of ' + coll.faculty,
																			college_List: college_List,
																			clg_duration: coll.clg_duration,
																		})
																	}
																})
																educationDetails.bachelors = bachelors;

															}, 3000)
														}, 4000)

													} else if (bachelorDetails[0].college_stream_type == false) {
														models.College.find({
															where: {
																id: bachelorDetails[0].collegeId
															}
														}).then(collegename => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bachelorDetails[0].faculty
																}
															}).then(function (facultyMaster) {
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelorDetails[0].faculty
																	}
																}).then(function (instructionalDetails) {
																	var college = [];
																	college.push({
																		collegeId: bachelorDetails[0].collegeId
																	})
																	educationDetails.bachelors.push({
																		faculty: bachelorDetails[0].faculty,
																		colleges: college,
																		instructionalDetails: instructionalDetails,
																		type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																		college_name: collegename.name,
																		clg_duration: facultyMaster.year,
																		form: true
																	})
																})
															})
														})
													}
												}
											})
											setTimeout(() => {
												res.json({
													status: 200,
													data: educationDetails
												})
											}, 2000);
										})
									})
								})
							}
						}
					})
				} else if (req.query.degreeValue == 'Bachelors') {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: "Bachelors",
						}
					}).then(function (bachelor_Details) {
						let clg_duration;
						var differentStream = [];
						var bachelorDetails = [];
						if (bachelor_Details.length > 0) {
							bachelor_Details.forEach(detail => {
								if (detail.app_id != null) {
									var app_idArr = detail.app_id.split(",");
									app_idArr.forEach(app_id => {
										if (app_id == req.query.app_id) {
											bachelorDetails.push(detail);
										}
									})
								}
							})
						}
						if (bachelorDetails.length > 0) {
							if (bachelorDetails[0].college_stream_type == true) {
								let college_List = [];
								bachelorDetails.forEach(bachelor => {
									models.College.find({
										where: {
											id: bachelor.collegeId
										}
									}).then(collegename => {
										if (bachelor.patteren == "Annual") {
											//academic_year = bachelor.name;
											college_List.push({
												clg_name: collegename.name,
												academic_year: bachelor.name
											})
										} else if (bachelor.patteren == "Semester") {
											switch (bachelor.name) {
												case 'Semester 2':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'First Year'
													})
													break;
												case 'Semester 4':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Second Year'
													})
													break;
												case 'Semester 6':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Third Year'
													})
													break;
												case 'Semester 8':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fourth Year'
													})

													break;
												case 'Semester 10':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fifth Year'
													})
													break;
											}
										}
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Bachelors_' + bachelor.faculty
											}
										}).then(function (instructionalDetails) {
											if (differentStream.length > 0) {
												var flag = false;
												differentStream.forEach(single => {
													if (single.faculty == bachelor.faculty) {
														flag = true;
													}
												})
												if (flag == false) {

													differentStream.push({
														faculty: bachelor.faculty,
														instructionalDetails: instructionalDetails,
														type: bachelor.type
													})
												}
											} else {
												differentStream.push({
													faculty: bachelor.faculty,
													instructionalDetails: instructionalDetails,
													type: bachelor.type
												})
											}
										})
									})
								})
								setTimeout(() => {
									var differentCollege = []
									differentStream.forEach(bach => {
										models.facultymaster.find({
											where: {
												degree: 'Bachelors',
												faculty: bach.faculty
											}
										}).then(function (facultyMaster) {
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Bachelors",
													faculty: bach.faculty,
												}
											}).then(function (userMarklist) {
												if (userMarklist.length > 0) {
													if (userMarklist[0].patteren == "Annual") {
														userMarklist.forEach(marklist => {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														})
													} else if (userMarklist[0].patteren == "Semester") {
														var semesters = facultyMaster.year * 2;
														for (var i = 2; i <= semesters; i = i + 2) {
															var sem = "Semester " + i
															userMarklist.forEach(marklist => {
																if (marklist.name == sem) {
																	differentCollege.push({
																		faculty: marklist.faculty,
																		collegeId: marklist.collegeId,
																		instructionalDetails: bach.instructionalDetails,
																		type: marklist.type,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(() => {
										var bachelors = [];
										differentCollege.forEach(coll => {
											var college = [];
											var bachFlag = false;
											if (bachelors.length > 0) {
												bachelors.forEach(bach => {
													if (bach.faculty == coll.faculty) {
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg => {
															if (clg.collegeId == coll.collegeId) {
																count++;
															}
														})
														if (count <= bach.colleges.length) {
															bach.colleges.push({
																collegeId: coll.collegeId
															})
														}

														if (bach.instructionalDetails.length > 0) {
															bach.form = true;
														}
													}
												})

												if (bachFlag == false) {
													college.push({
														collegeId: coll.collegeId
													})

													bachelors.push({
														faculty: coll.faculty,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration
													})
												}
											} else {
												college.push({
													collegeId: coll.collegeId
												})
												bachelors.push({
													faculty: coll.faculty,
													colleges: college,
													instructionalDetails: coll.instructionalDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration
												})
											}
										})
										educationDetails.bachelors = bachelors;
										res.json({
											status: 200,
											data: educationDetails
										})
									}, 3000)
								}, 4000)

							} else if (bachelorDetails[0].college_stream_type == false) {
								console.log('in false');
								models.College.find({
									where: {
										id: bachelorDetails[0].collegeId
									}
								}).then(collegename => {
									models.facultymaster.find({
										where: {
											degree: 'Bachelors',
											faculty: bachelorDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Bachelors_' + bachelorDetails[0].faculty
											}
										}).then(function (instructionalDetails) {
											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty: bachelorDetails[0].faculty,
												colleges: college,
												instructionalDetails: instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration: facultyMaster.year,
												form: true
											})
											res.json({
												status: 200,
												data: educationDetails
											})
										})
									})
								})
							}
						}
					})
				} else if (req.query.degreeValue == 'Masters') {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: "Masters",
						}
					}).then(function (bachelor_Details) {
						let clg_duration;
						var differentStream = [];
						var bachelorDetails = [];
						if (bachelor_Details.length > 0) {
							bachelor_Details.forEach(detail => {
								if (detail.app_id != null) {
									var app_idArr = detail.app_id.split(",");
									app_idArr.forEach(app_id => {
										if (app_id == req.query.app_id) {
											bachelorDetails.push(detail);
										}
									})
								}
							})
						}
						if (bachelorDetails.length > 0) {
							if (bachelorDetails[0].college_stream_type == true) {
								let college_List = [];
								bachelorDetails.forEach(bachelor => {
									models.College.find({
										where: {
											id: bachelor.collegeId
										}
									}).then(collegename => {
										if (bachelor.patteren == "Annual") {
											//academic_year = bachelor.name;
											college_List.push({
												clg_name: collegename.name,
												academic_year: bachelor.name
											})
										} else if (bachelor.patteren == "Semester") {
											switch (bachelor.name) {
												case 'Semester 2':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'First Year'
													})
													break;
												case 'Semester 4':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Second Year'
													})
													break;
												case 'Semester 6':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Third Year'
													})
													break;
												case 'Semester 8':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fourth Year'
													})

													break;
												case 'Semester 10':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fifth Year'
													})
													break;
											}
										}
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Masters_' + bachelor.faculty
											}
										}).then(function (instructionalDetails) {
											if (differentStream.length > 0) {
												var flag = false;
												differentStream.forEach(single => {
													if (single.faculty == bachelor.faculty) {
														flag = true;
													}
												})
												if (flag == false) {

													differentStream.push({
														faculty: bachelor.faculty,
														instructionalDetails: instructionalDetails,
														type: bachelor.type
													})
												}
											} else {
												differentStream.push({
													faculty: bachelor.faculty,
													instructionalDetails: instructionalDetails,
													type: bachelor.type
												})
											}
										})
									})
								})
								setTimeout(() => {
									var differentCollege = []
									differentStream.forEach(bach => {
										models.facultymaster.find({
											where: {
												degree: 'Masters',
												faculty: bach.faculty
											}
										}).then(function (facultyMaster) {
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Masters",
													faculty: bach.faculty,
												}
											}).then(function (userMarklist) {
												if (userMarklist.length > 0) {
													if (userMarklist[0].patteren == "Annual") {
														userMarklist.forEach(marklist => {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														})
													} else if (userMarklist[0].patteren == "Semester") {
														var semesters = facultyMaster.year * 2;
														for (var i = 2; i <= semesters; i = i + 2) {
															var sem = "Semester " + i
															userMarklist.forEach(marklist => {
																if (marklist.name == sem) {
																	differentCollege.push({
																		faculty: marklist.faculty,
																		collegeId: marklist.collegeId,
																		instructionalDetails: bach.instructionalDetails,
																		type: marklist.type,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(() => {
										var masters = [];
										differentCollege.forEach(coll => {
											var college = [];
											var bachFlag = false;
											if (masters.length > 0) {
												masters.forEach(bach => {
													if (bach.faculty == coll.faculty) {
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg => {
															if (clg.collegeId == coll.collegeId) {
																count++;
															}
														})
														if (count <= bach.colleges.length) {
															bach.colleges.push({
																collegeId: coll.collegeId
															})
														}

														if (bach.instructionalDetails.length > 0) {
															bach.form = true;
														}
													}
												})

												if (bachFlag == false) {
													college.push({
														collegeId: coll.collegeId
													})

													masters.push({
														faculty: coll.faculty,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration
													})
												}
											} else {
												college.push({
													collegeId: coll.collegeId
												})
												masters.push({
													faculty: coll.faculty,
													colleges: college,
													instructionalDetails: coll.instructionalDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration
												})
											}
										})
										educationDetails.masters = masters;
										res.json({
											status: 200,
											data: educationDetails
										})
									}, 3000)
								}, 4000)

							} else if (bachelorDetails[0].college_stream_type == false) {
								console.log('in false');
								models.College.find({
									where: {
										id: bachelorDetails[0].collegeId
									}
								}).then(collegename => {
									models.facultymaster.find({
										where: {
											degree: 'Masters',
											faculty: bachelorDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Masters_' + bachelorDetails[0].faculty
											}
										}).then(function (instructionalDetails) {
											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.masters.push({
												faculty: bachelorDetails[0].faculty,
												colleges: college,
												instructionalDetails: instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												college_name: collegename.name,
												clg_duration: facultyMaster.year,
												form: true
											})
											res.json({
												status: 200,
												data: educationDetails
											})
										})
									})
								})
							}
						}
					})
				} else if (req.query.degreeValue == 'Phd,Masters,Bachelors') {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: "Phd",
						}
					}).then(function (bachelor_Details) {
						let clg_duration;
						var differentStream = [];
						var bachelorDetails = [];
						if (bachelor_Details.length > 0) {
							bachelor_Details.forEach(detail => {
								if (detail.app_id != null) {
									var app_idArr = detail.app_id.split(",");
									app_idArr.forEach(app_id => {
										if (app_id == req.query.app_id) {
											bachelorDetails.push(detail);
										}
									})
								}
							})
						}
						if (bachelorDetails.length > 0) {
							if (bachelorDetails[0].college_stream_type == true) {
								let college_List = [];
								bachelorDetails.forEach(bachelor => {
									models.College.find({
										where: {
											id: bachelor.collegeId
										}
									}).then(collegename => {
										if (bachelor.patteren == "Annual") {
											//academic_year = bachelor.name;
											college_List.push({
												clg_name: collegename.name,
												academic_year: bachelor.name
											})
										} else if (bachelor.patteren == "Semester") {
											switch (bachelor.name) {
												case 'Semester 2':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'First Year'
													})
													break;
												case 'Semester 4':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Second Year'
													})
													break;
												case 'Semester 6':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Third Year'
													})
													break;
												case 'Semester 8':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fourth Year'
													})

													break;
												case 'Semester 10':
													college_List.push({
														clg_name: collegename.name,
														academic_year: 'Fifth Year'
													})
													break;
											}
										}
										models.InstructionalDetails.findAll({
											where: {
												userId: req.User.id,
												education: 'Masters_' + bachelor.faculty
											}
										}).then(function (instructionalDetails) {
											if (differentStream.length > 0) {
												var flag = false;
												differentStream.forEach(single => {
													if (single.faculty == bachelor.faculty) {
														flag = true;
													}
												})
												if (flag == false) {

													differentStream.push({
														faculty: bachelor.faculty,
														instructionalDetails: instructionalDetails,
														type: bachelor.type
													})
												}
											} else {
												differentStream.push({
													faculty: bachelor.faculty,
													instructionalDetails: instructionalDetails,
													type: bachelor.type
												})
											}
										})
									})
								})
								setTimeout(() => {
									var differentCollege = []
									differentStream.forEach(bach => {
										models.facultymaster.find({
											where: {
												degree: 'Masters',
												faculty: bach.faculty
											}
										}).then(function (facultyMaster) {
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Masters",
													faculty: bach.faculty,
												}
											}).then(function (userMarklist) {
												if (userMarklist.length > 0) {
													if (userMarklist[0].patteren == "Annual") {
														userMarklist.forEach(marklist => {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														})
													} else if (userMarklist[0].patteren == "Semester") {
														var semesters = facultyMaster.year * 2;
														for (var i = 2; i <= semesters; i = i + 2) {
															var sem = "Semester " + i
															userMarklist.forEach(marklist => {
																if (marklist.name == sem) {
																	differentCollege.push({
																		faculty: marklist.faculty,
																		collegeId: marklist.collegeId,
																		instructionalDetails: bach.instructionalDetails,
																		type: marklist.type,
																		// college_List : college_List,
																		clg_duration: facultyMaster.year
																	})
																}
															})
														}
													}
												}
											})
										})
									})
									setTimeout(() => {
										var masters = [];
										differentCollege.forEach(coll => {
											var college = [];
											var bachFlag = false;
											if (masters.length > 0) {
												masters.forEach(bach => {
													if (bach.faculty == coll.faculty) {
														bachFlag = true;
														var count = 0;
														bach.colleges.forEach(clg => {
															if (clg.collegeId == coll.collegeId) {
																count++;
															}
														})
														if (count <= bach.colleges.length) {
															bach.colleges.push({
																collegeId: coll.collegeId
															})
														}

														if (bach.instructionalDetails.length > 0) {
															bach.form = true;
														}
													}
												})

												if (bachFlag == false) {
													college.push({
														collegeId: coll.collegeId
													})

													masters.push({
														faculty: coll.faculty,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration
													})
												}
											} else {
												college.push({
													collegeId: coll.collegeId
												})
												masters.push({
													faculty: coll.faculty,
													colleges: college,
													instructionalDetails: coll.instructionalDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration
												})
											}
										})
										educationDetails.masters = masters;
										res.json({
											status: 200,
											data: educationDetails
										})
									}, 3000)
								}, 4000)

							} else if (bachelorDetails[0].college_stream_type == false) {
								console.log('in false');
								models.College.find({
									where: {
										id: bachelorDetails[0].collegeId
									}
								}).then(collegename => {
									models.facultymaster.find({
										where: {
											degree: 'Phd',
											faculty: bachelorDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Phd_' + bachelorDetails[0].faculty
										// 	}
										// }).then(function(instructionalDetails){
										var college = [];
										var form;
										// if(instructionalDetails.length > 0){
										// 	form = true;
										// }else{
										// 	form = false;	
										// }
										college.push({
											collegeId: bachelorDetails[0].collegeId
										})
										educationDetails.phd.push({
											faculty: bachelorDetails[0].faculty,
											colleges: college,
											// instructionalDetails : instructionalDetails,
											type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
											college_name: collegename.name,
											clg_duration: facultyMaster.year,
											form: true
										})
										res.json({
											status: 200,
											data: educationDetails
										})
										// })
									})
								})
							}
						}
					})
				}
			} else {
				if (user) {
					if (user[0].applying_for == 'Masters,Bachelors') {
						console.log("'Masters,Bachelors");
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Masters",
								// app_id : null
							}
						}).then(function (masterDetails) {
							let masters_duration;
							var differentStream = [];
							if (masterDetails.length > 0) {
								if (masterDetails[0].college_stream_type == true) {
									console.log("colege strea,, true");
									let college_List = []
									let academic_year_master = []
									masterDetails.forEach(master => {
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + master.faculty
										// 	}
										// }).then(function(instructionalDetails){
										// if(differentStream.length > 0){
										// 	var flag = false;
										// 	differentStream.forEach(single=>{
										// 		if(single.faculty == master.faculty){
										// 			flag = true;
										// 		}
										// 	})
										// 	if(flag == false){

										// 		differentStream.push({
										// 			faculty : master.faculty,
										// 			instructionalDetails : instructionalDetails,
										// 			type : master.type
										// 		})
										// 	}
										// }else{
										differentStream.push({
											patteren: master.patteren,
											faculty: master.faculty,
											instructionalDetails: instructionalDetails,
											type: master.type
										})
										// }
										// })
										// })
									})
									setTimeout(() => {
										/** Updating college list **/
										// jsonObject = college_List.map(JSON.stringify);
										// console.log("Data===>"+jsonObject);
										// uniqueSet = new Set(jsonObject);
										// Updated_list = Array.from(uniqueSet).map(JSON.parse);
										/** Updating college list **/
										var differentCollege = []
										differentStream.forEach(mast => {
											console.log("mast==>" + JSON.stringify(mast))
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: mast.faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Masters",
														faculty: mast.faculty,
														app_id: null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// academic_year_master.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	patteren: marklist.patteren,

																	faculty: marklist.faculty,
																	collegeId: marklist.collegeId,
																	instructionalDetails: mast.instructionalDetails,
																	type: marklist.type,
																	// college_List : college_List,
																	clg_duration: facultyMaster.year,
																	college_name: marklist.name
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	academic_year_master.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	academic_year_master.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			collegeId: marklist.collegeId,
																			instructionalDetails: mast.instructionalDetails,
																			type: marklist.type,
																			patteren: marklist.patteren,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year,
																			// college_name: collegename.name,
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											var masters = [];
											differentCollege.forEach(coll => {
												console.log("coll==." + JSON.stringify(coll))
												models.College.find({
													where: {
														id: coll.collegeId
													}
												}).then(collegename => {

													var mastFlag = false
													var college = [];
													if (masters.length > 0) {
														masters.forEach(mast => {
															if (mast.faculty == coll.faculty) {
																mastFlag = true;
																var count = 0;
																mast.colleges.forEach(clg => {
																	if (clg.collegeId == coll.collegeId) {
																		count++;
																	}
																})
																if (count <= mast.colleges.length) {
																	mast.colleges.push({
																		collegeId: coll.collegeId
																	})
																}

																if (mast.instructionalDetails.length >= 0) {
																	mast.form = true;
																}
															}
														})

														if (mastFlag == false) {
															college.push({
																collegeId: coll.collegeId
															})

															masters.push({
																faculty: coll.faculty,
																colleges: college,
																instructionalDetails: coll.instructionalDetails,
																type: coll.type + ' of ' + coll.faculty,
																college_List: college_List,
																clg_duration: coll.clg_duration,
																college_name: collegename.name,
																form: true,
																patteren: coll.patteren,
																// academic_year : academic_year_master
															})
														}
													} else {
														college.push({
															collegeId: coll.collegeId
														})
														masters.push({
															faculty: coll.faculty,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															college_name: collegename.name,
															form: true,
															patteren: coll.patteren,
															// academic_year : academic_year_master
														})
													}
												})
											})
											educationDetails.masters = masters;
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Bachelors",
													app_id: null
												}
											}).then(function (bachelorDetails) {
												let clg_duration;
												var differentStream = [];
												// let academic_year_list =[];	
												if (bachelorDetails.length > 0) {
													if (bachelorDetails[0].college_stream_type == true) {
														let college_List = [];
														bachelorDetails.forEach(bachelor => {
															models.College.find({
																where: {
																	id: bachelor.collegeId
																}
															}).then(collegename => {
																if (bachelor.patteren == "Annual") {
																	//academic_year = bachelor.name;
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: bachelor.name
																	})
																} else if (bachelor.patteren == "Semester") {
																	switch (bachelor.name) {
																		case 'Semester 2':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'First Year'
																			})
																			break;
																		case 'Semester 4':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Second Year'
																			})
																			break;
																		case 'Semester 6':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Third Year'
																			})
																			break;
																		case 'Semester 8':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fourth Year'
																			})

																			break;
																		case 'Semester 10':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fifth Year'
																			})
																			break;
																	}
																}
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelor.faculty
																	}
																}).then(function (instructionalDetails) {
																	if (differentStream.length > 0) {
																		var flag = false;
																		differentStream.forEach(single => {
																			if (single.faculty == bachelor.faculty) {
																				flag = true;
																			}
																		})
																		if (flag == false) {

																			differentStream.push({
																				faculty: bachelor.faculty,
																				instructionalDetails: instructionalDetails,
																				type: bachelor.type,
																			})
																		}
																	} else {
																		differentStream.push({
																			faculty: bachelor.faculty,
																			instructionalDetails: instructionalDetails,
																			type: bachelor.type,
																		})
																	}
																})
															})
														})
														setTimeout(() => {
															/** Updating college list **/
															// jsonObject = college_List.map(JSON.stringify);
															// console.log("Data===>"+jsonObject);
															// uniqueSet = new Set(jsonObject);
															// Updated_list = Array.from(uniqueSet).map(JSON.parse);
															/** Updating college list **/
															var differentCollege = []
															differentStream.forEach(bach => {
																models.facultymaster.find({
																	where: {
																		degree: 'Bachelors',
																		faculty: bach.faculty
																	}
																}).then(function (facultyMaster) {
																	models.userMarkList.findAll({
																		where: {
																			user_id: req.User.id,
																			type: "Bachelors",
																			faculty: bach.faculty,
																			app_id: null
																		}
																	}).then(function (userMarklist) {
																		if (userMarklist.length > 0) {
																			if (userMarklist[0].patteren == "Annual") {
																				userMarklist.forEach(marklist => {
																					// academic_year_list.push({
																					// 	academic_year : marklist.name
																					// })
																					differentCollege.push({
																						patteren: marklist.patteren,
																						faculty: marklist.faculty,
																						collegeId: marklist.collegeId,
																						instructionalDetails: bach.instructionalDetails,
																						type: marklist.type,
																						// college_List : college_List.push,
																						clg_duration: facultyMaster.year
																					})
																				})
																			} else if (userMarklist[0].patteren == "Semester") {
																				var semesters = facultyMaster.year * 2;
																				for (var i = 2; i <= semesters; i = i + 2) {
																					var sem = "Semester " + i
																					userMarklist.forEach(marklist => {
																						if (marklist.name == sem) {
																							// if(marklist.name == 'Semester 2'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'First Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 4'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Second Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 6'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Third Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 8'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Fourth Year'
																							// 	})
																							// }
																							differentCollege.push({
																								faculty: marklist.faculty,
																								patteren: marklist.patteren,
																								collegeId: marklist.collegeId,
																								instructionalDetails: bach.instructionalDetails,
																								type: marklist.type,
																								// college_List : college_List,
																								clg_duration: facultyMaster.year,
																								form: true
																							})
																						}
																					})
																				}
																			}
																		}
																	})
																})
															})
															setTimeout(() => {
																var bachelors = [];
																differentCollege.forEach(coll => {
																	var college = [];
																	var bachFlag = false;
																	if (bachelors.length > 0) {
																		bachelors.forEach(bach => {
																			if (bach.faculty == coll.faculty) {
																				bachFlag = true;
																				var count = 0;
																				bach.colleges.forEach(clg => {
																					if (clg.collegeId == coll.collegeId) {
																						count++;
																					}
																				})
																				if (count <= bach.colleges.length) {
																					bach.colleges.push({
																						collegeId: coll.collegeId
																					})
																				}

																				if (bach.instructionalDetails.length >= 0) {
																					bach.form = true;
																				}
																			}
																		})

																		if (bachFlag == false) {
																			college.push({
																				collegeId: coll.collegeId
																			})

																			bachelors.push({
																				faculty: coll.faculty,
																				patteren: coll.patteren,
																				colleges: college,
																				instructionalDetails: coll.instructionalDetails,
																				college_List: college_List,
																				type: coll.type + ' of ' + coll.faculty,
																				clg_duration: coll.clg_duration,
																				form: true
																				// academic_year : academic_year_list
																			})
																		}
																	} else {
																		college.push({
																			collegeId: coll.collegeId
																		})
																		bachelors.push({
																			faculty: coll.faculty,
																			colleges: college,
																			patteren: coll.patteren,
																			instructionalDetails: coll.instructionalDetails,
																			college_List: college_List,
																			type: coll.type + ' of ' + coll.faculty,
																			clg_duration: coll.clg_duration,
																			// academic_year : academic_year_list
																		})
																	}
																})
																educationDetails.bachelors = bachelors;
																res.json({
																	status: 200,
																	data: educationDetails
																})
															}, 3000)
														}, 4000)

													} else if (bachelorDetails[0].college_stream_type == false) {
														models.College.find({
															where: {
																id: bachelorDetails[0].collegeId
															}
														}).then(collegename => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bachelorDetails[0].faculty
																}
															}).then(function (facultyMaster) {
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelorDetails[0].faculty
																	}
																}).then(function (instructionalDetails) {
																	var college = [];
																	college.push({
																		collegeId: bachelorDetails[0].collegeId
																	})
																	educationDetails.bachelors.push({
																		faculty: bachelorDetails[0].faculty,
																		patteren: bachelorDetails[0].patteren,
																		colleges: college,
																		instructionalDetails: instructionalDetails,
																		type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																		college_name: collegename.name,
																		clg_duration: facultyMaster.year,
																		form: true
																	})
																	res.json({
																		status: 200,
																		data: educationDetails
																	})
																})
															})
														})
													}
												}
											})
										}, 3000)
									}, 4000)

								} else if (masterDetails[0].college_stream_type == false) {
									console.log("inside stream false");
									// models.College.find({
									// 	where :{
									// 		id : masterDetails[0].collegeId
									// 	}
									// }).then(master_collegename=>{
									models.facultymaster.find({
										where: {
											degree: 'Masters',
											faculty: masterDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + masterDetails[0].faculty
										// 	}
										// }).then(function(instructionalDetails){
										var college = [];
										college.push({
											collegeId: masterDetails[0].collegeId
										})
										educationDetails.masters.push({
											patteren: masterDetails[0].patteren,
											type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
											fullName: uservalues[0].name + ' ' + uservalues[0].surname
										})
										models.userMarkList.findAll({
											where: {
												user_id: req.User.id,
												type: "Bachelors",
												app_id: null
											}
										}).then(function (bachelorDetails) {
											// let clg_duration ;
											var differentStream = [];
											if (bachelorDetails.length > 0) {
												if (bachelorDetails[0].college_stream_type == true) {
													let college_List = [];
													bachelorDetails.forEach(bachelor => {
														models.College.find({
															where: {
																id: bachelor.collegeId
															}
														}).then(collegename => {
															if (bachelor.patteren == "Annual") {
																//academic_year = bachelor.name;
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: bachelor.name
																})
															} else if (bachelor.patteren == "Semester") {
																switch (bachelor.name) {
																	case 'Semester 2':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'First Year'
																		})
																		break;
																	case 'Semester 4':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Second Year'
																		})
																		break;
																	case 'Semester 6':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Third Year'
																		})
																		break;
																	case 'Semester 8':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Fourth Year'
																		})

																		break;
																	case 'Semester 10':
																		college_List.push({
																			clg_name: collegename.name,
																			academic_year: 'Fifth Year'
																		})
																		break;
																}
															}
															models.InstructionalDetails.findAll({
																where: {
																	userId: req.User.id,
																	education: 'Bachelors_' + bachelor.faculty
																}
															}).then(function (instructionalDetails) {
																if (differentStream.length > 0) {
																	var flag = false;
																	differentStream.forEach(single => {
																		if (single.faculty == bachelor.faculty) {
																			flag = true;
																		}
																	})
																	if (flag == false) {

																		differentStream.push({
																			faculty: bachelor.faculty,
																			instructionalDetails: instructionalDetails,
																			type: bachelor.type,
																			patteren: bachelor.patteren,

																		})
																	}
																} else {
																	differentStream.push({
																		faculty: bachelor.faculty,
																		instructionalDetails: instructionalDetails,
																		type: bachelor.type,
																		patteren: bachelor.patteren,
																	})
																}
															})
														})
													})
													setTimeout(() => {
														var differentCollege = []
														differentStream.forEach(bach => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bach.faculty
																}
															}).then(function (facultyMaster) {
																models.userMarkList.findAll({
																	where: {
																		user_id: req.User.id,
																		type: "Bachelors",
																		faculty: bach.faculty,
																	}
																}).then(function (userMarklist) {
																	if (userMarklist.length > 0) {
																		userMarklist.forEach(user_Marklist => {
																			if (user_Marklist.patteren == "Annual") {
																				differentCollege.push({
																					faculty: user_Marklist.faculty,
																					patteren: user_Marklist.patteren,
																					collegeId: user_Marklist.collegeId,
																					instructionalDetails: bach.instructionalDetails,
																					// college_List : college_List,
																					type: user_Marklist.type,
																					clg_duration: facultyMaster.year
																				})
																			} else if (user_Marklist.patteren == "Semester") {
																				var semesters = facultyMaster.year * 2;
																				for (var i = 2; i <= semesters; i = i + 2) {
																					var sem = "Semester " + i
																					if (user_Marklist.name == sem) {
																						differentCollege.push({
																							faculty: user_Marklist.faculty,
																							patteren: user_Marklist.patteren,
																							collegeId: user_Marklist.collegeId,
																							instructionalDetails: bach.instructionalDetails,
																							// college_List : college_List,
																							type: user_Marklist.type,
																							clg_duration: facultyMaster.year
																						})
																					}
																				}
																			}
																		})
																	}
																})
															})
														})
														setTimeout(() => {
															var bachelors = [];
															differentCollege.forEach(coll => {
																var college = [];
																var bachFlag = false;
																if (bachelors.length > 0) {
																	bachelors.forEach(bach => {
																		if (bach.faculty == coll.faculty) {
																			bachFlag = true;
																			var count = 0;
																			bach.colleges.forEach(clg => {
																				if (clg.collegeId == coll.collegeId) {
																					count++;
																				}
																			})
																			if (count <= bach.colleges.length) {
																				bach.colleges.push({
																					collegeId: coll.collegeId
																				})
																			}

																			if (bach.instructionalDetails.length > 0) {
																				bach.form = true;
																			}
																		}
																	})

																	if (bachFlag == false) {
																		college.push({
																			collegeId: coll.collegeId
																		})

																		bachelors.push({
																			faculty: coll.faculty,
																			patteren: coll.patteren,
																			colleges: college,
																			instructionalDetails: coll.instructionalDetails,
																			type: coll.type + ' of ' + coll.faculty,
																			college_List: college_List,
																			clg_duration: coll.clg_duration,
																		})
																	}
																} else {
																	college.push({
																		collegeId: coll.collegeId
																	})
																	bachelors.push({
																		faculty: coll.faculty,
																		patteren: coll.patteren,
																		colleges: college,
																		instructionalDetails: coll.instructionalDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															})
															educationDetails.bachelors = bachelors;
															res.json({
																status: 200,
																data: educationDetails
															})
														}, 5000)
													}, 6000)

												} else if (bachelorDetails[0].college_stream_type == false) {
													// models.College.find({
													// 	where :{
													// 		id : bachelorDetails[0].collegeId
													// 	}
													// }).then(collegename=>{
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														// models.InstructionalDetails.findAll({
														// 	where:{
														// 		userId : req.User.id,
														// 		education : 'Bachelors_' + bachelorDetails[0].faculty
														// 	}
														// }).then(function(instructionalDetails){
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															fullName: uservalues[0].name + ' ' + uservalues[0].surname,
															patteren: bachelorDetails[0].patteren,

														})
														res.json({
															status: 200,
															data: educationDetails
														})
														// })
													})
													// })
												}

											} else {
												console.log('else');
												setTimeout(() => {
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 10000)

											}
											// setTimeout(()=>{
											// 	res.json({
											// 		status : 200,
											// 		data : educationDetails
											// 	})
											// },10000)
										})
										// })
									})
									// })
								}
							}


						})
					} else if (user[0].applying_for == 'Bachelors') {
						console.log("in bachloeors");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Bachelors",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											// instructionalDetails : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("bach==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Bachelors",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,

																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var bachelors = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (bachelors.length > 0) {
													bachelors.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														bachelors.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													bachelors.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														fullName: uservalues[0].name + ' ' + uservalues[0].surname

													})
												}
											})
											educationDetails.bachelors = bachelors;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Bachelors',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {

											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.bachelors.push({
												faculty: bachelorDetails[0].faculty,
												patteren: bachelorDetails[0].patteren,
												// colleges : college,
												// instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												fullName: uservalues[0].name + ' ' + uservalues[0].surname
												// college_name: collegename.name,
												// clg_duration : facultyMaster.year,
												// form : true
											})
											res.json({
												status: 200,
												data: educationDetails
											})

										})
									})
								}
							}
						})
					} else if (user[0].applying_for == 'Masters') {
						console.log("in masters");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Masters",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											// instructionalDetails : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("bach==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Masters",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,

																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var masters = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (masters.length > 0) {
													masters.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														masters.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															// instructionalDetails : coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													masters.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														// instructionalDetails : coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														fullName: uservalues[0].name + ' ' + uservalues[0].surname

													})
												}
											})
											educationDetails.masters = masters;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Masters',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {

											console.log("userrrrr" + uservalues[0].surname);
											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.masters.push({
												faculty: bachelorDetails[0].faculty,
												patteren: bachelorDetails[0].patteren,
												// colleges : college,
												// instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												fullName: uservalues[0].name + ' ' + uservalues[0].surname
												// college_name: collegename.name,
												// clg_duration : facultyMaster.year,
												// form : true
											})
											res.json({
												status: 200,
												data: educationDetails
											})

										})
									})
								}
							}
						})
					} else if (user[0].applying_for == 'Phd,Masters,Bachelors') {
						console.log("in only Phd");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Phd",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											patteren: bachelor.patteren,
											// instructionalDetails : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("bach==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Phd',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Phd",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	patteren: marklist.patteren,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,
																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var phd = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (phd.length > 0) {
													phd.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														phd.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													phd.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														fullName: uservalues[0].name + ' ' + uservalues[0].surname
														// academic_year : academic_year_list
													})
												}
											})
											educationDetails.phd = phd;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("Phd[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Phd',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {
											// models.Hrd_details.findAll({
											// 	where:{
											// 		userId : req.User.id,
											// 		education : 'Bachelors_' + bachelorDetails[0].faculty
											// 	}
											// }).then(function(instructionalDetails){
											console.log("userrrrr" + uservalues[0].name);
											console.log("userrrrr" + uservalues[0].surname);
											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.phd.push({
												patteren: bachelorDetails[0].patteren,
												// colleges : college,
												// instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												fullName: uservalues[0].name + ' ' + uservalues[0].surname
												// college_name: collegename.name,
												// clg_duration : facultyMaster.year,
												// form : true
											})

											res.json({
												status: 200,
												data: educationDetails
											})
											// })
										})
									})
								}
							}
						})
					}
				} else {
					console.log("user[0].applying_for" + user[0].applying_for);
					if (user[0].applying_for == 'Masters,Bachelors') {
						console.log("'Masters,Bachelors");
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Masters",
								// app_id : null
							}
						}).then(function (masterDetails) {
							let masters_duration;
							var differentStream = [];
							if (masterDetails.length > 0) {
								if (masterDetails[0].college_stream_type == true) {
									console.log("colege strea,, true");
									let college_List = []
									let academic_year_master = []
									masterDetails.forEach(master => {
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + master.faculty
										// 	}
										// }).then(function(instructionalDetails){
										// if(differentStream.length > 0){
										// 	var flag = false;
										// 	differentStream.forEach(single=>{
										// 		if(single.faculty == master.faculty){
										// 			flag = true;
										// 		}
										// 	})
										// 	if(flag == false){

										// 		differentStream.push({
										// 			faculty : master.faculty,
										// 			instructionalDetails : instructionalDetails,
										// 			type : master.type
										// 		})
										// 	}
										// }else{
										differentStream.push({
											faculty: master.faculty,
											patteren: master.patteren,
											instructionalDetails: instructionalDetails,
											type: master.type
										})
										// }
										// })
										// })
									})
									setTimeout(() => {
										/** Updating college list **/
										// jsonObject = college_List.map(JSON.stringify);
										// console.log("Data===>"+jsonObject);
										// uniqueSet = new Set(jsonObject);
										// Updated_list = Array.from(uniqueSet).map(JSON.parse);
										/** Updating college list **/
										var differentCollege = []
										differentStream.forEach(mast => {
											console.log("mast==>" + JSON.stringify(mast))
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: mast.faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Masters",
														faculty: mast.faculty,
														app_id: null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// academic_year_master.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	patteren: marklist.patteren,
																	collegeId: marklist.collegeId,
																	instructionalDetails: mast.instructionalDetails,
																	type: marklist.type,
																	// college_List : college_List,
																	clg_duration: facultyMaster.year,
																	college_name: marklist.name
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	academic_year_master.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	academic_year_master.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,
																			collegeId: marklist.collegeId,
																			instructionalDetails: mast.instructionalDetails,
																			type: marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year,
																			// college_name: collegename.name,
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											var masters = [];
											differentCollege.forEach(coll => {
												console.log("coll==." + JSON.stringify(coll))
												models.College.find({
													where: {
														id: coll.collegeId
													}
												}).then(collegename => {

													var mastFlag = false
													var college = [];
													if (masters.length > 0) {
														masters.forEach(mast => {
															if (mast.faculty == coll.faculty) {
																mastFlag = true;
																var count = 0;
																mast.colleges.forEach(clg => {
																	if (clg.collegeId == coll.collegeId) {
																		count++;
																	}
																})
																if (count <= mast.colleges.length) {
																	mast.colleges.push({
																		collegeId: coll.collegeId
																	})
																}

																// if(mast.instructionalDetails.length >= 0) {
																// 	mast.form = true;
																// }
															}
														})

														if (mastFlag == false) {
															college.push({
																collegeId: coll.collegeId
															})

															masters.push({
																faculty: coll.faculty,
																patteren: coll.patteren,
																colleges: college,
																instructionalDetails: coll.instructionalDetails,
																type: coll.type + ' of ' + coll.faculty,
																college_List: college_List,
																clg_duration: coll.clg_duration,
																college_name: collegename.name,
																form: true
																// academic_year : academic_year_master
															})
														}
													} else {
														college.push({
															collegeId: coll.collegeId
														})
														masters.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															college_name: collegename.name,
															form: true
															// academic_year : academic_year_master
														})
													}
												})
											})
											educationDetails.masters = masters;
											models.userMarkList.findAll({
												where: {
													user_id: req.User.id,
													type: "Bachelors",
													app_id: null
												}
											}).then(function (bachelorDetails) {
												let clg_duration;
												var differentStream = [];
												// let academic_year_list =[];	
												if (bachelorDetails.length > 0) {
													if (bachelorDetails[0].college_stream_type == true) {
														let college_List = [];
														bachelorDetails.forEach(bachelor => {
															models.College.find({
																where: {
																	id: bachelor.collegeId
																}
															}).then(collegename => {
																if (bachelor.patteren == "Annual") {
																	//academic_year = bachelor.name;
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: bachelor.name
																	})
																} else if (bachelor.patteren == "Semester") {
																	switch (bachelor.name) {
																		case 'Semester 2':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'First Year'
																			})
																			break;
																		case 'Semester 4':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Second Year'
																			})
																			break;
																		case 'Semester 6':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Third Year'
																			})
																			break;
																		case 'Semester 8':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fourth Year'
																			})

																			break;
																		case 'Semester 10':
																			college_List.push({
																				clg_name: collegename.name,
																				academic_year: 'Fifth Year'
																			})
																			break;
																	}
																}
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelor.faculty
																	}
																}).then(function (instructionalDetails) {
																	if (differentStream.length > 0) {
																		var flag = false;
																		differentStream.forEach(single => {
																			if (single.faculty == bachelor.faculty) {
																				flag = true;
																			}
																		})
																		if (flag == false) {

																			differentStream.push({
																				faculty: bachelor.faculty,
																				patteren: bachelor.patteren,
																				instructionalDetails: instructionalDetails,
																				type: bachelor.type,
																			})
																		}
																	} else {
																		differentStream.push({
																			faculty: bachelor.faculty,
																			patteren: bachelor.patteren,
																			instructionalDetails: instructionalDetails,
																			type: bachelor.type,
																		})
																	}
																})
															})
														})
														setTimeout(() => {
															/** Updating college list **/
															// jsonObject = college_List.map(JSON.stringify);
															// console.log("Data===>"+jsonObject);
															// uniqueSet = new Set(jsonObject);
															// Updated_list = Array.from(uniqueSet).map(JSON.parse);
															/** Updating college list **/
															var differentCollege = []
															differentStream.forEach(bach => {
																models.facultymaster.find({
																	where: {
																		degree: 'Bachelors',
																		faculty: bach.faculty
																	}
																}).then(function (facultyMaster) {
																	models.userMarkList.findAll({
																		where: {
																			user_id: req.User.id,
																			type: "Bachelors",
																			faculty: bach.faculty,
																			app_id: null
																		}
																	}).then(function (userMarklist) {
																		if (userMarklist.length > 0) {
																			if (userMarklist[0].patteren == "Annual") {
																				userMarklist.forEach(marklist => {
																					// academic_year_list.push({
																					// 	academic_year : marklist.name
																					// })
																					differentCollege.push({
																						faculty: marklist.faculty,
																						patteren: marklist.patteren,
																						collegeId: marklist.collegeId,
																						instructionalDetails: bach.instructionalDetails,
																						type: marklist.type,
																						// college_List : college_List.push,
																						clg_duration: facultyMaster.year
																					})
																				})
																			} else if (userMarklist[0].patteren == "Semester") {
																				var semesters = facultyMaster.year * 2;
																				for (var i = 2; i <= semesters; i = i + 2) {
																					var sem = "Semester " + i
																					userMarklist.forEach(marklist => {
																						if (marklist.name == sem) {
																							// if(marklist.name == 'Semester 2'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'First Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 4'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Second Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 6'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Third Year'
																							// 	})
																							// }
																							// if(marklist.name == 'Semester 8'){
																							// 	academic_year_list.push({
																							// 		academic_year : 'Fourth Year'
																							// 	})
																							// }
																							differentCollege.push({
																								faculty: marklist.faculty,
																								patteren: marklist.patteren,
																								collegeId: marklist.collegeId,
																								instructionalDetails: bach.instructionalDetails,
																								type: marklist.type,
																								// college_List : college_List,
																								clg_duration: facultyMaster.year,
																								form: true
																							})
																						}
																					})
																				}
																			}
																		}
																	})
																})
															})
															setTimeout(() => {
																var bachelors = [];
																differentCollege.forEach(coll => {
																	var college = [];
																	var bachFlag = false;
																	if (bachelors.length > 0) {
																		bachelors.forEach(bach => {
																			if (bach.faculty == coll.faculty) {
																				bachFlag = true;
																				var count = 0;
																				bach.colleges.forEach(clg => {
																					if (clg.collegeId == coll.collegeId) {
																						count++;
																					}
																				})
																				if (count <= bach.colleges.length) {
																					bach.colleges.push({
																						collegeId: coll.collegeId
																					})
																				}

																				// if(bach.instructionalDetails.length >= 0) {
																				// 	bach.form = true;
																				// }
																			}
																		})

																		if (bachFlag == false) {
																			college.push({
																				collegeId: coll.collegeId
																			})

																			bachelors.push({
																				faculty: coll.faculty,
																				patteren: coll.patteren,
																				colleges: college,
																				instructionalDetails: coll.instructionalDetails,
																				college_List: college_List,
																				type: coll.type + ' of ' + coll.faculty,
																				clg_duration: coll.clg_duration,
																				form: true
																				// academic_year : academic_year_list
																			})
																		}
																	} else {
																		college.push({
																			collegeId: coll.collegeId
																		})
																		bachelors.push({
																			faculty: coll.faculty,
																			patteren: coll.patteren,
																			colleges: college,
																			instructionalDetails: coll.instructionalDetails,
																			college_List: college_List,
																			type: coll.type + ' of ' + coll.faculty,
																			clg_duration: coll.clg_duration,
																			// academic_year : academic_year_list
																		})
																	}
																})
																educationDetails.bachelors = bachelors;
																res.json({
																	status: 200,
																	data: educationDetails
																})
															}, 3000)
														}, 4000)

													} else if (bachelorDetails[0].college_stream_type == false) {
														models.College.find({
															where: {
																id: bachelorDetails[0].collegeId
															}
														}).then(collegename => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bachelorDetails[0].faculty
																}
															}).then(function (facultyMaster) {
																models.InstructionalDetails.findAll({
																	where: {
																		userId: req.User.id,
																		education: 'Bachelors_' + bachelorDetails[0].faculty
																	}
																}).then(function (instructionalDetails) {
																	var college = [];
																	college.push({
																		collegeId: bachelorDetails[0].collegeId
																	})
																	educationDetails.bachelors.push({
																		faculty: bachelorDetails[0].faculty,
																		patteren: bachelorDetails[0].patteren,
																		colleges: college,
																		instructionalDetails: instructionalDetails,
																		type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																		college_name: collegename.name,
																		clg_duration: facultyMaster.year,
																		form: true
																	})
																	res.json({
																		status: 200,
																		data: educationDetails
																	})
																})
															})
														})
													}
												}
											})
										}, 3000)
									}, 4000)

								} else if (masterDetails[0].college_stream_type == false) {
									// models.College.find({
									// 	where :{
									// 		id : masterDetails[0].collegeId
									// 	}
									// }).then(master_collegename=>{
									models.facultymaster.find({
										where: {
											degree: 'Masters',
											faculty: masterDetails[0].faculty
										}
									}).then(function (facultyMaster) {
										// models.InstructionalDetails.findAll({
										// 	where:{
										// 		userId : req.User.id,
										// 		education : 'Masters_' + masterDetails[0].faculty
										// 	}
										// }).then(function(instructionalDetails){
										var college = [];
										college.push({
											collegeId: masterDetails[0].collegeId
										})
										educationDetails.masters.push({
											patteren: masterDetails[0].patteren,
											// colleges : college,
											// // instructionalDetails : instructionalDetails,
											// type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
											// // college_name: master_collegename.name,
											// clg_duration :  facultyMaster.year,
											// form : masterDetails
											type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
											fullName: uservalues[0].name + ' ' + uservalues[0].surname
										})
										models.userMarkList.findAll({
											where: {
												user_id: req.User.id,
												type: "Bachelors",
												app_id: null
											}
										}).then(function (bachelorDetails) {
											// let clg_duration ;
											var differentStream = [];
											if (bachelorDetails.length > 0) {
												if (bachelorDetails[0].college_stream_type == true) {
													let college_List = [];
													bachelorDetails.forEach(bachelor => {


														if (differentStream.length > 0) {
															var flag = false;
															differentStream.forEach(single => {
																if (single.faculty == bachelor.faculty) {
																	flag = true;
																}
															})
															if (flag == false) {

																differentStream.push({
																	faculty: bachelor.faculty,
																	patteren: bachelor.patteren,
																	instructionalDetails: instructionalDetails,
																	type: bachelor.type,
																})
															}
														} else {
															differentStream.push({
																faculty: bachelor.faculty,
																patteren: bachelor.patteren,
																instructionalDetails: instructionalDetails,
																type: bachelor.type,
															})
														}
														// })
														// })
													})
													setTimeout(() => {
														var differentCollege = []
														differentStream.forEach(bach => {
															models.facultymaster.find({
																where: {
																	degree: 'Bachelors',
																	faculty: bach.faculty
																}
															}).then(function (facultyMaster) {
																models.userMarkList.findAll({
																	where: {
																		user_id: req.User.id,
																		type: "Bachelors",
																		faculty: bach.faculty,
																	}
																}).then(function (userMarklist) {
																	if (userMarklist.length > 0) {
																		userMarklist.forEach(user_Marklist => {
																			if (user_Marklist.patteren == "Annual") {
																				differentCollege.push({
																					faculty: user_Marklist.faculty,
																					patteren: user_Marklist.patteren,
																					collegeId: user_Marklist.collegeId,
																					instructionalDetails: bach.instructionalDetails,
																					// college_List : college_List,
																					type: user_Marklist.type,
																					clg_duration: facultyMaster.year
																				})
																			} else if (user_Marklist.patteren == "Semester") {
																				var semesters = facultyMaster.year * 2;
																				for (var i = 2; i <= semesters; i = i + 2) {
																					var sem = "Semester " + i
																					if (user_Marklist.name == sem) {
																						differentCollege.push({
																							faculty: user_Marklist.faculty,
																							patteren: user_Marklist.patteren,
																							collegeId: user_Marklist.collegeId,
																							instructionalDetails: bach.instructionalDetails,
																							// college_List : college_List,
																							type: user_Marklist.type,
																							clg_duration: facultyMaster.year
																						})
																					}
																				}
																			}
																		})
																	}
																})
															})
														})
														setTimeout(() => {
															var bachelors = [];
															differentCollege.forEach(coll => {
																var college = [];
																var bachFlag = false;
																if (bachelors.length > 0) {
																	bachelors.forEach(bach => {
																		if (bach.faculty == coll.faculty) {
																			bachFlag = true;
																			var count = 0;
																			bach.colleges.forEach(clg => {
																				if (clg.collegeId == coll.collegeId) {
																					count++;
																				}
																			})
																			if (count <= bach.colleges.length) {
																				bach.colleges.push({
																					collegeId: coll.collegeId
																				})
																			}

																			if (bach.instructionalDetails.length > 0) {
																				bach.form = true;
																			}
																		}
																	})

																	if (bachFlag == false) {
																		college.push({
																			collegeId: coll.collegeId
																		})

																		bachelors.push({
																			faculty: coll.faculty,
																			patteren: coll.patteren,
																			colleges: college,
																			instructionalDetails: coll.instructionalDetails,
																			type: coll.type + ' of ' + coll.faculty,
																			college_List: college_List,
																			clg_duration: coll.clg_duration,
																		})
																	}
																} else {
																	college.push({
																		collegeId: coll.collegeId
																	})
																	bachelors.push({
																		faculty: coll.faculty,
																		patteren: coll.patteren,
																		colleges: college,
																		instructionalDetails: coll.instructionalDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															})
															educationDetails.bachelors = bachelors;
															res.json({
																status: 200,
																data: educationDetails
															})
														}, 5000)
													}, 6000)

												} else if (bachelorDetails[0].college_stream_type == false) {
													// models.College.find({
													// 	where :{
													// 		id : bachelorDetails[0].collegeId
													// 	}
													// }).then(collegename=>{
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														// models.InstructionalDetails.findAll({
														// 	where:{
														// 		userId : req.User.id,
														// 		education : 'Bachelors_' + bachelorDetails[0].faculty
														// 	}
														// }).then(function(instructionalDetails){
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															patteren: bachelorDetails[0].patteren,
															fullName: uservalues[0].name + ' ' + uservalues[0].surname
														})
														res.json({
															status: 200,
															data: educationDetails
														})
														// })
													})
													// })
												}

											} else {
												console.log('else');
												setTimeout(() => {
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 10000)

											}
											// setTimeout(()=>{
											// 	res.json({
											// 		status : 200,
											// 		data : educationDetails
											// 	})
											// },10000)
										})
										// })
									})
									// })
								}
							}


						})
					} else if (user[0].applying_for == 'Bachelors') {
						console.log("in bachloeors");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Bachelors",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											patteren: bachelor.patteren,
											// instructionalDetails : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("bach==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Bachelors",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,
																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var bachelors = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (bachelors.length > 0) {
													bachelors.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														bachelors.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													bachelors.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											})
											educationDetails.bachelors = bachelors;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Bachelors',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {
											console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
											models.InstructionalDetails.findAll({
												where: {
													userId: req.User.id,
													education: 'Bachelors_' + bachelorDetails[0].faculty
												}
											}).then(function (instructionalDetails) {
												console.log("userrrrr" + uservalues[0].name);
												console.log("userrrrr" + uservalues[0].surname);
												var college = [];
												var form;
												// if(instructionalDetails.length > 0){
												// 	form = true;
												// }else{
												// 	form = false;	
												// }
												college.push({
													collegeId: bachelorDetails[0].collegeId
												})
												educationDetails.bachelors.push({
													patteren: bachelorDetails[0].patteren,
													// colleges : college,
													// instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
													fullName: uservalues[0].name + ' ' + uservalues[0].surname
													// college_name: collegename.name,
													// clg_duration : facultyMaster.year,
													// form : true
												})
												res.json({
													status: 200,
													data: educationDetails
												})
											})
										})
									})
								}
							}
						})
					} else if (user[0].applying_for == 'Masters') {
						console.log("in Masters");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Masters",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											// instructionalDetails : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("bach==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Masters",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	patteren: marklist.patteren,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,
																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var masters = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (masters.length > 0) {
													masters.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														masters.push({
															faculty: coll.faculty,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													masters.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											})
											educationDetails.masters = masters;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Masters',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {
											console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
											models.InstructionalDetails.findAll({
												where: {
													userId: req.User.id,
													education: 'Masters_' + bachelorDetails[0].faculty
												}
											}).then(function (instructionalDetails) {
												var college = [];
												var form;
												// if(instructionalDetails.length > 0){
												// 	form = true;
												// }else{
												// 	form = false;	
												// }
												college.push({
													collegeId: bachelorDetails[0].collegeId
												})
												educationDetails.masters.push({
													patteren: bachelorDetails[0].patteren,
													// colleges : college,
													// instructionalDetails : instructionalDetails,
													type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
													fullName: uservalues[0].name + ' ' + uservalues[0].surname
													// college_name: collegename.name,
													// clg_duration : facultyMaster.year,
													// form : true
												})
												res.json({
													status: 200,
													data: educationDetails
												})
											})
										})
									})
								}
							}
						})
					} else if (user[0].applying_for == 'Phd,Masters,Bachelors') {
						console.log("in Phd");
						let college_List = [];
						let academic_year_list = [];
						models.userMarkList.findAll({
							where: {
								user_id: req.User.id,
								type: "Phd",
								// app_id : null
							}
						}).then(function (bachelorDetails) {
							var differentStream = [];
							if (bachelorDetails.length > 0) {
								if (bachelorDetails[0].college_stream_type == true) {
									console.log('true');
									bachelorDetails.forEach(bachelor => {
										// models.College.find({
										// 	where :{
										// 		id : bachelor.collegeId
										// 	}
										// }).then(collegename=>{
										// 	if(bachelor.patteren == "Annual"){
										// 		//academic_year = bachelor.name;
										// 		college_List.push({
										// 			clg_name : collegename.name,
										// 			academic_year : bachelor.name
										// 		})
										// 	}else if(bachelor.patteren == "Semester"){
										// 		switch(bachelor.name){
										// 			case 'Semester 2' : 
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'First Year'
										// 				})
										// 				break;
										// 			case 'Semester 4' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Second Year'
										// 				})
										// 				break;
										// 			case 'Semester 6' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Third Year'
										// 				})
										// 				break;
										// 			case 'Semester 8' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fourth Year'
										// 				})

										// 				break;
										// 			case 'Semester 10' :
										// 				college_List.push({
										// 					clg_name : collegename.name,
										// 					academic_year : 'Fifth Year'
										// 				})
										// 				break;
										// 		}
										// 	}

										differentStream.push({
											faculty: bachelor.faculty,
											patteren: bachelor.patteren,
											// patteren : instructionalDetails,
											type: bachelor.type
										})
										// })
									})
									setTimeout(() => {
										var differentCollege = []
										differentStream.forEach(bach => {
											console.log("Phd==>" + JSON.stringify(bach))
											models.facultymaster.find({
												where: {
													degree: 'Phd',
													faculty: bach.faculty
												}
											}).then(function (facultyMaster) {
												console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
												models.userMarkList.findAll({
													where: {
														user_id: req.User.id,
														type: "Masters",
														faculty: bach.faculty,
														// app_id : null
													}
												}).then(function (userMarklist) {
													if (userMarklist.length > 0) {
														// console.log("userMarklist===>"+JSON.stringify(userMarklist))
														if (userMarklist[0].patteren == "Annual") {
															userMarklist.forEach(marklist => {
																// college_List.push({
																// 	academic_year : marklist.name
																// })
																differentCollege.push({
																	faculty: marklist.faculty,
																	patteren: marklist.patteren,
																	collegeId: marklist.collegeId,
																	// instructionalDetails : bach.instructionalDetails,
																	type: marklist.type,
																	// academic_year : marklist.name,
																	// college_List : Updated_list,
																	clg_duration: facultyMaster.year
																})
															})
														} else if (userMarklist[0].patteren == "Semester") {
															console.log('semesterrrrr');
															var semesters = facultyMaster.year * 2;
															for (var i = 2; i <= semesters; i = i + 2) {
																var sem = "Semester " + i
																userMarklist.forEach(marklist => {

																	// console.log("userMarklist===>"+JSON.stringify(marklist))
																	if (marklist.name == sem) {
																		// if(marklist.name == 'Semester 2'){
																		// 	college_List.push({
																		// 		academic_year : 'First Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 4'){
																		// 	college_List.push({
																		// 		academic_year : 'Second Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 6'){
																		// 	college_List.push({
																		// 		academic_year : 'Third Year'
																		// 	})
																		// }
																		// if(marklist.name == 'Semester 8'){
																		// 	college_List.push({
																		// 		academic_year : 'Fourth Year'
																		// 	})
																		// }
																		differentCollege.push({
																			faculty: marklist.faculty,
																			patteren: marklist.patteren,
																			collegeId: marklist.collegeId,
																			// instructionalDetails : bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : Updated_list,
																			clg_duration: facultyMaster.year
																		})
																	}
																})
															}
														}
													}
												})
											})
										})
										setTimeout(() => {
											console.log('settimeout');
											/** Updating college list **/
											// jsonObject = college_List.map(JSON.stringify);
											// console.log("Data===>"+jsonObject);
											// uniqueSet = new Set(jsonObject);
											// Updated_list = Array.from(uniqueSet).map(JSON.parse);
											/** Updating college list **/
											console.log("college_List===>" + JSON.stringify(college_List))
											var phd = [];
											differentCollege.forEach(coll => {
												var college = [];
												var bachFlag = false;
												if (phd.length > 0) {
													phd.forEach(bach => {
														if (bach.faculty == coll.faculty) {
															bachFlag = true;
															var count = 0;
															bach.colleges.forEach(clg => {
																if (clg.collegeId == coll.collegeId) {
																	count++;
																}
															})
															if (count <= bach.colleges.length) {
																bach.colleges.push({
																	collegeId: coll.collegeId
																})
															}

															// if(bach.instructionalDetails.length > 0) {
															// 	bach.form = true;
															// }
														}
													})

													if (bachFlag == false) {
														college.push({
															collegeId: coll.collegeId
														})

														phd.push({
															faculty: coll.faculty,
															patteren: coll.patteren,
															colleges: college,
															instructionalDetails: coll.instructionalDetails,
															type: coll.type + ' of ' + coll.faculty,
															college_List: college_List,
															clg_duration: coll.clg_duration,
															// academic_year : academic_year_list
														})
													}
												} else {
													college.push({
														collegeId: coll.collegeId
													})
													phd.push({
														faculty: coll.faculty,
														patteren: coll.patteren,
														colleges: college,
														instructionalDetails: coll.instructionalDetails,
														type: coll.type + ' of ' + coll.faculty,
														college_List: college_List,
														clg_duration: coll.clg_duration,
														// academic_year : academic_year_list
													})
												}
											})
											educationDetails.phd = phd;
											res.json({
												status: 200,
												data: educationDetails
											})
										}, 3000)
									}, 4000)

								} else if (bachelorDetails[0].college_stream_type == false) {
									console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
									models.College.find({
										where: {
											id: bachelorDetails[0].collegeId
										}
									}).then(collegename => {
										models.facultymaster.find({
											where: {
												degree: 'Phd',
												faculty: bachelorDetails[0].faculty
											}
										}).then(function (facultyMaster) {
											console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
											// models.InstructionalDetails.findAll({
											// 	where:{
											// 		userId : req.User.id,
											// 		education : 'Masters_' + bachelorDetails[0].faculty
											// 	}
											// }).then(function(instructionalDetails){
											var college = [];
											var form;
											// if(instructionalDetails.length > 0){
											// 	form = true;
											// }else{
											// 	form = false;	
											// }
											college.push({
												collegeId: bachelorDetails[0].collegeId
											})
											educationDetails.phd.push({
												patteren: bachelorDetails[0].patteren,
												// colleges : college,
												// instructionalDetails : instructionalDetails,
												type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
												fullName: uservalues[0].name + ' ' + uservalues[0].surname
												// college_name: collegename.name,
												// clg_duration : facultyMaster.year,
												// form : true
											})
											res.json({
												status: 200,
												data: educationDetails
											})
											// })
										})
									})
								}
							}
						})
					}
				}

			}
		})
	})

})
router.get('/getWes_FormData', middlewares.getUserInfo, function (req, res) {
	console.log('/getWes_FormData');
	models.Wes_Form.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (wesformdata) {
		if (wesformdata) {
			res.json({
				status: 200,
				data: wesformdata
			})
		} else {
			res.json({
				status: 400,
				message: "data is not inserted"
			})
		}
	})

})

router.get('/suggestInstituteallDATA', middlewares.getUserInfo, function (req, res) {
	console.log('/suggestInstituteallDATA');
	var universityName = req.query.universityName;
	models.Institution_details.findAll({
		where: {
			university_name: universityName
		}
	}).then(function (data) {
		if (data) {
			res.json({
				status: 200,
				data: data
			})
		} else {
			res.json({
				status: 400,
				message: "data is not inserted"
			})
		}
	})
})

router.post("/updateInstituteData", middlewares.getUserInfo, middlewares.getUserEducationalInfo, function (req, res) {
	console.log('/updateInstituteData');
	var id = req.body.id;
	var universityName = req.body.universityName;
	var country = req.body.country;
	var email = req.body.email;
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	if (email) {
		emailArr = email.split(',');
		if (emailArr.length > 1) {
			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		} else {
			anotherEmailArr = email;
			anotherEmail = null;
		}
	} else {
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	var contactNumber = req.body.contactNumber;
	var wesno = req.body.wesNumber;
	var icasno = req.body.icasno;
	var cesno = req.body.cesno;
	var eduPerno = req.body.eduperno;
	var iqasno = req.body.iaqsno;
	var icesno = req.body.icesno;
	var nasbano = req.body.nasbano;
	var visarefno = req.body.visarefno;
	var studyrefno = req.body.studyrefno;
	var user_id = req.User.id;
	var studyaccno = req.body.studyaccno;
	var empaccno = req.body.empaccno;
	var visaaccno = req.body.visaaccno;
	var otheraccno = req.body.otheraccno
	var emprefno = req.body.emprefno;
	var contact_person = req.body.contact_person;
	var myieeno = req.body.mynieeno;
	var nceesno = req.body.nceesno;
	var naricno = req.body.naricno;
	var ncano = req.body.ncano;
	var emailAsWes = req.body.emailAsWes;
	var nameaswes = req.body.nameaswes;
	var lastnameaswes = req.body.lastnameaswes;
	var hrdno = req.body.hrdno
	var amount;
	if (req.User.current_location == "WITHIN") {
		amount = 536 * req.userEducational;
	} else if (req.User.current_location == "OUTSIDE") {
		if (req.User.id == '54944') {
			amount = '100';
		} else if (req.User.id == '54946') {
			amount = '200';
		} else if (req.User.id == '54947') {
			amount = '300';
		} else if (req.User.id == '54948') {
			amount = '400';
		} else if (req.User.id == '54949') {
			amount = '500';
		} else if (req.User.id == '54950') {
			amount = '600';
		} else if (req.User.id == '54951') {
			amount = '700';
		} else if (req.User.id == '54952') {
			amount = '800';
		} else if (req.User.id == '54953') {
			amount = '900';
		} else if (req.User.id == '54954') {
			amount = '1000';
		} else if (req.User.id == '54955') {
			amount = '1100';
		} else if (req.User.id == '54956') {
			amount = '1200';
		} else if (req.User.id == '54957') {
			amount = '1300';
		} else if (req.User.id == '54958') {
			amount = '1400';
		} else if (req.User.id == '54959') {
			amount = '1500';
		} else if (req.User.id == '54961') {
			amount = '1600';
		} else if (req.User.id == '54962') {
			amount = '1700';
		} else if (req.User.id == '54963') {
			amount = '1800';
		} else if (req.User.id == '54964') {
			amount = '1900';
		} else if (req.User.id == '54966') {
			amount = '2000';
		} else {
			amount = 8308 * req.userEducational;
		}
	}
	models.Institution_details.find({
		where: {
			id: id
		}
	}).then(function (data) {
		if (data) {
			data.update({
				university_name: (universityName) ? universityName : null,
				country_name: (country) ? country : null,
				email: (emailArr) ? anotherEmailArr : null,
				contact_number: (contactNumber) ? contactNumber : null,
				user_id: user_id,
				contact_person: (contact_person) ? contact_person : null,
				address: (req.body.address) ? req.body.address : null,
				icesno: (icesno) ? icesno : null,
				landmark: (req.body.landmark) ? req.body.landmark : null,
				pincode: (req.body.pincode) ? req.body.pincode : null,
				wesno: (wesno) ? wesno : null,
				cesno: (cesno) ? cesno : null,
				studyrefno: (studyrefno) ? studyrefno : null,
				icasno: (icasno) ? icasno : null,
				eduPerno: (eduPerno) ? eduPerno : null,
				iqasno: (iqasno) ? iqasno : null,
				nasbano: (nasbano) ? nasbano : null,
				visarefno: (visarefno) ? visarefno : null,
				emprefno: (emprefno) ? emprefno : null,
				studyaccno: (studyaccno) ? emprefno : null,
				otheraccno: (otheraccno) ? otheraccno : null,
				empaccno: (empaccno) ? empaccno : null,
				visaaccno: (visaaccno) ? visaaccno : null,
				myieeno: (myieeno) ? myieeno : null,
				OtherEmail: (anotherEmail) ? anotherEmail : null,
				nceesno: (nceesno) ? nceesno : null,
				naricno: (naricno) ? naricno : null,
				ncano: (ncano) ? ncano : null,
				emailAsWes: emailAsWes ? emailAsWes : null,
				nameaswes: nameaswes ? nameaswes : null,
				lastnameaswes: lastnameaswes ? lastnameaswes : null,
				hrdno: hrdno ? hrdno : null,
			}).then(function (data_updated) {
				if (data_updated) {
					models.Cart.find({
						where: {
							institute_id: data_updated.id
						}
					}).then(function (cart_exists) {
						if (cart_exists) {
							cart_exists.update({
								university_name: data_updated.university_name,
								email: data_updated.email,
								fees: amount,
								user_id: user_id,
								institute_id: data_updated.id,
							}).then(function (cart_updated) {
								if (cart_updated) {
									res.json({
										status: 200,
										message: "data updated"
									})
								} else {
									res.json({
										status: 400,
										message: "data not updated"
									})
								}
							})
						} else {
							res.json({
								status: 400,
								message: "data not updated"
							})
						}
					})
				} else {
					res.json({
						status: 400,
						message: "data not updated"
					})
				}
			})
		} else {
			res.json({
				status: 400,
				message: "data not updated"
			})
		}
	})
});


// router.post("/updateHrdInstituteData" ,  middlewares.getUserInfo,middlewares.getUserEducationalInfo, function(req,res){
// 			console.log("/updateHrdInstituteData" +JSON.stringify(req.body.data));
// 			var data = req.body.data

// 			if(req.User.current_location == "WITHIN"){
// 				amount  = 536 * req.userEducational;
// 			}else if(req.User.current_location == "OUTSIDE"){
// 				if(req.User.id =='54944'){
// 					amount = '100';
// 				}else if(req.User.id =='54946'){
// 					amount = '200';
// 				}else if(req.User.id =='54947'){
// 					amount = '300';
// 				}else if(req.User.id =='54948'){
// 					amount = '400';
// 				}else if(req.User.id =='54949'){
// 					amount = '500';
// 				}else if(req.User.id =='54950'){
// 					amount = '600';
// 				}else if(req.User.id =='54951'){
// 					amount = '700';
// 				}else if(req.User.id =='54952'){
// 					amount = '800';
// 				}else if(req.User.id =='54953'){
// 					amount = '900';
// 				}else if(req.User.id =='54954'){
// 					amount = '1000';
// 				}else if(req.User.id =='54955'){
// 					amount = '1100';
// 				}else if(req.User.id =='54956'){
// 					amount = '1200';
// 				}else if(req.User.id =='54957'){
// 					amount = '1300';
// 				}else if(req.User.id =='54958'){
// 					amount = '1400';
// 				}else if(req.User.id =='54959'){
// 					amount = '1500';
// 				}else if(req.User.id =='54961'){
// 					amount = '1600';
// 				}else if(req.User.id =='54962'){
// 					amount = '1700';
// 				}else if(req.User.id =='54963'){
// 					amount = '1800';
// 				}else if(req.User.id =='54964'){
// 					amount = '1900';
// 				}else if(req.User.id =='54966'){
// 					amount = '2000';
// 				}else{
// 					amount  = 8308 * req.userEducational;
// 				}
// 			}

// 			models.Hrd_details.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					degree : req.body.type

// 				}
// 			}).then(function (hrddetails){
// 				if(hrddetails.length > 0){
// 					console.log("lenghth > 0");
// 					if(req.body.type == 'bachelor'){
// 						models.Hrd_details.update({
// 							fullName : data.fullnameashrd,
// 							course_name :  data.coursenameashrd,
// 							seat_no : data.seatnoCtrlashrd,
// 							prn_no: data.prnnoCtrlashrd,
// 							cgpa :data.cgpaCtrlashrd,
// 							cgpi :data.cgpiCtrlashrd,
// 							transcript_no :data.transcriptCtrlashrd,
// 							transcript_date :data.transcriptdateashrd,
// 							exam_date : data.examdateashrd,
// 							specialization :data.specializationashrd,
// 							user_id : req.User.id,
// 							degree :  req.body.type

// 						}, {
// 							where: {
// 								user_id: req.User.id,
// 								degree :req.body.type
// 							}
// 						}).then(function (data) {
// 							// console.log("data" + data);
// 							// console.log("edudetails-->"+JSON.stringify (edu_details));
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 						})
// 					}else if(req.body.type == 'master'){
// 						models.Hrd_details.update({
// 							fullName : data.fullnameashrd_master,
// 							course_name :  data.coursenameashrd_master,
// 							seat_no : data.seatnoCtrlashrd_master,
// 							prn_no: data.prnnoCtrlashrd_master,
// 							cgpa :data.cgpaCtrlashrd_master,
// 							cgpi :data.cgpiCtrlashrd_master,
// 							transcript_no :data.transcriptCtrlashrd_master,
// 							transcript_date :data.transcriptdateashrd_master,
// 							exam_date : data.examdateashrd_master,
// 							specialization :data.specializationashrd_master,
// 							user_id : req.User.id,
// 							degree :  req.body.type

// 						}, {
// 							where: {
// 								user_id: req.User.id,
// 								degree :req.body.type
// 							}
// 						}).then(function (data) {
// 							// console.log("data" + data);
// 							// console.log("edudetails-->"+JSON.stringify (edu_details));
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 						})
// 					}


// 				}else{
// 					if(req.body.type =='master'){
// 						models.Hrd_details.create({
// 							fullName : data.fullnameashrd_master,
// 							course_name :  data.coursenameashrd_master,
// 							seat_no : data.seatnoCtrlashrd_master,
// 							prn_no: data.prnnoCtrlashrd_master,
// 							cgpa :data.cgpaCtrlashrd_master,
// 							cgpi :data.cgpiCtrlashrd_master,
// 							transcript_no :data.transcriptCtrlashrd_master,
// 							transcript_date :data.transcriptdateashrd_master,
// 							exam_date : data.examdateashrd_master,
// 							specialization :data.specializationashrd_master,
// 							user_id : req.User.id,
// 							degree :  req.body.type
// 						}).then(function (created){
// 							console.log("created"+  created);
// 							models.Institution_details.findAll({
// 								where :{
// 								type : 'HRD',
// 								user_id : req.User.id,
// 								app_id  : null
// 								}
// 							}).then(function (inst){
// 								console.log("inst" +inst);
// 								console.log("inst" +inst.length);
// 								if(inst.length > 0){

// 								}else{
// 									models.Institution_details.create({
// 										email : 'do.asthahte-mh@gov.in',
// 										type : 'HRD',
// 										user_id : req.User.id
// 									}).then(function (institutecreated){
// 										models.Cart.findAll({
// 											where :{
// 												fees : amount,
// 											user_id : req.User.id,
// 											institute_id : institutecreated.id,
// 											}
// 										}).then(function (cart){
// 											if(cart.length > 0){

// 											}else{
// 												models.Cart.create({
// 													// university_name : detail.university_name,
// 													email :'do.asthahte-mh@gov.in' ,
// 													fees : amount,
// 													user_id : req.User.id,
// 													institute_id : institutecreated.id,
// 												})	
// 											}
// 										})

// 										res.json({
// 											status : 200,
// 											data : created
// 										})
// 									})
// 								}
// 							})


// 						})
// 					}else if(req.body.type == 'bachelor'){
// 						models.Hrd_details.create({
// 							fullName : data.fullnameashrd,
// 							course_name :  data.coursenameashrd,
// 							seat_no : data.seatnoCtrlashrd,
// 							prn_no: data.prnnoCtrlashrd,
// 							cgpa :data.cgpaCtrlashrd,
// 							cgpi :data.cgpiCtrlashrd,
// 							transcript_no :data.transcriptCtrlashrd,
// 							transcript_date :data.transcriptdateashrd,
// 							exam_date : data.examdateashrd,
// 							specialization :data.specializationashrd,
// 							user_id : req.User.id,
// 							degree :  req.body.type
// 						}).then(function (created){
// 							console.log("created"+  created);
// 							models.Institution_details.findAll({
// 								where :{
// 								type : 'HRD',
// 								user_id : req.User.id,
// 								app_id  :'null'
// 								}
// 							}).then(function (inst){
// 								if(inst.length > 0){

// 								}else{
// 									models.Institution_details.create({
// 										email : 'do.asthahte-mh@gov.in',
// 										type : 'HRD',
// 										user_id : req.User.id
// 									}).then(function (institutecreated){
// 										models.Cart.findAll({
// 											where :{
// 												fees : amount,
// 												user_id : req.User.id,
// 												institute_id : institutecreated.id,
// 											}
// 										}).then(function (cart){
// 											if(cart.length > 0){

// 											}else{
// 												models.Cart.create({
// 													// university_name : detail.university_name,
// 													email :'do.asthahte-mh@gov.in' ,
// 													fees : amount,
// 													user_id : req.User.id,
// 													institute_id : institutecreated.id,
// 												})	
// 											}
// 										})

// 										res.json({
// 											status : 200,
// 											data : created
// 										})
// 									})
// 								}
// 							})

// 						})
// 					}

// 				}


// 			})

// })
router.post("/updateHrdInstituteData", middlewares.getUserInfo, middlewares.getUserEducationalInfo, function (req, res) {
	console.log("/updateHrdInstituteData" + JSON.stringify(req.body.data));
	var data = req.body.data

	if (req.body.data.hrdEmailCtrl) {
		var email = req.body.data.hrdEmailCtrl;

	} else if (req.body.hrdEmailCtrl_master) {
		var email = req.body.data.hrdEmailCtrl_master;

	} else {
		var email = req.body.data.hrdEmailCtrl_phd;
	}
	var emailArr;
	var anotherEmailArr;
	var anotherEmail;
	if (email) {
		emailArr = email.split(', ');
		if (emailArr.length > 1) {

			anotherEmailArr = emailArr.shift();
			anotherEmail = emailArr.toString();
		} else {
			anotherEmailArr = email;
			anotherEmail = null;
		}
	} else {
		emailArr = null;
		anotherEmailArr = null;
		anotherEmail = null;
	}
	if (req.User.current_location == "WITHIN") {
		amount = 536 * req.userEducational;
	} else if (req.User.current_location == "OUTSIDE") {
		if (req.User.id == '54944') {
			amount = '100';
		} else if (req.User.id == '54946') {
			amount = '200';
		} else if (req.User.id == '54947') {
			amount = '300';
		} else if (req.User.id == '54948') {
			amount = '400';
		} else if (req.User.id == '54949') {
			amount = '500';
		} else if (req.User.id == '54950') {
			amount = '600';
		} else if (req.User.id == '54951') {
			amount = '700';
		} else if (req.User.id == '54952') {
			amount = '800';
		} else if (req.User.id == '54953') {
			amount = '900';
		} else if (req.User.id == '54954') {
			amount = '1000';
		} else if (req.User.id == '54955') {
			amount = '1100';
		} else if (req.User.id == '54956') {
			amount = '1200';
		} else if (req.User.id == '54957') {
			amount = '1300';
		} else if (req.User.id == '54958') {
			amount = '1400';
		} else if (req.User.id == '54959') {
			amount = '1500';
		} else if (req.User.id == '54961') {
			amount = '1600';
		} else if (req.User.id == '54962') {
			amount = '1700';
		} else if (req.User.id == '54963') {
			amount = '1800';
		} else if (req.User.id == '54964') {
			amount = '1900';
		} else if (req.User.id == '54966') {
			amount = '2000';
		} else {
			amount = 8308 * req.userEducational;
		}
	}

	models.Hrd_details.findAll({
		where: {
			user_id: req.User.id,
			degree: req.body.type

		}
	}).then(function (hrddetails) {
		if (hrddetails.length > 0) {
			if (req.body.type == 'bachelor') {
				models.Hrd_details.update({
					fullName: data.fullnameashrd,
					course_name: data.coursenameashrd,
					seat_no: data.seatnoCtrlashrd,
					seat_no_sem6: data.seatnoCtrlashrd_sem6,
					seat_no_sem5: data.seatnoCtrlashrd_sem5,
					prn_no: data.prnnoCtrlashrd,
					cgpa: data.cgpaCtrlashrd,
					cgpi: data.cgpiCtrlashrd,
					transcript_no: data.transcriptCtrlashrd,
					transcript_date: data.transcriptdateashrd,
					exam_date: data.examdateashrd,
					specialization: data.specializationashrd,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree: req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
					res.json({
						status: 200,
						data: data
					})
				})
			} else if (req.body.type == 'master') {
				models.Hrd_details.update({
					fullName: data.fullnameashrd_master,
					course_name: data.coursenameashrd_master,
					seat_no: data.seatnoCtrlashrd_master,
					seat_no_sem6: data.seatnoCtrlashrd_sem6_master,
					seat_no_sem5: data.seatnoCtrlashrd_sem5_master,
					prn_no: data.prnnoCtrlashrd_master,
					cgpa: data.cgpaCtrlashrd_master,
					cgpi: data.cgpiCtrlashrd_master,
					transcript_no: data.transcriptCtrlashrd_master,
					transcript_date: data.transcriptdateashrd_master,
					exam_date: data.examdateashrd_master,
					specialization: data.specializationashrd_master,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree: req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
					res.json({
						status: 200,
						data: data
					})
				})
			} else if (req.body.type == 'phd') {
				models.Hrd_details.update({
					fullName: data.fullnameashrd_phd,
					course_name: data.coursenameashrd_phd,
					seat_no: data.seatnoCtrlashrd_phd,
					seat_no_sem6: data.seatnoCtrlashrd_sem6_phd,
					seat_no_sem5: data.seatnoCtrlashrd_sem5_phd,
					prn_no: data.prnnoCtrlashrd_phd,
					cgpa: data.cgpaCtrlashrd_phd,
					cgpi: data.cgpiCtrlashrd_phd,
					transcript_no: data.transcriptCtrlashrd_phd,
					transcript_date: data.transcriptdateashrd_phd,
					exam_date: data.examdateashrd_phd,
					specialization: data.specializationashrd_phd,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2

				}, {
					where: {
						user_id: req.User.id,
						degree: req.body.type
					}
				}).then(function (data) {
					// console.log("data" + data);
					// console.log("edudetails-->"+JSON.stringify (edu_details));
					res.json({
						status: 200,
						data: data
					})
				})
			}


		} else {
			if (req.body.type == 'master') {
				models.Hrd_details.create({
					fullName: data.fullnameashrd_master,
					course_name: data.coursenameashrd_master,
					seat_no: data.seatnoCtrlashrd_master,
					seat_no_sem6: data.seatnoCtrlashrd_sem6_master,
					seat_no_sem5: data.seatnoCtrlashrd_sem5_master,
					prn_no: data.prnnoCtrlashrd_master,
					cgpa: data.cgpaCtrlashrd_master,
					cgpi: data.cgpiCtrlashrd_master,
					transcript_no: data.transcriptCtrlashrd_master,
					transcript_date: data.transcriptdateashrd_master,
					exam_date: data.examdateashrd_master,
					specialization: data.specializationashrd_master,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2
				}).then(function (created) {
					console.log("created" + created);
					models.Institution_details.findAll({
						where: {
							type: 'HRD',
							user_id: req.User.id,
							app_id: null
						}
					}).then(function (inst) {
						console.log("inst" + inst);
						console.log("inst" + inst.length);
						if (inst.length > 0) {

						} else {
							models.Institution_details.create({
								email: (emailArr) ? anotherEmailArr : null,
								OtherEmail: (anotherEmail) ? anotherEmail : null,
								type: 'HRD',
								user_id: req.User.id
							}).then(function (institutecreated) {
								models.Cart.findAll({
									where: {
										fees: amount,
										user_id: req.User.id,
										institute_id: institutecreated.id,
									}
								}).then(function (cart) {
									if (cart.length > 0) {

									} else {
										models.Cart.create({
											// university_name : detail.university_name,
											// email :'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in' ,
											email: (emailArr) ? anotherEmailArr : null,
											fees: amount,
											user_id: req.User.id,
											institute_id: institutecreated.id,
										})
									}
								})

								res.json({
									status: 200,
									data: created
								})
							})
						}
					})


				})
			} else if (req.body.type == 'bachelor') {
				models.Hrd_details.create({
					fullName: data.fullnameashrd,
					course_name: data.coursenameashrd,
					seat_no: data.seatnoCtrlashrd,
					seat_no_sem6: data.seatnoCtrlashrd_sem6,
					seat_no_sem5: data.seatnoCtrlashrd_sem5,
					prn_no: data.prnnoCtrlashrd,
					cgpa: data.cgpaCtrlashrd,
					cgpi: data.cgpiCtrlashrd,
					transcript_no: data.transcriptCtrlashrd,
					transcript_date: data.transcriptdateashrd,
					exam_date: data.examdateashrd,
					specialization: data.specializationashrd,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2

				}).then(function (created) {
					console.log("created" + created);
					models.Institution_details.findAll({
						where: {
							type: 'HRD',
							user_id: req.User.id,
							app_id: 'null'
						}
					}).then(function (inst) {
						if (inst.length > 0) {

						} else {
							models.Institution_details.create({
								// email : 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
								email: (emailArr) ? anotherEmailArr : null,
								OtherEmail: (anotherEmail) ? anotherEmail : null,
								type: 'HRD',
								user_id: req.User.id
							}).then(function (institutecreated) {
								models.Cart.findAll({
									where: {
										fees: amount,
										user_id: req.User.id,
										institute_id: institutecreated.id,
									}
								}).then(function (cart) {
									if (cart.length > 0) {

									} else {
										models.Cart.create({
											// university_name : detail.university_name,
											email: 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
											fees: amount,
											user_id: req.User.id,
											institute_id: institutecreated.id,
										})
									}
								})

								res.json({
									status: 200,
									data: created
								})
							})
						}
					})

				})
			} else if (req.body.type == 'phd') {
				models.Hrd_details.create({
					fullName: data.fullnameashrd_phd,
					course_name: data.coursenameashrd_phd,
					seat_no: data.seatnoCtrlashrd_phd,
					seat_no_sem6: data.seatnoCtrlashrd_sem6_phd,
					seat_no_sem5: data.seatnoCtrlashrd_sem5_phd,
					prn_no: data.prnnoCtrlashrd_phd,
					cgpa: data.cgpaCtrlashrd_phd,
					cgpi: data.cgpiCtrlashrd_phd,
					transcript_no: data.transcriptCtrlashrd_phd,
					transcript_date: data.transcriptdateashrd_phd,
					exam_date: data.examdateashrd_phd,
					specialization: data.specializationashrd_phd,
					user_id: req.User.id,
					degree: req.body.type,
					lastsem: req.body.sem1,
					secondlastsem: req.body.sem2
				}).then(function (created) {
					console.log("created" + created);
					models.Institution_details.findAll({
						where: {
							type: 'HRD',
							user_id: req.User.id,
							app_id: 'null',

						}
					}).then(function (inst) {
						if (inst.length > 0) {

						} else {
							models.Institution_details.create({
								// email : 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
								email: (emailArr) ? anotherEmailArr : null,
								OtherEmail: (anotherEmail) ? anotherEmail : null,
								type: 'HRD',
								user_id: req.User.id,
							}).then(function (institutecreated) {
								models.Cart.findAll({
									where: {
										fees: amount,
										user_id: req.User.id,
										institute_id: institutecreated.id,
									}
								}).then(function (cart) {
									if (cart.length > 0) {

									} else {
										models.Cart.create({
											// university_name : detail.university_name,
											email: 'do.asthahte-mh@gov.in,desk-adm1.sdeed-mh@gov.in',
											fees: amount,
											user_id: req.User.id,
											institute_id: institutecreated.id,
										})
									}
								})

								res.json({
									status: 200,
									data: created
								})
							})
						}
					})

				})
			}

		}


	})

})
router.post("/deleteInstituteData", function (req, res) {
	console.log('/deleteInstituteData');
	var inst_id = req.body.id;
	models.Institution_details.destroy({
		where: {
			id: inst_id//this will be your id that you want to delete
		}
	}).then(function (rowDeleted) { // rowDeleted will return number of rows deleted
		if (rowDeleted === 1) {
			models.Cart.destroy({
				where:
				{
					institute_id: inst_id
				}
			}).then(function (cartdeleted) {
				if (cartdeleted === 1) {
					res.json({
						status: 200
					});
				} else {
					res.json({
						status: 400
					});
				}
			})
		} else {
			res.json({
				status: 400
			});
		}
	});
});
router.post("/onDeleteConfirmWesform", function (req, res) {
	console.log('/onDeleteConfirmWesform');
	var inst_id = req.body.id;
	models.Wes_Form.destroy({
		where: {
			id: inst_id//this will be your id that you want to delete
		}
	}).then(function (rowDeleted) { // rowDeleted will return number of rows deleted
		if (rowDeleted === 1) {
			res.json({
				status: 200
			});
		} else {
			res.json({
				status: 400
			});
		}
	});
});


router.post("/deleteInstituteDatahrd", middlewares.getUserInfo, function (req, res) {
	console.log('/deleteInstituteDatahrd' + req.body.id);
	var inst_id = req.body.id;
	models.Institution_details.destroy({
		where: {
			user_id: req.User.id//this will be your id that you want to delete
		}
	}).then(function (rowDeleted) { // rowDeleted will return number of rows deleted
		if (rowDeleted === 1) {
			models.Cart.destroy({
				where:
				{
					user_id: req.User.id
				}
			}).then(function (cartdeleted) {
				models.Hrd_details.destroy({
					where: {
						user_id: req.User.id
					}
				}).then(function (hrddeleted) {
					if (hrddeleted === 1) {
						res.json({
							status: 200
						});
					} else {
						res.json({
							status: 400
						});
					}
				})

			})
		} else {
			res.json({
				status: 400
			});
		}
	});
});
router.get("/addToCart", middlewares.getUserInfo, middlewares.getUserEducationalInfo, function (req, res) {
	console.log('/addToCart');
	var user_id = req.User.id;
	var outercounter = 0;
	var amount;
	if (req.User.current_location == "WITHIN") {
		amount = 536 * req.userEducational;
	} else if (req.User.current_location == "OUTSIDE") {
		if (req.User.id == '54944') {
			amount = '100';
		} else if (req.User.id == '54946') {
			amount = '200';
		} else if (req.User.id == '54947') {
			amount = '300';
		} else if (req.User.id == '54948') {
			amount = '400';
		} else if (req.User.id == '54949') {
			amount = '500';
		} else if (req.User.id == '54950') {
			amount = '600';
		} else if (req.User.id == '54951') {
			amount = '700';
		} else if (req.User.id == '54952') {
			amount = '800';
		} else if (req.User.id == '54953') {
			amount = '900';
		} else if (req.User.id == '54954') {
			amount = '1000';
		} else if (req.User.id == '54955') {
			amount = '1100';
		} else if (req.User.id == '54956') {
			amount = '1200';
		} else if (req.User.id == '54957') {
			amount = '1300';
		} else if (req.User.id == '54958') {
			amount = '1400';
		} else if (req.User.id == '54959') {
			amount = '1500';
		} else if (req.User.id == '54961') {
			amount = '1600';
		} else if (req.User.id == '54962') {
			amount = '1700';
		} else if (req.User.id == '54963') {
			amount = '1800';
		} else if (req.User.id == '54964') {
			amount = '1900';
		} else if (req.User.id == '54966') {
			amount = '2000';
		} else {
			amount = 8308 * req.userEducational;
		}
	}
	models.Institution_details.findAll({
		where: {
			user_id: user_id
		}
	}).then(function (institute_details) {
		if (institute_details.length > 0) {
			institute_details.forEach(function (detail) {
				if (detail.app_id == null) {
					models.Cart.find({
						where: {
							user_id: user_id,
							email: detail.email,
						}
					}).then(function (cart_exists) {
						if (cart_exists) {

						} else {
							models.Cart.create({
								university_name: detail.university_name,
								email: detail.email,
								fees: amount,
								user_id: user_id,
								institute_id: detail.id,
							});
						}
					});
				}
				outercounter++;
			});
			if (outercounter == institute_details.length) {
				res.json({
					status: 200
				});
			}
		} else {
			res.json({
				status: 400
			});
		}
	});
});

router.get("/getCartData", middlewares.getUserInfo, middlewares.getUserEducationalInfo, function (req, res) {
	console.log('/getCartData');
	var user_id = req.User.id;
	var data = [];
	var total_amount;
	var amount;
	if (req.User.current_location == "WITHIN") {
		amount = 536 * req.userEducational;
	} else if (req.User.current_location == "OUTSIDE") {
		amount = 8308 * req.userEducational;
	}
	models.Cart.findAll({
		where: {
			user_id: user_id
		}
	}).then(function (cartvalues) {
		if (cartvalues.length > 0) {
			if (req.User.id == '54944') {
				total_amount = '100';
			} else if (req.User.id == '54946') {
				total_amount = '200';
			} else if (req.User.id == '54947') {
				total_amount = '300';
			} else if (req.User.id == '54948') {
				total_amount = '400';
			} else if (req.User.id == '54949') {
				total_amount = '500';
			} else if (req.User.id == '54950') {
				total_amount = '600';
			} else if (req.User.id == '54951') {
				total_amount = '700';
			} else if (req.User.id == '54952') {
				total_amount = '800';
			} else if (req.User.id == '54953') {
				total_amount = '900';
			} else if (req.User.id == '54954') {
				total_amount = '1000';
			} else if (req.User.id == '54955') {
				total_amount = '1100';
			} else if (req.User.id == '54956') {
				total_amount = '1200';
			} else if (req.User.id == '54957') {
				total_amount = '1300';
			} else if (req.User.id == '54958') {
				total_amount = '1400';
			} else if (req.User.id == '54959') {
				total_amount = '1500';
			} else if (req.User.id == '54961') {
				total_amount = '1600';
			} else if (req.User.id == '54962') {
				total_amount = '1700';
			} else if (req.User.id == '54963') {
				total_amount = '1800';
			} else if (req.User.id == '54964') {
				total_amount = '1900';
			} else if (req.User.id == '54966') {
				total_amount = '2000';
			} else {
				total_amount = amount * cartvalues.length;
			}
			res.json({
				status: 200,
				data: cartvalues,
				total_amount: total_amount
			});
		} else {
			res.json({
				status: 400,
				message: "No values in cart"
			})
		}
	});
});

//new set new education step
router.post('/setEducationDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/setEducationDetails');
	var body_data = req.body.data;
	var grad_inputSchool = body_data.grad_inputSchool;
	var grad_InputMarks = body_data.grad_InputMarks;
	var grad_OutofMarks = body_data.grad_OutofMarks;
	var grad_type = 'Graduation';
	var master_InputSchool = body_data.master_InputSchool;
	var master_InputMarks = body_data.master_InputMarks;
	var master_OutofMarks = body_data.master_OutofMarks;
	var hiddenMaster = 'Master';
	var phd_InputSchool = body_data.phd_InputSchool;
	var phd_InputMarks = body_data.phd_InputMarks;
	var phd_OutofMarks = body_data.phd_OutofMarks;
	var hiddenphd = 'Ph.D';
	var grad_completed;
	var master_completed;
	var phd_completed;
	var applying_courses = ''
	var count = 0;

	if (body_data.applying_for.length > 0) {
		body_data.applying_for.forEach((item) => {
			if (body_data.applying_for.length - 1 > count) {
				applying_courses = applying_courses + item + ", "
			} else if (body_data.applying_for.length - 1 == count) {
				applying_courses = applying_courses + item
			}
			count++;
		})
	}
	models.User.find({
		where: {
			id: req.User.id,
		}
	}).then(function (user) {
		if (user) {
			user.update({
				applying_for: applying_courses,
			}).then(function (updated_user) {
				if ((!grad_inputSchool == undefined || !grad_inputSchool == "") && (!grad_InputMarks == undefined || !grad_InputMarks == "") && (!grad_OutofMarks == undefined || !grad_OutofMarks == "")) {
					models.Educational_Details.find({
						where: {
							user_id: req.User.id,
							type: 'Graduation'
						}
					}).then(function (graduation_exists) {
						if (graduation_exists) {
							graduation_exists.update({
								school_name: grad_inputSchool,
								totalmarks: grad_InputMarks,
								outofmarks: grad_OutofMarks,
								type: grad_type,
							}).then(function (graduation_updated) {
								if (graduation_updated) {
									grad_completed = 'true';
								} else {
									grad_completed = 'false';
								}
							})
						} else {
							models.Educational_Details.create({
								school_name: grad_inputSchool,
								totalmarks: grad_InputMarks,
								outofmarks: grad_OutofMarks,
								type: grad_type,
								user_id: req.User.id
							}).then(function (graduation_created) {
								if (graduation_created) {
									grad_completed = 'true';
								} else {
									grad_completed = 'false';
								}
							});
						}
					})

				} else {
					grad_completed = 'true';
				}

				if ((!master_InputSchool == undefined || master_InputSchool != "") && (!master_InputMarks == undefined || master_InputMarks != "") && (!master_OutofMarks == undefined || master_OutofMarks != "")) {
					models.Educational_Details.find({
						where: {
							user_id: req.User.id,
							type: 'Master'
						}
					}).then(function (master_exists) {
						if (master_exists) {

							master_exists.update({
								school_name: master_InputSchool,
								totalmarks: master_InputMarks,
								outofmarks: master_OutofMarks,
								type: hiddenMaster,
							}).then(function (master_updated) {
								if (master_updated) {
									master_completed = 'true'
								} else {
									master_completed = 'false';
								}
							})
						} else {
							models.Educational_Details.create({
								school_name: master_InputSchool,
								totalmarks: master_InputMarks,
								outofmarks: master_OutofMarks,
								type: hiddenMaster,
								user_id: req.User.id
							}).then(function (master_created) {
								if (master_created) {
									master_completed = 'true'
								} else {
									master_completed = 'false';
								}
							});
						}
					});

				} else {
					master_completed = 'true'
				}

				if ((!phd_InputSchool == undefined || phd_InputSchool != "") && (!phd_InputMarks == undefined || phd_InputMarks != "") && (!phd_OutofMarks == undefined || phd_OutofMarks != "")) {
					models.Educational_Details.find({
						where: {
							user_id: req.User.id,
							type: 'Ph.D'
						}
					}).then(function (phd_exists) {
						if (phd_exists) {

							phd_exists.update({
								school_name: phd_InputSchool,
								totalmarks: phd_InputMarks,
								outofmarks: phd_OutofMarks,
								type: hiddenphd,
							}).then(function (phd_updated) {
								if (phd_updated) {
									phd_completed = 'true'
								} else {
									phd_completed = 'false';
								}
							})
						} else {
							models.Educational_Details.create({
								school_name: phd_InputSchool,
								totalmarks: phd_InputMarks,
								outofmarks: phd_OutofMarks,
								type: hiddenphd,
								user_id: req.User.id
							}).then(function (phd_created) {
								if (phd_created) {
									phd_completed = 'true'
								} else {
									phd_completed = 'false';
								}
							});
						}
					});

				} else {
					phd_completed = 'true'
				}

				setTimeout(function () {
					if (grad_completed == 'true' && master_completed == 'true' && phd_completed == 'true') {
						res.json({
							status: 200
						})
					} else if (grad_completed == 'false' && master_completed == 'true' && phd_completed == 'true') {
						res.json({
							status: 400,
							message: 'Problem in saving Graduation details'
						});
					} else if (grad_completed == 'true' && master_completed == 'false' && phd_completed == 'true') {
						res.json({
							status: 400,
							message: 'Problem in saving Master details'
						});
					} else if (grad_completed == 'true' && master_completed == 'true' && phd_completed == 'false') {
						res.json({
							status: 400,
							message: 'Problem in saving Ph.D details'
						});
					}
				}, 500);

			});
		} else {
			errors = [];
			res.json({
				status: 400
			});
		}
	});

});

router.get('/getUserEducation', middlewares.getUserInfo, function (req, res) {
	console.log('/getUserEducation');
	var view_data = {};
	var previousApp = {
		present: false,
		prevAppData: false
	}

	if (req.query.editFlag == 'true') {
		models.Applied_For_Details.find({
			where: {
				user_id: req.User.id,
				app_id: req.query.app_id
			}
		}).then(function (appliedForDetails) {
			view_data.appliedForDetails = appliedForDetails
			res.json({
				status: 200,
				data: view_data
			})
		})
	} else {
		models.Application.find({
			where: {
				user_id: req.User.id
			}
		}).then(function (application) {
			if (application) {
				previousApp.present = true;
				models.userMarkList.find({
					where: {
						user_id: req.User.id
					}
				}).then(function (userMarkList) {
					if (userMarkList && userMarkList.previous_data == true) {
						previousApp.prevAppData = true;
					}

					models.Applied_For_Details.find({
						where: {
							user_id: req.User.id,
							app_id: {
								[Op.eq]: null
							}
						}
					}).then(function (appliedForDetails) {

						view_data.appliedForDetails = appliedForDetails
						res.json({
							status: 200,
							data: view_data,
							previousApp: previousApp
						})
					})
				})
			} else {

				models.Applied_For_Details.find({
					where: {
						user_id: req.User.id,
						app_id: {
							[Op.eq]: null
						}
					}
				}).then(function (appliedForDetails) {

					view_data.appliedForDetails = appliedForDetails
					res.json({
						status: 200,
						data: view_data,
						previousApp: previousApp
					})
				})
			}
		})
	}
});

// router.get('/getInstructionalDetails',middlewares.getUserInfo,(req,res)=>{
// 	console.log('/getInstructionalDetails');
// 	var educationDetails = {
// 		bachelors : [],
// 		masters : []
// 	};
// 	if(req.query.editFlag == 'true'){
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 				}
// 			}).then(function(master_Details){
// 				var differentStream = [];
// 				var masterDetails = [];
// 				if(master_Details.length > 0){
// 					master_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									masterDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){

// 						masterDetails.forEach(master=>{
// 							models.InstructionalDetails.findAll({
// 								where:{
// 									userId : req.User.id,
// 									education : 'Masters_' + master.faculty
// 								}
// 							}).then(function(instructionalDetails){
// 								if(differentStream.length > 0){
// 									var flag = false;
// 									differentStream.forEach(single=>{
// 										if(single.faculty == master.faculty){
// 											flag = true;
// 										}
// 									})
// 									if(flag == false){

// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails
// 										})
// 									}
// 								}else{
// 									differentStream.push({
// 										faculty : master.faculty,
// 										instructionalDetails : instructionalDetails
// 									})
// 								}
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length > 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails
// 										})
// 									}
// 								})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 									}
// 								}).then(function(bachelorDetails){
// 									var differentStream = [];
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){

// 											bachelorDetails.forEach(bachelor=>{
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails
// 														})
// 													}
// 												})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.facultymaster.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){

// 										bachelorDetails.forEach(bachelor=>{
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelor.faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												if(differentStream.length > 0){
// 													var flag = false;
// 													differentStream.forEach(single=>{
// 														if(single.faculty == bachelor.faculty){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){

// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails
// 														})
// 													}
// 												}else{
// 													differentStream.push({
// 														faculty : bachelor.faculty,
// 														instructionalDetails : instructionalDetails
// 													})
// 												}
// 											})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;

// 											},3000)
// 										},4000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												form :true
// 											})
// 										})
// 									}
// 								}
// 							})
// 							setTimeout(()=>{
// 								res.json({ 
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},2000);
// 						})
// 					}
// 				}
// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 				}
// 			}).then(function(bachelor_Details){
// 				var differentStream = [];
// 				var bachelorDetails = [];
// 				if(bachelor_Details.length > 0){
// 					bachelor_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									bachelorDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){

// 						bachelorDetails.forEach(bachelor=>{
// 							models.InstructionalDetails.findAll({
// 								where:{
// 									userId : req.User.id,
// 									education : 'Bachelors_' + bachelor.faculty
// 								}
// 							}).then(function(instructionalDetails){
// 								if(differentStream.length > 0){
// 									var flag = false;
// 									differentStream.forEach(single=>{
// 										if(single.faculty == bachelor.faculty){
// 											flag = true;
// 										}
// 									})
// 									if(flag == false){

// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails
// 										})
// 									}
// 								}else{
// 									differentStream.push({
// 										faculty : bachelor.faculty,
// 										instructionalDetails : instructionalDetails
// 									})
// 								}
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;	
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 					}
// 				}
// 			})
// 		}
// 	}else{
// 		models.userMarkList.find({
// 			where :{
// 				user_id : req.User.id
// 			}
// 		}).then(function(userMarklist){
// 			if(userMarklist.previous_data == true){
// 				if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.facultymaster.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({	
// 													status : 200,	
// 													data : educationDetails	
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.facultymaster.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({ 
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.facultymaster.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({	
// 													status : 200,	
// 													data : educationDetails	
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.facultymaster.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({ 
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Bachelors",
// 						}
// 					}).then(function(bachelorDetails){
// 						var differentStream = [];
// 						if(bachelorDetails.length >0){
// 							if(bachelorDetails[0].college_stream_type == true){

// 								bachelorDetails.forEach(bachelor=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Bachelors_' + bachelor.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == bachelor.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : bachelor.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(bach=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Bachelors',
// 												faculty : bach.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Bachelors",
// 													faculty : bach.faculty,
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var bachelors = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var bachFlag = false;
// 											if(bachelors.length > 0){
// 												bachelors.forEach(bach=>{
// 													if(bach.faculty == coll.faculty){
// 														bachFlag = true;
// 														var count = 0;
// 														bach.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= bach.colleges.length){
// 															bach.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(bach.instructionalDetails.length > 0) {
// 															bach.form = true;
// 														}
// 													}
// 												})

// 												if(bachFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													bachelors.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												bachelors.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.bachelors = bachelors;
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},3000)
// 								},4000)

// 							}else if(bachelorDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelorDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									var form;
// 									// if(instructionalDetails.length > 0){
// 									// 	form = true;
// 									// }else{
// 									// 	form = false;	
// 									// }
// 									college.push({
// 										collegeId : bachelorDetails[0].collegeId
// 									})
// 									educationDetails.bachelors.push({
// 										faculty : bachelorDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									res.json({
// 										status : 200,
// 										data : educationDetails
// 									})
// 								})
// 							}
// 						}
// 					})
// 				}
// 			}else{
// 				if(req.query.degreeValue == 'Phd,Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 							app_id : null
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.facultymaster.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({	
// 													status : 200,	
// 													data : educationDetails	
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.facultymaster.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({ 
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Masters,Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Masters",
// 							app_id : null
// 						}
// 					}).then(function(masterDetails){
// 						var differentStream = [];
// 						if(masterDetails.length >0){
// 							if(masterDetails[0].college_stream_type == true){

// 								masterDetails.forEach(master=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Masters_' + master.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == master.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : master.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(mast=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Masters',
// 												faculty : mast.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Masters",
// 													faculty : mast.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : mast.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var masters = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var mastFlag = false;
// 											if(masters.length > 0){
// 												masters.forEach(mast=>{
// 													if(mast.faculty == coll.faculty){
// 														mastFlag = true;
// 														var count = 0;
// 														mast.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= mast.colleges.length){
// 															mast.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(mast.instructionalDetails.length >= 0) {
// 															mast.form = true;
// 														}
// 													}
// 												})

// 												if(mastFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													masters.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												masters.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.masters = masters;
// 										models.userMarkList.findAll({
// 											where :{
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(bachelorDetails){
// 											var differentStream = [];
// 											if(bachelorDetails.length >0){
// 												if(bachelorDetails[0].college_stream_type == true){

// 													bachelorDetails.forEach(bachelor=>{
// 														models.InstructionalDetails.findAll({
// 															where:{
// 																userId : req.User.id,
// 																education : 'Bachelors_' + bachelor.faculty
// 															}
// 														}).then(function(instructionalDetails){
// 															if(differentStream.length > 0){
// 																var flag = false;
// 																differentStream.forEach(single=>{
// 																	if(single.faculty == bachelor.faculty){
// 																		flag = true;
// 																	}
// 																})
// 																if(flag == false){

// 																	differentStream.push({
// 																		faculty : bachelor.faculty,
// 																		instructionalDetails : instructionalDetails
// 																	})
// 																}
// 															}else{
// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														})
// 													})
// 													setTimeout(() =>{
// 														var differentCollege = []
// 														differentStream.forEach(bach=>{
// 															models.facultymaster.find({
// 																where :{
// 																	degree : 'Bachelors',
// 																	faculty : bach.faculty
// 																}
// 															}).then(function(facultyMaster){
// 																models.userMarkList.findAll({
// 																	where:{
// 																		user_id : req.User.id,
// 																		type : "Bachelors",
// 																		faculty : bach.faculty,
// 																		app_id : null
// 																	}
// 																}).then(function(userMarklist){
// 																	if(userMarklist.length > 0){
// 																		if(userMarklist[0].patteren == "Annual"){
// 																			userMarklist.forEach(marklist=>{
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails
// 																				})
// 																			})
// 																		}else if(userMarklist[0].patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				userMarklist.forEach(marklist=>{
// 																					if(marklist.name == sem){
// 																						differentCollege.push({
// 																							faculty : marklist.faculty,
// 																							collegeId : marklist.collegeId,
// 																							instructionalDetails : bach.instructionalDetails
// 																						})
// 																					}
// 																				})
// 																			}
// 																		}
// 																	}
// 																})
// 															})
// 														})
// 														setTimeout(()=>{
// 															var bachelors = [];
// 															differentCollege.forEach(coll=>{
// 																var college = [];
// 																var bachFlag = false;
// 																if(bachelors.length > 0){
// 																	bachelors.forEach(bach=>{
// 																		if(bach.faculty == coll.faculty){
// 																			bachFlag = true;
// 																			var count = 0;
// 																			bach.colleges.forEach(clg=>{
// 																				if(clg.collegeId == coll.collegeId){
// 																					count ++;
// 																				}
// 																			})
// 																			if(count <= bach.colleges.length){
// 																				bach.colleges.push({
// 																					collegeId : coll.collegeId
// 																				})
// 																			}

// 																			if(bach.instructionalDetails.length >= 0) {
// 																				bach.form = true;
// 																			}
// 																		}
// 																	})

// 																	if(bachFlag == false){
// 																		college.push({
// 																			collegeId : coll.collegeId
// 																		})

// 																		bachelors.push({
// 																			faculty : coll.faculty,
// 																			colleges : college,
// 																			instructionalDetails : coll.instructionalDetails
// 																		})
// 																	}
// 																}else{
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges :college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															})
// 															educationDetails.bachelors = bachelors;
// 															res.json({
// 																status : 200,
// 																data : educationDetails
// 															})
// 														},3000)
// 													},4000)

// 												}else if(bachelorDetails[0].college_stream_type == false){
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelorDetails[0].faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														var college = [];
// 														college.push({
// 															collegeId : bachelorDetails[0].collegeId
// 														})
// 														educationDetails.bachelors.push({
// 															faculty : bachelorDetails[0].faculty,
// 															colleges : college,
// 															instructionalDetails : instructionalDetails,
// 															form : true
// 														})
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													})
// 												}
// 											}else{
// 												res.json({	
// 													status : 200,	
// 													data : educationDetails	
// 												})
// 											}
// 										})
// 									},3000)
// 								},4000)

// 							}else if(masterDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + masterDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									college.push({
// 										collegeId : masterDetails[0].collegeId
// 									})
// 									educationDetails.masters.push({
// 										faculty : masterDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									models.userMarkList.findAll({
// 										where :{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											app_id : null
// 										}
// 									}).then(function(bachelorDetails){
// 										var differentStream = [];
// 										if(bachelorDetails.length >0){
// 											if(bachelorDetails[0].college_stream_type == true){

// 												bachelorDetails.forEach(bachelor=>{
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails
// 															})
// 														}
// 													})
// 												})
// 												setTimeout(() =>{
// 													var differentCollege = []
// 													differentStream.forEach(bach=>{
// 														models.facultymaster.find({
// 															where :{
// 																degree : 'Bachelors',
// 																faculty : bach.faculty
// 															}
// 														}).then(function(facultyMaster){
// 															models.userMarkList.findAll({
// 																where:{
// 																	user_id : req.User.id,
// 																	type : "Bachelors",
// 																	faculty : bach.faculty,
// 																}
// 															}).then(function(userMarklist){
// 																if(userMarklist.length > 0){
// 																	userMarklist.forEach(user_Marklist=>{
// 																		if(user_Marklist.patteren == "Annual"){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails
// 																			})
// 																		}else if(user_Marklist.patteren == "Semester"){
// 																			var semesters = facultyMaster.year * 2;
// 																			for(var i = 2; i <= semesters; i=i+2){
// 																				var sem = "Semester " + i
// 																				if(user_Marklist.name == sem){
// 																					differentCollege.push({
// 																						faculty : user_Marklist.faculty,
// 																						collegeId : user_Marklist.collegeId,
// 																						instructionalDetails : bach.instructionalDetails
// 																					})
// 																				}
// 																			}
// 																		}
// 																	})
// 																}
// 															})
// 														})
// 													})
// 													setTimeout(()=>{
// 														var bachelors = [];
// 														differentCollege.forEach(coll=>{
// 															var college = [];
// 															var bachFlag = false;
// 															if(bachelors.length > 0){
// 																bachelors.forEach(bach=>{
// 																	if(bach.faculty == coll.faculty){
// 																		bachFlag = true;
// 																		var count = 0;
// 																		bach.colleges.forEach(clg=>{
// 																			if(clg.collegeId == coll.collegeId){
// 																				count ++;
// 																			}
// 																		})
// 																		if(count <= bach.colleges.length){
// 																			bach.colleges.push({
// 																				collegeId : coll.collegeId
// 																			})
// 																		}

// 																		if(bach.instructionalDetails.length > 0) {
// 																			bach.form = true;
// 																		}
// 																	}
// 																})

// 																if(bachFlag == false){
// 																	college.push({
// 																		collegeId : coll.collegeId
// 																	})

// 																	bachelors.push({
// 																		faculty : coll.faculty,
// 																		colleges : college,
// 																		instructionalDetails : coll.instructionalDetails
// 																	})
// 																}
// 															}else{
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})
// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges :college,
// 																	instructionalDetails : coll.instructionalDetails
// 																})
// 															}
// 														})
// 														educationDetails.bachelors = bachelors;
// 														res.json({
// 															status : 200,
// 															data : educationDetails
// 														})
// 													},5000)
// 												},6000)

// 											}else if(bachelorDetails[0].college_stream_type == false){
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelorDetails[0].faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													var college = [];
// 													college.push({
// 														collegeId : bachelorDetails[0].collegeId
// 													})
// 													educationDetails.bachelors.push({
// 														faculty : bachelorDetails[0].faculty,
// 														colleges : college,
// 														instructionalDetails : instructionalDetails,
// 														form :true
// 													})
// 													res.json({ 
// 														status : 200,
// 														data : educationDetails
// 													})
// 												})
// 											}
// 										}
// 										// setTimeout(()=>{
// 										// 	res.json({
// 										// 		status : 200,
// 										// 		data : educationDetails
// 										// 	})
// 										// },10000)
// 									})
// 								})
// 							}
// 						}


// 					})
// 				}else if(req.query.degreeValue == 'Bachelors'){
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : "Bachelors",
// 							app_id : null
// 						}
// 					}).then(function(bachelorDetails){
// 						var differentStream = [];
// 						if(bachelorDetails.length >0){
// 							if(bachelorDetails[0].college_stream_type == true){

// 								bachelorDetails.forEach(bachelor=>{
// 									models.InstructionalDetails.findAll({
// 										where:{
// 											userId : req.User.id,
// 											education : 'Bachelors_' + bachelor.faculty
// 										}
// 									}).then(function(instructionalDetails){
// 										if(differentStream.length > 0){
// 											var flag = false;
// 											differentStream.forEach(single=>{
// 												if(single.faculty == bachelor.faculty){
// 													flag = true;
// 												}
// 											})
// 											if(flag == false){

// 												differentStream.push({
// 													faculty : bachelor.faculty,
// 													instructionalDetails : instructionalDetails
// 												})
// 											}
// 										}else{
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails
// 											})
// 										}
// 									})
// 								})
// 								setTimeout(() =>{
// 									var differentCollege = []
// 									differentStream.forEach(bach=>{
// 										models.facultymaster.find({
// 											where :{
// 												degree : 'Bachelors',
// 												faculty : bach.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											models.userMarkList.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													type : "Bachelors",
// 													faculty : bach.faculty,
// 													app_id : null
// 												}
// 											}).then(function(userMarklist){
// 												if(userMarklist.length > 0){
// 													if(userMarklist[0].patteren == "Annual"){
// 														userMarklist.forEach(marklist=>{
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails
// 															})
// 														})
// 													}else if(userMarklist[0].patteren == "Semester"){
// 														var semesters = facultyMaster.year * 2;
// 														for(var i = 2; i <= semesters; i=i+2){
// 															var sem = "Semester " + i
// 															userMarklist.forEach(marklist=>{
// 																if(marklist.name == sem){
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails
// 																	})
// 																}
// 															})
// 														}
// 													}
// 												}
// 											})
// 										})
// 									})
// 									setTimeout(()=>{
// 										var bachelors = [];
// 										differentCollege.forEach(coll=>{
// 											var college = [];
// 											var bachFlag = false;
// 											if(bachelors.length > 0){
// 												bachelors.forEach(bach=>{
// 													if(bach.faculty == coll.faculty){
// 														bachFlag = true;
// 														var count = 0;
// 														bach.colleges.forEach(clg=>{
// 															if(clg.collegeId == coll.collegeId){
// 																count ++;
// 															}
// 														})
// 														if(count <= bach.colleges.length){
// 															bach.colleges.push({
// 																collegeId : coll.collegeId
// 															})
// 														}

// 														if(bach.instructionalDetails.length > 0) {
// 															bach.form = true;
// 														}
// 													}
// 												})

// 												if(bachFlag == false){
// 													college.push({
// 														collegeId : coll.collegeId
// 													})

// 													bachelors.push({
// 														faculty : coll.faculty,
// 														colleges : college,
// 														instructionalDetails : coll.instructionalDetails
// 													})
// 												}
// 											}else{
// 												college.push({
// 													collegeId : coll.collegeId
// 												})
// 												bachelors.push({
// 													faculty : coll.faculty,
// 													colleges :college,
// 													instructionalDetails : coll.instructionalDetails
// 												})
// 											}
// 										})
// 										educationDetails.bachelors = bachelors;
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},3000)
// 								},4000)

// 							}else if(bachelorDetails[0].college_stream_type == false){
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelorDetails[0].faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									var college = [];
// 									var form;
// 									// if(instructionalDetails.length > 0){
// 									// 	form = true;
// 									// }else{
// 									// 	form = false;	
// 									// }
// 									college.push({
// 										collegeId : bachelorDetails[0].collegeId
// 									})
// 									educationDetails.bachelors.push({
// 										faculty : bachelorDetails[0].faculty,
// 										colleges : college,
// 										instructionalDetails : instructionalDetails,
// 										form : true
// 									})
// 									res.json({
// 										status : 200,
// 										data : educationDetails
// 									})
// 								})
// 							}
// 						}
// 					})
// 				}
// 			}
// 		})

// 	}
// })

// router.get('/getInstructionalDetails',middlewares.getUserInfo,(req,res)=>{
// 	console.log('/getInstructionalDetails-------------');
// 	var educationDetails = {
// 		bachelors : [],
// 		masters : []
// 	};
// 	if(req.query.editFlag == 'true'){
// 		console.log('true');
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 				}
// 			}).then(function(master_Details){
// 				let masters_duration;
// 				var differentStream = [];
// 				var masterDetails = [];
// 				if(master_Details.length > 0){
// 					master_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									masterDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						masterDetails.forEach(master=>{
// 							models.College.find({
// 									where :{
// 										id : master.collegeId
// 									}
// 								}).then(collegename=>{
// 									if(master.patteren == "Annual"){
// 										college_List.push({
// 											clg_name : collegename.name,
// 											academic_year : master.name
// 										})
// 									}else if(master.patteren == "Semester"){
// 										switch(master.name){
// 											case 'Semester 2' : 
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'First Year'
// 												})
// 												break;
// 											case 'Semester 4' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Second Year'
// 												})
// 												break;
// 											case 'Semester 6' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Third Year'
// 												})
// 												break;
// 											case 'Semester 8' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fourth Year'
// 												})

// 												break;
// 											case 'Semester 10' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fifth Year'
// 												})
// 												break;
// 										}
// 									}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year,
// 														form : true
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year,
// 																form: true
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									models.College.find({
// 										where :{
// 											id : coll.collegeId
// 										}
// 									}).then(collegename=>{
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length > 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												college_name: collegename.name,
// 												form : true
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											college_name: collegename.name,
// 											form : true
// 										})
// 									}
// 								})
// 							})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 									}
// 								}).then(function(bachelorDetails){
// 									// let clg_duration =3;
// 									var differentStream = [];
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' : 
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 													models.InstructionalDetails.findAll({
// 														where:{
// 															userId : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(instructionalDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	instructionalDetails : instructionalDetails,
// 																	type : bachelor.type,
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.facultymaster.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 										})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								let clg_duration ;
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' : 
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails,
// 																		// college_List : college_List,
// 																		type : user_Marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails,
// 																				// college_List : college_List,
// 																				type : user_Marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;

// 											},3000)
// 										},4000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.facultymaster.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 										})
// 									})
// 									})
// 									}
// 								}
// 							})
// 							setTimeout(()=>{
// 								res.json({ 
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},2000);
// 						})
// 					})
// 					})
// 					}
// 				}
// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 				}
// 			}).then(function(bachelor_Details){
// 				let clg_duration ;
// 				var differentStream = [];
// 				var bachelorDetails = [];
// 				if(bachelor_Details.length > 0){
// 					bachelor_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									bachelorDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						let college_List = [];
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelor.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == bachelor.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : bachelor.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration : facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						console.log('in false');
// 						models.College.find({
// 							where :{
// 								id : bachelorDetails[0].collegeId
// 							}
// 						}).then(collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Bachelors',
// 									faculty : bachelorDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;	
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 								college_name: collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}
// 			})
// 		}
// 	}else{
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 					// app_id : null
// 				}
// 			}).then(function(masterDetails){
// 				let masters_duration;
// 				var differentStream = [];
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						let academic_year_master =[]
// 						masterDetails.forEach(master=>{
// 								models.College.find({
// 									where :{
// 										id : master.collegeId
// 									}
// 								}).then(collegename=>{

// 									if(master.patteren == "Annual"){
// 										college_List.push({
// 											clg_name : collegename.name,
// 											academic_year : master.name
// 										})
// 									}else if(master.patteren == "Semester"){
// 										switch(master.name){
// 											case 'Semester 2' : 
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'First Year'
// 												})
// 												break;
// 											case 'Semester 4' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Second Year'
// 												})
// 												break;
// 											case 'Semester 6' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Third Year'
// 												})
// 												break;
// 											case 'Semester 8' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fourth Year'
// 												})

// 												break;
// 											case 'Semester 10' :
// 												college_List.push({
// 													clg_name : collegename.name,
// 													academic_year : 'Fifth Year'
// 												})
// 												break;
// 										}
// 									}
// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							/** Updating college list **/
// 							// jsonObject = college_List.map(JSON.stringify);
// 							// console.log("Data===>"+jsonObject);
// 							// uniqueSet = new Set(jsonObject);
// 							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 							/** Updating college list **/
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								console.log("mast==>"+JSON.stringify(mast))
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 											app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													// academic_year_master.push({
// 													// 	academic_year : marklist.name
// 													// })
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : mast.instructionalDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year,
// 														college_name: marklist.name
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															// if(marklist.name == 'Semester 2'){
// 															// 	academic_year_master.push({
// 															// 		academic_year : 'First Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 4'){
// 															// 	academic_year_master.push({
// 															// 		academic_year : 'Second Year'
// 															// 	})
// 															// }
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : mast.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year,
// 																// college_name: collegename.name,
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								differentCollege.forEach(coll=>{
// 									console.log("coll==."+JSON.stringify(coll))
// 									models.College.find({
// 										where :{
// 											id : coll.collegeId
// 										}
// 									}).then(collegename=>{

// 									var mastFlag = false
// 									var college = [];
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.instructionalDetails.length >= 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												college_name: collegename.name,
// 												form : true
// 												// academic_year : academic_year_master
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											college_name: collegename.name,
// 											form : true
// 											// academic_year : academic_year_master
// 										})
// 									}
// 								})
// 							})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 										app_id : null
// 									}
// 								}).then(function(bachelorDetails){
// 									let clg_duration;
// 									var differentStream = [];
// 									// let academic_year_list =[];	
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' : 
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 												models.InstructionalDetails.findAll({
// 													where:{
// 														userId : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(instructionalDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																instructionalDetails : instructionalDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 											})
// 											setTimeout(() =>{
// 												/** Updating college list **/
// 												// jsonObject = college_List.map(JSON.stringify);
// 												// console.log("Data===>"+jsonObject);
// 												// uniqueSet = new Set(jsonObject);
// 												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 												/** Updating college list **/
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.facultymaster.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 																app_id : null
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		// academic_year_list.push({
// 																		// 	academic_year : marklist.name
// 																		// })
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			instructionalDetails : bach.instructionalDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List.push,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				// if(marklist.name == 'Semester 2'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'First Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 4'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Second Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 6'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Third Year'
// 																				// 	})
// 																				// }
// 																				// if(marklist.name == 'Semester 8'){
// 																				// 	academic_year_list.push({
// 																				// 		academic_year : 'Fourth Year'
// 																				// 	})
// 																				// }
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					instructionalDetails : bach.instructionalDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year,
// 																					form : true
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.instructionalDetails.length >= 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	instructionalDetails : coll.instructionalDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																	form : true
// 																	// academic_year : academic_year_list
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																instructionalDetails : coll.instructionalDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 																// academic_year : academic_year_list
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													instructionalDetails : instructionalDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 													form : true
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 									})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration :  facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 									app_id : null
// 								}
// 							}).then(function(bachelorDetails){
// 								// let clg_duration ;
// 								var differentStream = [];
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' : 
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 											models.InstructionalDetails.findAll({
// 												where:{
// 													userId : req.User.id,
// 													education : 'Bachelors_' + bachelor.faculty
// 												}
// 											}).then(function(instructionalDetails){
// 												if(differentStream.length > 0){
// 													var flag = false;
// 													differentStream.forEach(single=>{
// 														if(single.faculty == bachelor.faculty){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){

// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															instructionalDetails : instructionalDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												}else{
// 													differentStream.push({
// 														faculty : bachelor.faculty,
// 														instructionalDetails : instructionalDetails,
// 														type : bachelor.type,
// 													})
// 												}
// 											})
// 										})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															userMarklist.forEach(user_Marklist=>{
// 																if(user_Marklist.patteren == "Annual"){
// 																	differentCollege.push({
// 																		faculty : user_Marklist.faculty,
// 																		collegeId : user_Marklist.collegeId,
// 																		instructionalDetails : bach.instructionalDetails,
// 																		// college_List : college_List,
// 																		type : user_Marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																}else if(user_Marklist.patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		if(user_Marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : user_Marklist.faculty,
// 																				collegeId : user_Marklist.collegeId,
// 																				instructionalDetails : bach.instructionalDetails,
// 																				// college_List : college_List,
// 																				type : user_Marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	}
// 																}
// 															})
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.instructionalDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																instructionalDetails : coll.instructionalDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															instructionalDetails : coll.instructionalDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											},5000)
// 										},6000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.facultymaster.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.InstructionalDetails.findAll({
// 											where:{
// 												userId : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(instructionalDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												instructionalDetails : instructionalDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 											res.json({ 
// 												status : 200,
// 												data : educationDetails
// 											})
// 										})
// 									})
// 								})
// 									}

// 								}else {
// 									console.log('else');
// 									setTimeout(()=>{
// 										res.json({
// 											status : 200,
// 											data : educationDetails
// 										})
// 									},10000)

// 								}
// 								// setTimeout(()=>{
// 								// 	res.json({
// 								// 		status : 200,
// 								// 		data : educationDetails
// 								// 	})
// 								// },10000)
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}


// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			let college_List = [];
// 			let academic_year_list =[];	
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 					// app_id : null
// 				}
// 			}).then(function(bachelorDetails){
// 				var differentStream = [];
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						console.log('true');
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}

// 								models.InstructionalDetails.findAll({
// 									where:{
// 										userId : req.User.id,
// 										education : 'Bachelors_' + bachelor.faculty
// 									}
// 								}).then(function(instructionalDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == bachelor.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){
// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												instructionalDetails : instructionalDetails,
// 												type : bachelor.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											instructionalDetails : instructionalDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								console.log("bach==>"+JSON.stringify(bach))
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									console.log("facultyMaster===>"+JSON.stringify(facultyMaster))
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 											// app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													// college_List.push({
// 													// 	academic_year : marklist.name
// 													// })
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														instructionalDetails : bach.instructionalDetails,
// 														type : marklist.type,
// 														// academic_year : marklist.name,
// 														// college_List : Updated_list,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												console.log('semesterrrrr');
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{

// 														// console.log("userMarklist===>"+JSON.stringify(marklist))
// 														if(marklist.name == sem){
// 															// if(marklist.name == 'Semester 2'){
// 															// 	college_List.push({
// 															// 		academic_year : 'First Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 4'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Second Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 6'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Third Year'
// 															// 	})
// 															// }
// 															// if(marklist.name == 'Semester 8'){
// 															// 	college_List.push({
// 															// 		academic_year : 'Fourth Year'
// 															// 	})
// 															// }
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																instructionalDetails : bach.instructionalDetails,
// 																type : marklist.type,
// 																// college_List : Updated_list,
// 																clg_duration: facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								console.log('settimeout');
// 								/** Updating college list **/
// 							// jsonObject = college_List.map(JSON.stringify);
// 							// console.log("Data===>"+jsonObject);
// 							// uniqueSet = new Set(jsonObject);
// 							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
// 							/** Updating college list **/
// 								console.log("college_List===>"+JSON.stringify(college_List))
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.instructionalDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												instructionalDetails : coll.instructionalDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												// academic_year : academic_year_list
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											instructionalDetails : coll.instructionalDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											// academic_year : academic_year_list
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						console.log("bachelorDetails[0].===>"+JSON.stringify(bachelorDetails[0]))
// 						models.College.find({
// 							where :{
// 								id : bachelorDetails[0].collegeId
// 							}
// 						}).then(collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Bachelors',
// 									faculty : bachelorDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 								console.log("facultyMaster==>"+JSON.stringify(facultyMaster))
// 						models.InstructionalDetails.findAll({
// 							where:{
// 								userId : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(instructionalDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;	
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								instructionalDetails : instructionalDetails,
// 								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 								college_name: collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 						})
// 					})
// 					}
// 				}
// 			})
// 		}
// 	}     
// })

router.get('/getInstructionalDetails', middlewares.getUserInfo, (req, res) => {
	console.log('/getInstructionalDetails-------------');
	var educationDetails = {
		bachelors: [],
		masters: [],
		phd: []
	};
	if (req.query.editFlag == 'true') {
		console.log('true');
		if (req.query.degreeValue == 'Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
				}
			}).then(function (master_Details) {
				let masters_duration;
				var differentStream = [];
				var masterDetails = [];
				if (master_Details.length > 0) {
					master_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									masterDetails.push(detail);
								}
							})
						}
					})
				}
				if (masterDetails.length > 0) {
					if (masterDetails[0].college_stream_type == true) {
						let college_List = []
						masterDetails.forEach(master => {
							models.College.find({
								where: {
									id: master.collegeId
								}
							}).then(collegename => {
								if (master.patteren == "Annual") {
									college_List.push({
										clg_name: collegename.name,
										academic_year: master.name
									})
								} else if (master.patteren == "Semester") {
									switch (master.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + master.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == master.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: master.faculty,
												instructionalDetails: instructionalDetails,
												type: master.type
											})
										}
									} else {
										differentStream.push({
											faculty: master.faculty,
											instructionalDetails: instructionalDetails,
											type: master.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(mast => {
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: mast.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: mast.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: mast.instructionalDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year,
														form: true
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: mast.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year,
																form: true
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];
								differentCollege.forEach(coll => {
									var college = [];
									models.College.find({
										where: {
											id: coll.collegeId
										}
									}).then(collegename => {
										if (masters.length > 0) {
											masters.forEach(mast => {
												if (mast.faculty == coll.faculty) {
													mastFlag = true;
													var count = 0;
													mast.colleges.forEach(clg => {
														if (clg.collegeId == coll.collegeId) {
															count++;
														}
													})
													if (count <= mast.colleges.length) {
														mast.colleges.push({
															collegeId: coll.collegeId
														})
													}

													if (mast.instructionalDetails.length > 0) {
														mast.form = true;
													}
												}
											})

											if (mastFlag == false) {
												college.push({
													collegeId: coll.collegeId
												})

												masters.push({
													faculty: coll.faculty,
													colleges: college,
													instructionalDetails: coll.instructionalDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration,
													college_name: collegename.name,
													form: true
												})
											}
										} else {
											college.push({
												collegeId: coll.collegeId
											})
											masters.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												college_name: collegename.name,
												form: true
											})
										}
									})
								})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: "Bachelors",
									}
								}).then(function (bachelorDetails) {
									// let clg_duration =3;
									var differentStream = [];
									if (bachelorDetails.length > 0) {
										if (bachelorDetails[0].college_stream_type == true) {
											let college_List = [];
											bachelorDetails.forEach(bachelor => {
												models.College.find({
													where: {
														id: bachelor.collegeId
													}
												}).then(collegename => {
													if (bachelor.patteren == "Annual") {
														//academic_year = bachelor.name;
														college_List.push({
															clg_name: collegename.name,
															academic_year: bachelor.name
														})
													} else if (bachelor.patteren == "Semester") {
														switch (bachelor.name) {
															case 'Semester 2':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'First Year'
																})
																break;
															case 'Semester 4':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Second Year'
																})
																break;
															case 'Semester 6':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Third Year'
																})
																break;
															case 'Semester 8':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fourth Year'
																})

																break;
															case 'Semester 10':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fifth Year'
																})
																break;
														}
													}
													models.InstructionalDetails.findAll({
														where: {
															userId: req.User.id,
															education: 'Bachelors_' + bachelor.faculty
														}
													}).then(function (instructionalDetails) {
														if (differentStream.length > 0) {
															var flag = false;
															differentStream.forEach(single => {
																if (single.faculty == bachelor.faculty) {
																	flag = true;
																}
															})
															if (flag == false) {

																differentStream.push({
																	faculty: bachelor.faculty,
																	instructionalDetails: instructionalDetails,
																	type: bachelor.type,
																})
															}
														} else {
															differentStream.push({
																faculty: bachelor.faculty,
																instructionalDetails: instructionalDetails,
																type: bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() => {
												var differentCollege = []
												differentStream.forEach(bach => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bach.faculty
														}
													}).then(function (facultyMaster) {
														models.userMarkList.findAll({
															where: {
																user_id: req.User.id,
																type: "Bachelors",
																faculty: bach.faculty,
															}
														}).then(function (userMarklist) {
															if (userMarklist.length > 0) {
																if (userMarklist[0].patteren == "Annual") {
																	userMarklist.forEach(marklist => {
																		differentCollege.push({
																			faculty: marklist.faculty,
																			collegeId: marklist.collegeId,
																			instructionalDetails: bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year
																		})
																	})
																} else if (userMarklist[0].patteren == "Semester") {
																	var semesters = facultyMaster.year * 2;
																	for (var i = 2; i <= semesters; i = i + 2) {
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist => {
																			if (marklist.name == sem) {
																				differentCollege.push({
																					faculty: marklist.faculty,
																					collegeId: marklist.collegeId,
																					instructionalDetails: bach.instructionalDetails,
																					type: marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(() => {
													var bachelors = [];
													differentCollege.forEach(coll => {
														var college = [];
														var bachFlag = false;
														if (bachelors.length > 0) {
															bachelors.forEach(bach => {
																if (bach.faculty == coll.faculty) {
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg => {
																		if (clg.collegeId == coll.collegeId) {
																			count++;
																		}
																	})
																	if (count <= bach.colleges.length) {
																		bach.colleges.push({
																			collegeId: coll.collegeId
																		})
																	}

																	if (bach.instructionalDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if (bachFlag == false) {
																college.push({
																	collegeId: coll.collegeId
																})

																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	instructionalDetails: coll.instructionalDetails,
																	college_List: college_List,
																	type: coll.type + ' of ' + coll.faculty,
																	clg_duration: coll.clg_duration,
																})
															}
														} else {
															college.push({
																collegeId: coll.collegeId
															})
															bachelors.push({
																faculty: coll.faculty,
																colleges: college,
																instructionalDetails: coll.instructionalDetails,
																college_List: college_List,
																type: coll.type + ' of ' + coll.faculty,
																clg_duration: coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 3000)
											}, 4000)

										} else if (bachelorDetails[0].college_stream_type == false) {
											models.College.find({
												where: {
													id: bachelorDetails[0].collegeId
												}
											}).then(collegename => {
												models.facultymaster.find({
													where: {
														degree: 'Bachelors',
														faculty: bachelorDetails[0].faculty
													}
												}).then(function (facultyMaster) {
													models.InstructionalDetails.findAll({
														where: {
															userId: req.User.id,
															education: 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function (instructionalDetails) {
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty: bachelorDetails[0].faculty,
															colleges: college,
															instructionalDetails: instructionalDetails,
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration: facultyMaster.year,
														})
														res.json({
															status: 200,
															data: educationDetails
														})
													})
												})
											})
										}
									}
								})
							}, 3000)
						}, 4000)

					} else if (masterDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: masterDetails[0].collegeId
							}
						}).then(master_collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: masterDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + masterDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									college.push({
										collegeId: masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: masterDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
										college_name: master_collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
										}
									}).then(function (bachelorDetails) {
										var differentStream = [];
										let clg_duration;
										if (bachelorDetails.length > 0) {
											if (bachelorDetails[0].college_stream_type == true) {
												let college_List = [];
												bachelorDetails.forEach(bachelor => {
													models.College.find({
														where: {
															id: bachelor.collegeId
														}
													}).then(collegename => {
														if (bachelor.patteren == "Annual") {
															//academic_year = bachelor.name;
															college_List.push({
																clg_name: collegename.name,
																academic_year: bachelor.name
															})
														} else if (bachelor.patteren == "Semester") {
															switch (bachelor.name) {
																case 'Semester 2':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'First Year'
																	})
																	break;
																case 'Semester 4':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Second Year'
																	})
																	break;
																case 'Semester 6':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Third Year'
																	})
																	break;
																case 'Semester 8':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fourth Year'
																	})

																	break;
																case 'Semester 10':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fifth Year'
																	})
																	break;
															}
														}
														models.InstructionalDetails.findAll({
															where: {
																userId: req.User.id,
																education: 'Bachelors_' + bachelor.faculty
															}
														}).then(function (instructionalDetails) {
															if (differentStream.length > 0) {
																var flag = false;
																differentStream.forEach(single => {
																	if (single.faculty == bachelor.faculty) {
																		flag = true;
																	}
																})
																if (flag == false) {

																	differentStream.push({
																		faculty: bachelor.faculty,
																		instructionalDetails: instructionalDetails,
																		type: bachelor.type,
																	})
																}
															} else {
																differentStream.push({
																	faculty: bachelor.faculty,
																	instructionalDetails: instructionalDetails,
																	type: bachelor.type,
																})
															}
														})
													})
												})
												setTimeout(() => {
													var differentCollege = []
													differentStream.forEach(bach => {
														models.facultymaster.find({
															where: {
																degree: 'Bachelors',
																faculty: bach.faculty
															}
														}).then(function (facultyMaster) {
															models.userMarkList.findAll({
																where: {
																	user_id: req.User.id,
																	type: "Bachelors",
																	faculty: bach.faculty,
																}
															}).then(function (userMarklist) {
																if (userMarklist.length > 0) {
																	if (userMarklist[0].patteren == "Annual") {
																		userMarklist.forEach(marklist => {
																			differentCollege.push({
																				faculty: marklist.faculty,
																				collegeId: marklist.collegeId,
																				instructionalDetails: bach.instructionalDetails,
																				// college_List : college_List,
																				type: user_Marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		})
																	} else if (userMarklist[0].patteren == "Semester") {
																		var semesters = facultyMaster.year * 2;
																		for (var i = 2; i <= semesters; i = i + 2) {
																			var sem = "Semester " + i
																			userMarklist.forEach(marklist => {
																				if (marklist.name == sem) {
																					differentCollege.push({
																						faculty: marklist.faculty,
																						collegeId: marklist.collegeId,
																						instructionalDetails: bach.instructionalDetails,
																						// college_List : college_List,
																						type: user_Marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			})
																		}
																	}
																}
															})
														})
													})
													setTimeout(() => {
														var bachelors = [];
														differentCollege.forEach(coll => {
															var college = [];
															var bachFlag = false;
															if (bachelors.length > 0) {
																bachelors.forEach(bach => {
																	if (bach.faculty == coll.faculty) {
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg => {
																			if (clg.collegeId == coll.collegeId) {
																				count++;
																			}
																		})
																		if (count <= bach.colleges.length) {
																			bach.colleges.push({
																				collegeId: coll.collegeId
																			})
																		}

																		if (bach.instructionalDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if (bachFlag == false) {
																	college.push({
																		collegeId: coll.collegeId
																	})

																	bachelors.push({
																		faculty: coll.faculty,
																		colleges: college,
																		instructionalDetails: coll.instructionalDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															} else {
																college.push({
																	collegeId: coll.collegeId
																})
																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	instructionalDetails: coll.instructionalDetails,
																	type: coll.type + ' of ' + coll.faculty,
																	college_List: college_List,
																	clg_duration: coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;

													}, 3000)
												}, 4000)

											} else if (bachelorDetails[0].college_stream_type == false) {
												models.College.find({
													where: {
														id: bachelorDetails[0].collegeId
													}
												}).then(collegename => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														models.InstructionalDetails.findAll({
															where: {
																userId: req.User.id,
																education: 'Bachelors_' + bachelorDetails[0].faculty
															}
														}).then(function (instructionalDetails) {
															var college = [];
															college.push({
																collegeId: bachelorDetails[0].collegeId
															})
															educationDetails.bachelors.push({
																faculty: bachelorDetails[0].faculty,
																colleges: college,
																instructionalDetails: instructionalDetails,
																type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																college_name: collegename.name,
																clg_duration: facultyMaster.year,
																form: true
															})
														})
													})
												})
											}
										}
									})
									setTimeout(() => {
										res.json({
											status: 200,
											data: educationDetails
										})
									}, 2000);
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Bachelors",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Bachelors_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Bachelors',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var bachelors = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (bachelors.length > 0) {
										bachelors.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											bachelors.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										bachelors.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log('in false');
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Bachelors',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Masters') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (masters.length > 0) {
										masters.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											masters.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										masters.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log('in false');
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Phd,Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Phd",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Phd_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Phd',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Phd",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var phd = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (phd.length > 0) {
										phd.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											phd.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										phd.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log('in false');
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Phd',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Phd_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		}
	} else {
		if (req.query.degreeValue == 'Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
					// app_id : null
				}
			}).then(function (masterDetails) {
				let masters_duration;
				var differentStream = [];
				if (masterDetails.length > 0) {
					if (masterDetails[0].college_stream_type == true) {
						let college_List = []
						let academic_year_master = []
						masterDetails.forEach(master => {
							models.College.find({
								where: {
									id: master.collegeId
								}
							}).then(collegename => {

								if (master.patteren == "Annual") {
									college_List.push({
										clg_name: collegename.name,
										academic_year: master.name
									})
								} else if (master.patteren == "Semester") {
									switch (master.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + master.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == master.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: master.faculty,
												instructionalDetails: instructionalDetails,
												type: master.type
											})
										}
									} else {
										differentStream.push({
											faculty: master.faculty,
											instructionalDetails: instructionalDetails,
											type: master.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							/** Updating college list **/
							// jsonObject = college_List.map(JSON.stringify);
							// console.log("Data===>"+jsonObject);
							// uniqueSet = new Set(jsonObject);
							// Updated_list = Array.from(uniqueSet).map(JSON.parse);
							/** Updating college list **/
							var differentCollege = []
							differentStream.forEach(mast => {
								console.log("mast==>" + JSON.stringify(mast))
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: mast.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: mast.faculty,
											app_id: null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													// academic_year_master.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: mast.instructionalDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year,
														college_name: marklist.name
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															// if(marklist.name == 'Semester 2'){
															// 	academic_year_master.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	academic_year_master.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: mast.instructionalDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year,
																// college_name: collegename.name,
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];
								differentCollege.forEach(coll => {
									console.log("coll==." + JSON.stringify(coll))
									models.College.find({
										where: {
											id: coll.collegeId
										}
									}).then(collegename => {

										var mastFlag = false
										var college = [];
										if (masters.length > 0) {
											masters.forEach(mast => {
												if (mast.faculty == coll.faculty) {
													mastFlag = true;
													var count = 0;
													mast.colleges.forEach(clg => {
														if (clg.collegeId == coll.collegeId) {
															count++;
														}
													})
													if (count <= mast.colleges.length) {
														mast.colleges.push({
															collegeId: coll.collegeId
														})
													}

													if (mast.instructionalDetails.length >= 0) {
														mast.form = true;
													}
												}
											})

											if (mastFlag == false) {
												college.push({
													collegeId: coll.collegeId
												})

												masters.push({
													faculty: coll.faculty,
													colleges: college,
													instructionalDetails: coll.instructionalDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration,
													college_name: collegename.name,
													form: true
													// academic_year : academic_year_master
												})
											}
										} else {
											college.push({
												collegeId: coll.collegeId
											})
											masters.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												college_name: collegename.name,
												form: true
												// academic_year : academic_year_master
											})
										}
									})
								})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: "Bachelors",
										app_id: null
									}
								}).then(function (bachelorDetails) {
									let clg_duration;
									var differentStream = [];
									// let academic_year_list =[];	
									if (bachelorDetails.length > 0) {
										if (bachelorDetails[0].college_stream_type == true) {
											let college_List = [];
											bachelorDetails.forEach(bachelor => {
												models.College.find({
													where: {
														id: bachelor.collegeId
													}
												}).then(collegename => {
													if (bachelor.patteren == "Annual") {
														//academic_year = bachelor.name;
														college_List.push({
															clg_name: collegename.name,
															academic_year: bachelor.name
														})
													} else if (bachelor.patteren == "Semester") {
														switch (bachelor.name) {
															case 'Semester 2':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'First Year'
																})
																break;
															case 'Semester 4':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Second Year'
																})
																break;
															case 'Semester 6':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Third Year'
																})
																break;
															case 'Semester 8':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fourth Year'
																})

																break;
															case 'Semester 10':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fifth Year'
																})
																break;
														}
													}
													models.InstructionalDetails.findAll({
														where: {
															userId: req.User.id,
															education: 'Bachelors_' + bachelor.faculty
														}
													}).then(function (instructionalDetails) {
														if (differentStream.length > 0) {
															var flag = false;
															differentStream.forEach(single => {
																if (single.faculty == bachelor.faculty) {
																	flag = true;
																}
															})
															if (flag == false) {

																differentStream.push({
																	faculty: bachelor.faculty,
																	instructionalDetails: instructionalDetails,
																	type: bachelor.type,
																})
															}
														} else {
															differentStream.push({
																faculty: bachelor.faculty,
																instructionalDetails: instructionalDetails,
																type: bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() => {
												/** Updating college list **/
												// jsonObject = college_List.map(JSON.stringify);
												// console.log("Data===>"+jsonObject);
												// uniqueSet = new Set(jsonObject);
												// Updated_list = Array.from(uniqueSet).map(JSON.parse);
												/** Updating college list **/
												var differentCollege = []
												differentStream.forEach(bach => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bach.faculty
														}
													}).then(function (facultyMaster) {
														models.userMarkList.findAll({
															where: {
																user_id: req.User.id,
																type: "Bachelors",
																faculty: bach.faculty,
																app_id: null
															}
														}).then(function (userMarklist) {
															if (userMarklist.length > 0) {
																if (userMarklist[0].patteren == "Annual") {
																	userMarklist.forEach(marklist => {
																		// academic_year_list.push({
																		// 	academic_year : marklist.name
																		// })
																		differentCollege.push({
																			faculty: marklist.faculty,
																			collegeId: marklist.collegeId,
																			instructionalDetails: bach.instructionalDetails,
																			type: marklist.type,
																			// college_List : college_List.push,
																			clg_duration: facultyMaster.year
																		})
																	})
																} else if (userMarklist[0].patteren == "Semester") {
																	var semesters = facultyMaster.year * 2;
																	for (var i = 2; i <= semesters; i = i + 2) {
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist => {
																			if (marklist.name == sem) {
																				// if(marklist.name == 'Semester 2'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'First Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 4'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Second Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 6'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Third Year'
																				// 	})
																				// }
																				// if(marklist.name == 'Semester 8'){
																				// 	academic_year_list.push({
																				// 		academic_year : 'Fourth Year'
																				// 	})
																				// }
																				differentCollege.push({
																					faculty: marklist.faculty,
																					collegeId: marklist.collegeId,
																					instructionalDetails: bach.instructionalDetails,
																					type: marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year,
																					form: true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(() => {
													var bachelors = [];
													differentCollege.forEach(coll => {
														var college = [];
														var bachFlag = false;
														if (bachelors.length > 0) {
															bachelors.forEach(bach => {
																if (bach.faculty == coll.faculty) {
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg => {
																		if (clg.collegeId == coll.collegeId) {
																			count++;
																		}
																	})
																	if (count <= bach.colleges.length) {
																		bach.colleges.push({
																			collegeId: coll.collegeId
																		})
																	}

																	if (bach.instructionalDetails.length >= 0) {
																		bach.form = true;
																	}
																}
															})

															if (bachFlag == false) {
																college.push({
																	collegeId: coll.collegeId
																})

																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	instructionalDetails: coll.instructionalDetails,
																	college_List: college_List,
																	type: coll.type + ' of ' + coll.faculty,
																	clg_duration: coll.clg_duration,
																	form: true
																	// academic_year : academic_year_list
																})
															}
														} else {
															college.push({
																collegeId: coll.collegeId
															})
															bachelors.push({
																faculty: coll.faculty,
																colleges: college,
																instructionalDetails: coll.instructionalDetails,
																college_List: college_List,
																type: coll.type + ' of ' + coll.faculty,
																clg_duration: coll.clg_duration,
																// academic_year : academic_year_list
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 3000)
											}, 4000)

										} else if (bachelorDetails[0].college_stream_type == false) {
											models.College.find({
												where: {
													id: bachelorDetails[0].collegeId
												}
											}).then(collegename => {
												models.facultymaster.find({
													where: {
														degree: 'Bachelors',
														faculty: bachelorDetails[0].faculty
													}
												}).then(function (facultyMaster) {
													models.InstructionalDetails.findAll({
														where: {
															userId: req.User.id,
															education: 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function (instructionalDetails) {
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty: bachelorDetails[0].faculty,
															colleges: college,
															instructionalDetails: instructionalDetails,
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration: facultyMaster.year,
															form: true
														})
														res.json({
															status: 200,
															data: educationDetails
														})
													})
												})
											})
										}
									}
								})
							}, 3000)
						}, 4000)

					} else if (masterDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: masterDetails[0].collegeId
							}
						}).then(master_collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: masterDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + masterDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									college.push({
										collegeId: masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: masterDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
										college_name: master_collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											app_id: null
										}
									}).then(function (bachelorDetails) {
										// let clg_duration ;
										var differentStream = [];
										if (bachelorDetails.length > 0) {
											if (bachelorDetails[0].college_stream_type == true) {
												let college_List = [];
												bachelorDetails.forEach(bachelor => {
													models.College.find({
														where: {
															id: bachelor.collegeId
														}
													}).then(collegename => {
														if (bachelor.patteren == "Annual") {
															//academic_year = bachelor.name;
															college_List.push({
																clg_name: collegename.name,
																academic_year: bachelor.name
															})
														} else if (bachelor.patteren == "Semester") {
															switch (bachelor.name) {
																case 'Semester 2':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'First Year'
																	})
																	break;
																case 'Semester 4':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Second Year'
																	})
																	break;
																case 'Semester 6':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Third Year'
																	})
																	break;
																case 'Semester 8':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fourth Year'
																	})

																	break;
																case 'Semester 10':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fifth Year'
																	})
																	break;
															}
														}
														models.InstructionalDetails.findAll({
															where: {
																userId: req.User.id,
																education: 'Bachelors_' + bachelor.faculty
															}
														}).then(function (instructionalDetails) {
															if (differentStream.length > 0) {
																var flag = false;
																differentStream.forEach(single => {
																	if (single.faculty == bachelor.faculty) {
																		flag = true;
																	}
																})
																if (flag == false) {

																	differentStream.push({
																		faculty: bachelor.faculty,
																		instructionalDetails: instructionalDetails,
																		type: bachelor.type,
																	})
																}
															} else {
																differentStream.push({
																	faculty: bachelor.faculty,
																	instructionalDetails: instructionalDetails,
																	type: bachelor.type,
																})
															}
														})
													})
												})
												setTimeout(() => {
													var differentCollege = []
													differentStream.forEach(bach => {
														models.facultymaster.find({
															where: {
																degree: 'Bachelors',
																faculty: bach.faculty
															}
														}).then(function (facultyMaster) {
															models.userMarkList.findAll({
																where: {
																	user_id: req.User.id,
																	type: "Bachelors",
																	faculty: bach.faculty,
																}
															}).then(function (userMarklist) {
																if (userMarklist.length > 0) {
																	userMarklist.forEach(user_Marklist => {
																		if (user_Marklist.patteren == "Annual") {
																			differentCollege.push({
																				faculty: user_Marklist.faculty,
																				collegeId: user_Marklist.collegeId,
																				instructionalDetails: bach.instructionalDetails,
																				// college_List : college_List,
																				type: user_Marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		} else if (user_Marklist.patteren == "Semester") {
																			var semesters = facultyMaster.year * 2;
																			for (var i = 2; i <= semesters; i = i + 2) {
																				var sem = "Semester " + i
																				if (user_Marklist.name == sem) {
																					differentCollege.push({
																						faculty: user_Marklist.faculty,
																						collegeId: user_Marklist.collegeId,
																						instructionalDetails: bach.instructionalDetails,
																						// college_List : college_List,
																						type: user_Marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			}
																		}
																	})
																}
															})
														})
													})
													setTimeout(() => {
														var bachelors = [];
														differentCollege.forEach(coll => {
															var college = [];
															var bachFlag = false;
															if (bachelors.length > 0) {
																bachelors.forEach(bach => {
																	if (bach.faculty == coll.faculty) {
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg => {
																			if (clg.collegeId == coll.collegeId) {
																				count++;
																			}
																		})
																		if (count <= bach.colleges.length) {
																			bach.colleges.push({
																				collegeId: coll.collegeId
																			})
																		}

																		if (bach.instructionalDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if (bachFlag == false) {
																	college.push({
																		collegeId: coll.collegeId
																	})

																	bachelors.push({
																		faculty: coll.faculty,
																		colleges: college,
																		instructionalDetails: coll.instructionalDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															} else {
																college.push({
																	collegeId: coll.collegeId
																})
																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	instructionalDetails: coll.instructionalDetails,
																	type: coll.type + ' of ' + coll.faculty,
																	college_List: college_List,
																	clg_duration: coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;
														res.json({
															status: 200,
															data: educationDetails
														})
													}, 5000)
												}, 6000)

											} else if (bachelorDetails[0].college_stream_type == false) {
												models.College.find({
													where: {
														id: bachelorDetails[0].collegeId
													}
												}).then(collegename => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														models.InstructionalDetails.findAll({
															where: {
																userId: req.User.id,
																education: 'Bachelors_' + bachelorDetails[0].faculty
															}
														}).then(function (instructionalDetails) {
															var college = [];
															college.push({
																collegeId: bachelorDetails[0].collegeId
															})
															educationDetails.bachelors.push({
																faculty: bachelorDetails[0].faculty,
																colleges: college,
																instructionalDetails: instructionalDetails,
																type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																college_name: collegename.name,
																clg_duration: facultyMaster.year,
																form: true
															})
															res.json({
																status: 200,
																data: educationDetails
															})
														})
													})
												})
											}

										} else {
											console.log('else');
											setTimeout(() => {
												res.json({
													status: 200,
													data: educationDetails
												})
											}, 10000)

										}
										// setTimeout(()=>{
										// 	res.json({
										// 		status : 200,
										// 		data : educationDetails
										// 	})
										// },10000)
									})
								})
							})
						})
					}
				}


			})
		} else if (req.query.degreeValue == 'Bachelors') {
			let college_List = [];
			let academic_year_list = [];
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Bachelors",
					// app_id : null
				}
			}).then(function (bachelorDetails) {
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						console.log('true');
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Bachelors_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {
											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								console.log("bach==>" + JSON.stringify(bach))
								models.facultymaster.find({
									where: {
										degree: 'Bachelors',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											faculty: bach.faculty,
											// app_id : null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												console.log('semesterrrrr');
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if (marklist.name == sem) {
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								console.log('settimeout');
								/** Updating college list **/
								// jsonObject = college_List.map(JSON.stringify);
								// console.log("Data===>"+jsonObject);
								// uniqueSet = new Set(jsonObject);
								// Updated_list = Array.from(uniqueSet).map(JSON.parse);
								/** Updating college list **/
								console.log("college_List===>" + JSON.stringify(college_List))
								var bachelors = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (bachelors.length > 0) {
										bachelors.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											bachelors.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										bachelors.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Bachelors',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Masters') {
			let college_List = [];
			let academic_year_list = [];
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
					// app_id : null
				}
			}).then(function (bachelorDetails) {
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						console.log('true');
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {
											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								console.log("bach==>" + JSON.stringify(bach))
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: bach.faculty,
											// app_id : null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												console.log('semesterrrrr');
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if (marklist.name == sem) {
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								console.log('settimeout');
								/** Updating college list **/
								// jsonObject = college_List.map(JSON.stringify);
								// console.log("Data===>"+jsonObject);
								// uniqueSet = new Set(jsonObject);
								// Updated_list = Array.from(uniqueSet).map(JSON.parse);
								/** Updating college list **/
								console.log("college_List===>" + JSON.stringify(college_List))
								var masters = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (masters.length > 0) {
										masters.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											masters.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										masters.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Phd,Masters,Bachelors') {
			let college_List = [];
			let academic_year_list = [];
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Phd",
					// app_id : null
				}
			}).then(function (bachelorDetails) {
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						console.log('true');
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}

								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Phd_' + bachelor.faculty
									}
								}).then(function (instructionalDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {
											differentStream.push({
												faculty: bachelor.faculty,
												instructionalDetails: instructionalDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											instructionalDetails: instructionalDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								console.log("bach==>" + JSON.stringify(bach))
								models.facultymaster.find({
									where: {
										degree: 'Phd',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									console.log("facultyMaster===>" + JSON.stringify(facultyMaster))
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Phd",
											faculty: bach.faculty,
											// app_id : null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											// console.log("userMarklist===>"+JSON.stringify(userMarklist))
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													// college_List.push({
													// 	academic_year : marklist.name
													// })
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														instructionalDetails: bach.instructionalDetails,
														type: marklist.type,
														// academic_year : marklist.name,
														// college_List : Updated_list,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												console.log('semesterrrrr');
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {

														// console.log("userMarklist===>"+JSON.stringify(marklist))
														if (marklist.name == sem) {
															// if(marklist.name == 'Semester 2'){
															// 	college_List.push({
															// 		academic_year : 'First Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 4'){
															// 	college_List.push({
															// 		academic_year : 'Second Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 6'){
															// 	college_List.push({
															// 		academic_year : 'Third Year'
															// 	})
															// }
															// if(marklist.name == 'Semester 8'){
															// 	college_List.push({
															// 		academic_year : 'Fourth Year'
															// 	})
															// }
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																instructionalDetails: bach.instructionalDetails,
																type: marklist.type,
																// college_List : Updated_list,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								console.log('settimeout');
								/** Updating college list **/
								// jsonObject = college_List.map(JSON.stringify);
								// console.log("Data===>"+jsonObject);
								// uniqueSet = new Set(jsonObject);
								// Updated_list = Array.from(uniqueSet).map(JSON.parse);
								/** Updating college list **/
								console.log("college_List===>" + JSON.stringify(college_List))
								var phd = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (phd.length > 0) {
										phd.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.instructionalDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											phd.push({
												faculty: coll.faculty,
												colleges: college,
												instructionalDetails: coll.instructionalDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												// academic_year : academic_year_list
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										phd.push({
											faculty: coll.faculty,
											colleges: college,
											instructionalDetails: coll.instructionalDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
											// academic_year : academic_year_list
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						console.log("bachelorDetails[0].===>" + JSON.stringify(bachelorDetails[0]))
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Phd',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								console.log("facultyMaster==>" + JSON.stringify(facultyMaster))
								models.InstructionalDetails.findAll({
									where: {
										userId: req.User.id,
										education: 'Phd_' + bachelorDetails[0].faculty
									}
								}).then(function (instructionalDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										instructionalDetails: instructionalDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		}
	}
})

// router.get('/getAffiliationLetterDetails',middlewares.getUserInfo,(req,res)=>{
// 	console.log('/getAffiliationLetterDetails');
// 	var educationDetails = {
// 		bachelors : [],
// 		masters : []
// 	};
// 	if(req.query.editFlag == 'true'){
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 				}
// 			}).then(function(master_Details){
// 				let masters_duration;
// 				var masterDetails = [];
// 				if(master_Details.length > 0){
// 					master_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									masterDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				var differentStream = [];
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						masterDetails.forEach(master=>{
// 							models.College.find({
// 								where :{
// 									id : master.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(master.patteren == "Annual"){
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : master.name
// 									})
// 								}else if(master.patteren == "Semester"){
// 									switch(master.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 								models.Affiliation_Letter.findAll({
// 									where:{
// 										user_id : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(affiliationDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												affiliationDetails : affiliationDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											affiliationDetails : affiliationDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(mast=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Master',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														affiliationDetails : mast.affiliationDetails,
// 														type : marklist.type,
// 														college_List : college_List,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																affiliationDetails : mast.affiliationDetails,
// 																type : marklist.type,
// 																college_List : college_List,
// 																clg_duration: facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];
// 								var mastFlag=false
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.affiliationDetails.length > 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												affiliationDetails : coll.affiliationDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											affiliationDetails : coll.affiliationDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration
// 										})
// 									}
// 								})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 									}
// 								}).then(function(bachelorDetails){
// 									var differentStream = [];
// 									// let clg_duration = 3;
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' : 
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 													models.Affiliation_Letter.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															education : 'Bachelors_' + bachelor.faculty
// 														}
// 													}).then(function(affiliationDetails){
// 														if(differentStream.length > 0){
// 															var flag = false;
// 															differentStream.forEach(single=>{
// 																if(single.faculty == bachelor.faculty){
// 																	flag = true;
// 																}
// 															})
// 															if(flag == false){

// 																differentStream.push({
// 																	faculty : bachelor.faculty,
// 																	affiliationDetails : affiliationDetails,
// 																	type : bachelor.type,
// 																})
// 															}
// 														}else{
// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																affiliationDetails : affiliationDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.facultymaster.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			affiliationDetails : bach.affiliationDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					affiliationDetails : bach.affiliationDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.affiliationDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	affiliationDetails : coll.affiliationDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																affiliationDetails : coll.affiliationDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.Affiliation_Letter.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(affiliationDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													affiliationDetails : affiliationDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 										})
// 										}
// 									}
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.Affiliation_Letter.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(affiliationDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								affiliationDetails : affiliationDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								let clg_duration ;
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' : 
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 												models.Affiliation_Letter.findAll({
// 													where:{
// 														user_id : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(affiliationDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																affiliationDetails : affiliationDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															affiliationDetails : affiliationDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		affiliationDetails : bach.affiliationDetails,
// 																		// college_List : college_List,
// 																		type : marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				affiliationDetails : bach.affiliationDetails,
// 																				// college_List : college_List,
// 																				type : marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.affiliationDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																affiliationDetails : coll.affiliationDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															affiliationDetails : coll.affiliationDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;

// 											},3000)
// 										},4000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.facultymaster.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.Affiliation_Letter.findAll({
// 											where:{
// 												user_id : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(affiliationDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												affiliationDetails : affiliationDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 										})
// 									})
// 								})
// 									}
// 								}
// 							})
// 							setTimeout(()=>{
// 								consoel.log("educationDetails == " + JSON.stringify(educationDetails));
// 								res.json({ 
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},2000);
// 						})
// 					})
// 					})
// 					}
// 				}
// 				})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 				}
// 			}).then(function(bachelor_Details){
// 				let clg_duration ;
// 				var differentStream = [];
// 				var bachelorDetails = [];
// 				if(bachelor_Details.length > 0){
// 					bachelor_Details.forEach(detail=>{
// 						if(detail.app_id != null){
// 							var app_idArr = detail.app_id.split(",");
// 							app_idArr.forEach(app_id =>{
// 								if(app_id == req.query.app_id){
// 									bachelorDetails.push(detail);
// 								}
// 							})
// 						}
// 					})
// 				}
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						let college_List = [];
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 							models.Affiliation_Letter.findAll({
// 								where:{
// 									user_id : req.User.id,
// 									education : 'Bachelors_' + bachelor.faculty
// 								}
// 							}).then(function(affiliationDetails){
// 								if(differentStream.length > 0){
// 									var flag = false;
// 									differentStream.forEach(single=>{
// 										if(single.faculty == bachelor.faculty){
// 											flag = true;
// 										}
// 									})
// 									if(flag == false){

// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											affiliationDetails : affiliationDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								}else{
// 									differentStream.push({
// 										faculty : bachelor.faculty,
// 										affiliationDetails : affiliationDetails,
// 										type : bachelor.type
// 									})
// 								}
// 							})
// 						})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														affiliationDetails : bach.affiliationDetails,
// 														type : marklist.type,
// 														clg_duration : facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																affiliationDetails : bach.affiliationDetails,
// 																type : marklist.type,
// 																clg_duration : facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.affiliationDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												affiliationDetails : coll.affiliationDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											affiliationDetails : coll.affiliationDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : bachelorDetails[0].collegeId
// 							}
// 						}).then(collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Bachelors',
// 									faculty : bachelorDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.Affiliation_Letter.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								education : 'Bachelors_' + bachelorDetails[0].faculty
// 							}
// 						}).then(function(affiliationDetails){
// 							var college = [];
// 							var form;
// 							// if(instructionalDetails.length > 0){
// 							// 	form = true;
// 							// }else{
// 							// 	form = false;	
// 							// }
// 							college.push({
// 								collegeId : bachelorDetails[0].collegeId
// 							})
// 							educationDetails.bachelors.push({
// 								faculty : bachelorDetails[0].faculty,
// 								colleges : college,
// 								affiliationDetails : affiliationDetails,
// 								type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 								college_name: collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							res.json({
// 								status : 200,
// 								data : educationDetails
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}
// 			})
// 		}
// 	}else{
// 		if(req.query.degreeValue == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Masters",
// 					app_id : null
// 				}
// 			}).then(function(masterDetails){
// 				let masters_duration;
// 				var differentStream = [];
// 				if(masterDetails.length >0){
// 					if(masterDetails[0].college_stream_type == true){
// 						let college_List=[]
// 						masterDetails.forEach(master=>{
// 							models.College.find({
// 								where :{
// 									id : master.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(master.patteren == "Annual"){
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : master.name
// 									})
// 								}else if(master.patteren == "Semester"){
// 									switch(master.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 								models.Affiliation_Letter.findAll({
// 									where:{
// 										user_id : req.User.id,
// 										education : 'Masters_' + master.faculty
// 									}
// 								}).then(function(affiliationDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == master.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : master.faculty,
// 												affiliationDetails : affiliationDetails,
// 												type : master.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : master.faculty,
// 											affiliationDetails : affiliationDetails,
// 											type : master.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []

// 							differentStream.forEach(mast=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Masters',
// 										faculty : mast.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Masters",
// 											faculty : mast.faculty,
// 											app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														affiliationDetails : mast.affiliationDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																affiliationDetails : mast.affiliationDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								var masters = [];

// 								differentCollege.forEach(coll=>{
// 									models.College.find({
// 										where :{
// 											id : coll.collegeId
// 										}
// 									}).then(collegename=>{
// 									var college = [];
// 									var mastFlag =false
// 									if(masters.length > 0){
// 										masters.forEach(mast=>{
// 											if(mast.faculty == coll.faculty){
// 												mastFlag = true;
// 												var count = 0;
// 												mast.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= mast.colleges.length){
// 													mast.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(mast.affiliationDetails.length >= 0) {
// 													mast.form = true;
// 												}
// 											}
// 										})

// 										if(mastFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											masters.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												affiliationDetails : coll.affiliationDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												college_List : college_List,
// 												clg_duration : coll.clg_duration,
// 												college_name: collegename.name,
// 												form : true
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										masters.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											affiliationDetails : coll.affiliationDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											college_List : college_List,
// 											clg_duration : coll.clg_duration,
// 											college_name: collegename.name,
// 											form : true
// 										})
// 									}
// 								})
// 							})
// 								educationDetails.masters = masters;
// 								models.userMarkList.findAll({
// 									where :{
// 										user_id : req.User.id,
// 										type : "Bachelors",
// 										app_id : null
// 									}
// 								}).then(function(bachelorDetails){
// 									var differentStream = [];
// 									// let clg_duration;
// 									if(bachelorDetails.length >0){
// 										if(bachelorDetails[0].college_stream_type == true){
// 											let college_List =[];
// 											bachelorDetails.forEach(bachelor=>{
// 												models.College.find({
// 													where :{
// 														id : bachelor.collegeId
// 													}
// 												}).then(collegename=>{
// 													if(bachelor.patteren == "Annual"){
// 														//academic_year = bachelor.name;
// 														college_List.push({
// 															clg_name : collegename.name,
// 															academic_year : bachelor.name
// 														})
// 													}else if(bachelor.patteren == "Semester"){
// 														switch(bachelor.name){
// 															case 'Semester 2' : 
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'First Year'
// 																})
// 																break;
// 															case 'Semester 4' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Second Year'
// 																})
// 																break;
// 															case 'Semester 6' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Third Year'
// 																})
// 																break;
// 															case 'Semester 8' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fourth Year'
// 																})

// 																break;
// 															case 'Semester 10' :
// 																college_List.push({
// 																	clg_name : collegename.name,
// 																	academic_year : 'Fifth Year'
// 																})
// 																break;
// 														}
// 													}
// 												models.Affiliation_Letter.findAll({
// 													where:{
// 														user_id : req.User.id,
// 														education : 'Bachelors_' + bachelor.faculty
// 													}
// 												}).then(function(affiliationDetails){
// 													if(differentStream.length > 0){
// 														var flag = false;
// 														differentStream.forEach(single=>{
// 															if(single.faculty == bachelor.faculty){
// 																flag = true;
// 															}
// 														})
// 														if(flag == false){

// 															differentStream.push({
// 																faculty : bachelor.faculty,
// 																affiliationDetails : affiliationDetails,
// 																type : bachelor.type,
// 															})
// 														}
// 													}else{
// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															affiliationDetails : affiliationDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												})
// 											})
// 											})
// 											setTimeout(() =>{
// 												var differentCollege = []
// 												differentStream.forEach(bach=>{
// 													models.facultymaster.find({
// 														where :{
// 															degree : 'Bachelors',
// 															faculty : bach.faculty
// 														}
// 													}).then(function(facultyMaster){
// 														models.userMarkList.findAll({
// 															where:{
// 																user_id : req.User.id,
// 																type : "Bachelors",
// 																faculty : bach.faculty,
// 																app_id : null
// 															}
// 														}).then(function(userMarklist){
// 															if(userMarklist.length > 0){
// 																if(userMarklist[0].patteren == "Annual"){
// 																	userMarklist.forEach(marklist=>{
// 																		differentCollege.push({
// 																			faculty : marklist.faculty,
// 																			collegeId : marklist.collegeId,
// 																			affiliationDetails : bach.affiliationDetails,
// 																			type : marklist.type,
// 																			// college_List : college_List,
// 																			clg_duration: facultyMaster.year
// 																		})
// 																	})
// 																}else if(userMarklist[0].patteren == "Semester"){
// 																	var semesters = facultyMaster.year * 2;
// 																	for(var i = 2; i <= semesters; i=i+2){
// 																		var sem = "Semester " + i
// 																		userMarklist.forEach(marklist=>{
// 																			if(marklist.name == sem){
// 																				differentCollege.push({
// 																					faculty : marklist.faculty,
// 																					collegeId : marklist.collegeId,
// 																					affiliationDetails : bach.affiliationDetails,
// 																					type : marklist.type,
// 																					// college_List : college_List,
// 																					clg_duration: facultyMaster.year,
// 																					form : true
// 																				})
// 																			}
// 																		})
// 																	}
// 																}
// 															}
// 														})
// 													})
// 												})
// 												setTimeout(()=>{
// 													var bachelors = [];
// 													differentCollege.forEach(coll=>{
// 														var college = [];
// 														var bachFlag = false;
// 														if(bachelors.length > 0){
// 															bachelors.forEach(bach=>{
// 																if(bach.faculty == coll.faculty){
// 																	bachFlag = true;
// 																	var count = 0;
// 																	bach.colleges.forEach(clg=>{
// 																		if(clg.collegeId == coll.collegeId){
// 																			count ++;
// 																		}
// 																	})
// 																	if(count <= bach.colleges.length){
// 																		bach.colleges.push({
// 																			collegeId : coll.collegeId
// 																		})
// 																	}

// 																	if(bach.affiliationDetails.length > 0) {
// 																		bach.form = true;
// 																	}
// 																}
// 															})

// 															if(bachFlag == false){
// 																college.push({
// 																	collegeId : coll.collegeId
// 																})

// 																bachelors.push({
// 																	faculty : coll.faculty,
// 																	colleges : college,
// 																	affiliationDetails : coll.affiliationDetails,
// 																	college_List : college_List,
// 																	type: coll.type +' of '+ coll.faculty,
// 																	clg_duration : coll.clg_duration,
// 																})
// 															}
// 														}else{
// 															college.push({
// 																collegeId : coll.collegeId
// 															})
// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges :college,
// 																affiliationDetails : coll.affiliationDetails,
// 																college_List : college_List,
// 																type: coll.type +' of '+ coll.faculty,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													})
// 													educationDetails.bachelors = bachelors;
// 													res.json({
// 														status : 200,
// 														data : educationDetails
// 													})
// 												},3000)
// 											},4000)

// 										}else if(bachelorDetails[0].college_stream_type == false){
// 											models.College.find({
// 												where :{
// 													id : bachelorDetails[0].collegeId
// 												}
// 											}).then(collegename=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bachelorDetails[0].faculty
// 													}
// 												}).then(function(facultyMaster){
// 											models.Affiliation_Letter.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													education : 'Bachelors_' + bachelorDetails[0].faculty
// 												}
// 											}).then(function(affiliationDetails){
// 												var college = [];
// 												college.push({
// 													collegeId : bachelorDetails[0].collegeId
// 												})
// 												educationDetails.bachelors.push({
// 													faculty : bachelorDetails[0].faculty,
// 													colleges : college,
// 													affiliationDetails : affiliationDetails,
// 													type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 													college_name: collegename.name,
// 													clg_duration : facultyMaster.year,
// 													form : true
// 												})
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											})
// 										})
// 									})
// 										}
// 									}

// 									// res.json({
// 									// 	status : 200,
// 									// 	data : educationDetails
// 									// })
// 								})
// 							},3000)
// 						},4000)

// 					}else if(masterDetails[0].college_stream_type == false){
// 						models.College.find({
// 							where :{
// 								id : masterDetails[0].collegeId
// 							}
// 						}).then(master_collegename=>{
// 							models.facultymaster.find({
// 								where :{
// 									degree : 'Masters',
// 									faculty : masterDetails[0].faculty
// 								}
// 							}).then(function(facultyMaster){
// 						models.Affiliation_Letter.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								education : 'Masters_' + masterDetails[0].faculty
// 							}
// 						}).then(function(affiliationDetails){
// 							var college = [];
// 							college.push({
// 								collegeId : masterDetails[0].collegeId
// 							})
// 							educationDetails.masters.push({
// 								faculty : masterDetails[0].faculty,
// 								colleges : college,
// 								affiliationDetails : affiliationDetails,
// 								type: masterDetails[0].type +' of '+ masterDetails[0].faculty,
// 								college_name: master_collegename.name,
// 								clg_duration : facultyMaster.year,
// 								form : true
// 							})
// 							models.userMarkList.findAll({
// 								where :{
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 									app_id : null
// 								}
// 							}).then(function(bachelorDetails){
// 								var differentStream = [];
// 								let clg_duration;
// 								if(bachelorDetails.length >0){
// 									if(bachelorDetails[0].college_stream_type == true){
// 										let college_List=[];
// 										bachelorDetails.forEach(bachelor=>{
// 											models.College.find({
// 												where :{
// 													id : bachelor.collegeId
// 												}
// 											}).then(collegename=>{
// 												if(bachelor.patteren == "Annual"){
// 													//academic_year = bachelor.name;
// 													college_List.push({
// 														clg_name : collegename.name,
// 														academic_year : bachelor.name
// 													})
// 												}else if(bachelor.patteren == "Semester"){
// 													switch(bachelor.name){
// 														case 'Semester 2' : 
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'First Year'
// 															})
// 															break;
// 														case 'Semester 4' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Second Year'
// 															})
// 															break;
// 														case 'Semester 6' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Third Year'
// 															})
// 															break;
// 														case 'Semester 8' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fourth Year'
// 															})

// 															break;
// 														case 'Semester 10' :
// 															college_List.push({
// 																clg_name : collegename.name,
// 																academic_year : 'Fifth Year'
// 															})
// 															break;
// 													}
// 												}
// 											models.Affiliation_Letter.findAll({
// 												where:{
// 													user_id : req.User.id,
// 													education : 'Bachelors_' + bachelor.faculty
// 												}
// 											}).then(function(affiliationDetails){
// 												if(differentStream.length > 0){
// 													var flag = false;
// 													differentStream.forEach(single=>{
// 														if(single.faculty == bachelor.faculty){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){

// 														differentStream.push({
// 															faculty : bachelor.faculty,
// 															affiliationDetails : affiliationDetails,
// 															type : bachelor.type,
// 														})
// 													}
// 												}else{
// 													differentStream.push({
// 														faculty : bachelor.faculty,
// 														affiliationDetails : affiliationDetails,
// 														type : bachelor.type,
// 													})
// 												}
// 											})
// 										})
// 										})
// 										setTimeout(() =>{
// 											var differentCollege = []
// 											differentStream.forEach(bach=>{
// 												models.facultymaster.find({
// 													where :{
// 														degree : 'Bachelors',
// 														faculty : bach.faculty
// 													}
// 												}).then(function(facultyMaster){
// 													models.userMarkList.findAll({
// 														where:{
// 															user_id : req.User.id,
// 															type : "Bachelors",
// 															faculty : bach.faculty,
// 															app_id : null
// 														}
// 													}).then(function(userMarklist){
// 														if(userMarklist.length > 0){
// 															if(userMarklist[0].patteren == "Annual"){
// 																userMarklist.forEach(marklist=>{
// 																	differentCollege.push({
// 																		faculty : marklist.faculty,
// 																		collegeId : marklist.collegeId,
// 																		affiliationDetails : bach.affiliationDetails,
// 																		// college_List : college_List,
// 																		type : marklist.type,
// 																		clg_duration: facultyMaster.year
// 																	})
// 																})
// 															}else if(userMarklist[0].patteren == "Semester"){
// 																var semesters = facultyMaster.year * 2;
// 																for(var i = 2; i <= semesters; i=i+2){
// 																	var sem = "Semester " + i
// 																	userMarklist.forEach(marklist=>{
// 																		if(marklist.name == sem){
// 																			differentCollege.push({
// 																				faculty : marklist.faculty,
// 																				collegeId : marklist.collegeId,
// 																				affiliationDetails : bach.affiliationDetails,
// 																				// college_List : college_List,
// 																				type : marklist.type,
// 																				clg_duration: facultyMaster.year
// 																			})
// 																		}
// 																	})
// 																}
// 															}
// 														}
// 													})
// 												})
// 											})
// 											setTimeout(()=>{
// 												var bachelors = [];
// 												differentCollege.forEach(coll=>{
// 													var college = [];
// 													var bachFlag = false;
// 													if(bachelors.length > 0){
// 														bachelors.forEach(bach=>{
// 															if(bach.faculty == coll.faculty){
// 																bachFlag = true;
// 																var count = 0;
// 																bach.colleges.forEach(clg=>{
// 																	if(clg.collegeId == coll.collegeId){
// 																		count ++;
// 																	}
// 																})
// 																if(count <= bach.colleges.length){
// 																	bach.colleges.push({
// 																		collegeId : coll.collegeId
// 																	})
// 																}

// 																if(bach.affiliationDetails.length > 0) {
// 																	bach.form = true;
// 																}
// 															}
// 														})

// 														if(bachFlag == false){
// 															college.push({
// 																collegeId : coll.collegeId
// 															})

// 															bachelors.push({
// 																faculty : coll.faculty,
// 																colleges : college,
// 																affiliationDetails : coll.affiliationDetails,
// 																type: coll.type +' of '+ coll.faculty,
// 																college_List : college_List,
// 																clg_duration : coll.clg_duration,
// 															})
// 														}
// 													}else{
// 														college.push({
// 															collegeId : coll.collegeId
// 														})
// 														bachelors.push({
// 															faculty : coll.faculty,
// 															colleges :college,
// 															affiliationDetails : coll.affiliationDetails,
// 															type: coll.type +' of '+ coll.faculty,
// 															college_List : college_List,
// 															clg_duration : coll.clg_duration,
// 														})
// 													}
// 												})
// 												educationDetails.bachelors = bachelors;
// 												res.json({
// 													status : 200,
// 													data : educationDetails
// 												})
// 											},5000)
// 										},6000)

// 									}else if(bachelorDetails[0].college_stream_type == false){
// 										models.College.find({
// 											where :{
// 												id : bachelorDetails[0].collegeId
// 											}
// 										}).then(collegename=>{
// 											models.facultymaster.find({
// 												where :{
// 													degree : 'Bachelors',
// 													faculty : bachelorDetails[0].faculty
// 												}
// 											}).then(function(facultyMaster){
// 										models.Affiliation_Letter.findAll({
// 											where:{
// 												user_id : req.User.id,
// 												education : 'Bachelors_' + bachelorDetails[0].faculty
// 											}
// 										}).then(function(affiliationDetails){
// 											var college = [];
// 											college.push({
// 												collegeId : bachelorDetails[0].collegeId
// 											})
// 											educationDetails.bachelors.push({
// 												faculty : bachelorDetails[0].faculty,
// 												colleges : college,
// 												affiliationDetails : affiliationDetails,
// 												type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 												college_name: collegename.name,
// 												clg_duration : facultyMaster.year,
// 												form :true
// 											})
// 											res.json({ 
// 												status : 200,
// 												data : educationDetails
// 											})
// 										})
// 									})
// 								})
// 									}
// 								}
// 								// setTimeout(()=>{
// 								// 	res.json({
// 								// 		status : 200,
// 								// 		data : educationDetails
// 								// 	})
// 								// },2000)
// 							})
// 						})
// 					})
// 					})
// 					}
// 				}


// 			})
// 		}else if(req.query.degreeValue == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "Bachelors",
// 					app_id : null
// 				}
// 			}).then(function(bachelorDetails){
// 				// let clg_duration;
// 				// console.log("durationnn----->"+clg_duration)
// 				var differentStream = [];
// 				if(bachelorDetails.length >0){
// 					if(bachelorDetails[0].college_stream_type == true){
// 						let college_List = [];
// 						bachelorDetails.forEach(bachelor=>{
// 							models.College.find({
// 								where :{
// 									id : bachelor.collegeId
// 								}
// 							}).then(collegename=>{
// 								if(bachelor.patteren == "Annual"){
// 									//academic_year = bachelor.name;
// 									college_List.push({
// 										clg_name : collegename.name,
// 										academic_year : bachelor.name
// 									})
// 								}else if(bachelor.patteren == "Semester"){
// 									switch(bachelor.name){
// 										case 'Semester 2' : 
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'First Year'
// 											})
// 											break;
// 										case 'Semester 4' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Second Year'
// 											})
// 											break;
// 										case 'Semester 6' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Third Year'
// 											})
// 											break;
// 										case 'Semester 8' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fourth Year'
// 											})

// 											break;
// 										case 'Semester 10' :
// 											college_List.push({
// 												clg_name : collegename.name,
// 												academic_year : 'Fifth Year'
// 											})
// 											break;
// 									}
// 								}
// 								models.Affiliation_Letter.findAll({
// 									where:{
// 										user_id : req.User.id,
// 										education : 'Bachelors_' + bachelor.faculty
// 									}
// 								}).then(function(affiliationDetails){
// 									if(differentStream.length > 0){
// 										var flag = false;
// 										differentStream.forEach(single=>{
// 											if(single.faculty == bachelor.faculty){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){

// 											differentStream.push({
// 												faculty : bachelor.faculty,
// 												affiliationDetails : affiliationDetails,
// 												type : bachelor.type
// 											})
// 										}
// 									}else{
// 										differentStream.push({
// 											faculty : bachelor.faculty,
// 											affiliationDetails : affiliationDetails,
// 											type : bachelor.type
// 										})
// 									}
// 								})
// 							})
// 						})
// 						setTimeout(() =>{
// 							var differentCollege = []
// 							differentStream.forEach(bach=>{
// 								models.facultymaster.find({
// 									where :{
// 										degree : 'Bachelors',
// 										faculty : bach.faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.findAll({
// 										where:{
// 											user_id : req.User.id,
// 											type : "Bachelors",
// 											faculty : bach.faculty,
// 											app_id : null
// 										}
// 									}).then(function(userMarklist){
// 										if(userMarklist.length > 0){
// 											if(userMarklist[0].patteren == "Annual"){
// 												userMarklist.forEach(marklist=>{
// 													differentCollege.push({
// 														faculty : marklist.faculty,
// 														collegeId : marklist.collegeId,
// 														affiliationDetails : bach.affiliationDetails,
// 														type : marklist.type,
// 														// college_List : college_List,
// 														clg_duration: facultyMaster.year
// 													})
// 												})
// 											}else if(userMarklist[0].patteren == "Semester"){
// 												var semesters = facultyMaster.year * 2;
// 												for(var i = 2; i <= semesters; i=i+2){
// 													var sem = "Semester " + i
// 													userMarklist.forEach(marklist=>{
// 														if(marklist.name == sem){
// 															differentCollege.push({
// 																faculty : marklist.faculty,
// 																collegeId : marklist.collegeId,
// 																affiliationDetails : bach.affiliationDetails,
// 																type : marklist.type,
// 																// college_List : college_List,
// 																clg_duration: facultyMaster.year
// 															})
// 														}
// 													})
// 												}
// 											}
// 										}
// 									})
// 								})
// 							})
// 							setTimeout(()=>{
// 								// console.log("clg_duration==>"+clg_duration)
// 								var bachelors = [];
// 								differentCollege.forEach(coll=>{
// 									var college = [];
// 									var bachFlag = false;
// 									if(bachelors.length > 0){
// 										bachelors.forEach(bach=>{
// 											if(bach.faculty == coll.faculty){
// 												bachFlag = true;
// 												var count = 0;
// 												bach.colleges.forEach(clg=>{
// 													if(clg.collegeId == coll.collegeId){
// 														count ++;
// 													}
// 												})
// 												if(count <= bach.colleges.length){
// 													bach.colleges.push({
// 														collegeId : coll.collegeId
// 													})
// 												}

// 												if(bach.affiliationDetails.length > 0) {
// 													bach.form = true;
// 												}
// 											}
// 										})

// 										if(bachFlag == false){
// 											college.push({
// 												collegeId : coll.collegeId
// 											})

// 											bachelors.push({
// 												faculty : coll.faculty,
// 												colleges : college,
// 												affiliationDetails : coll.affiliationDetails,
// 												type: coll.type +' of '+ coll.faculty,
// 												clg_duration : coll.clg_duration,
// 												college_List : college_List,
// 											})
// 										}
// 									}else{
// 										college.push({
// 											collegeId : coll.collegeId
// 										})
// 										bachelors.push({
// 											faculty : coll.faculty,
// 											colleges :college,
// 											affiliationDetails : coll.affiliationDetails,
// 											type: coll.type +' of '+ coll.faculty,
// 											clg_duration : coll.clg_duration,
// 											college_List : college_List
// 										})
// 									}
// 								})
// 								educationDetails.bachelors = bachelors;
// 								res.json({
// 									status : 200,
// 									data : educationDetails
// 								})
// 							},3000)
// 						},4000)

// 					}else if(bachelorDetails[0].college_stream_type == false){
// 							// console.log("clg_durationD==>"+clg_duration)
// 								models.College.find({
// 									where :{
// 										id : bachelorDetails[0].collegeId
// 									}
// 								}).then(collegename=>{
// 									models.facultymaster.find({
// 										where :{
// 											degree : 'Bachelors',
// 											faculty : bachelorDetails[0].faculty
// 										}
// 									}).then(function(facultyMaster){
// 								models.Affiliation_Letter.findAll({
// 									where:{
// 										user_id : req.User.id,
// 										education : 'Bachelors_' + bachelorDetails[0].faculty
// 									}
// 								}).then(function(affiliationDetails){
// 									var college = [];
// 									var form;
// 									// if(instructionalDetails.length > 0){
// 									// 	form = true;
// 									// }else{
// 									// 	form = false;	
// 									// }
// 									college.push({
// 										collegeId : bachelorDetails[0].collegeId
// 									})
// 									educationDetails.bachelors.push({
// 										faculty : bachelorDetails[0].faculty,
// 										colleges : college,
// 										affiliationDetails : affiliationDetails,
// 										type: bachelorDetails[0].type +' of '+ bachelorDetails[0].faculty,
// 										college_name: collegename.name,
// 										clg_duration : facultyMaster.year,
// 										form : true
// 									})
// 									res.json({
// 										status : 200,
// 										data : educationDetails
// 									})
// 								})
// 							})
// 						})
// 					}
// 				}
// 			})
// 		}
// 	}
// })

router.get('/getAffiliationLetterDetails', middlewares.getUserInfo, (req, res) => {
	console.log('/getAffiliationLetterDetails');
	var educationDetails = {
		bachelors: [],
		masters: [],
		phd: []
	};
	if (req.query.editFlag == 'true') {
		if (req.query.degreeValue == 'Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
				}
			}).then(function (master_Details) {
				let masters_duration;
				var masterDetails = [];
				if (master_Details.length > 0) {
					master_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									masterDetails.push(detail);
								}
							})
						}
					})
				}
				var differentStream = [];
				if (masterDetails.length > 0) {
					if (masterDetails[0].college_stream_type == true) {
						let college_List = []
						masterDetails.forEach(master => {
							models.College.find({
								where: {
									id: master.collegeId
								}
							}).then(collegename => {
								if (master.patteren == "Annual") {
									college_List.push({
										clg_name: collegename.name,
										academic_year: master.name
									})
								} else if (master.patteren == "Semester") {
									switch (master.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + master.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == master.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: master.faculty,
												affiliationDetails: affiliationDetails,
												type: master.type
											})
										}
									} else {
										differentStream.push({
											faculty: master.faculty,
											affiliationDetails: affiliationDetails,
											type: master.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(mast => {
								models.facultymaster.find({
									where: {
										degree: 'Master',
										faculty: mast.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: mast.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: mast.affiliationDetails,
														type: marklist.type,
														college_List: college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: mast.affiliationDetails,
																type: marklist.type,
																college_List: college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];
								var mastFlag = false
								differentCollege.forEach(coll => {
									var college = [];
									if (masters.length > 0) {
										masters.forEach(mast => {
											if (mast.faculty == coll.faculty) {
												mastFlag = true;
												var count = 0;
												mast.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= mast.colleges.length) {
													mast.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (mast.affiliationDetails.length > 0) {
													mast.form = true;
												}
											}
										})

										if (mastFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											masters.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										masters.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration
										})
									}
								})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: "Bachelors",
									}
								}).then(function (bachelorDetails) {
									var differentStream = [];
									// let clg_duration = 3;
									if (bachelorDetails.length > 0) {
										if (bachelorDetails[0].college_stream_type == true) {
											let college_List = [];
											bachelorDetails.forEach(bachelor => {
												models.College.find({
													where: {
														id: bachelor.collegeId
													}
												}).then(collegename => {
													if (bachelor.patteren == "Annual") {
														//academic_year = bachelor.name;
														college_List.push({
															clg_name: collegename.name,
															academic_year: bachelor.name
														})
													} else if (bachelor.patteren == "Semester") {
														switch (bachelor.name) {
															case 'Semester 2':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'First Year'
																})
																break;
															case 'Semester 4':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Second Year'
																})
																break;
															case 'Semester 6':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Third Year'
																})
																break;
															case 'Semester 8':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fourth Year'
																})

																break;
															case 'Semester 10':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fifth Year'
																})
																break;
														}
													}
													models.Affiliation_Letter.findAll({
														where: {
															user_id: req.User.id,
															education: 'Bachelors_' + bachelor.faculty
														}
													}).then(function (affiliationDetails) {
														if (differentStream.length > 0) {
															var flag = false;
															differentStream.forEach(single => {
																if (single.faculty == bachelor.faculty) {
																	flag = true;
																}
															})
															if (flag == false) {

																differentStream.push({
																	faculty: bachelor.faculty,
																	affiliationDetails: affiliationDetails,
																	type: bachelor.type,
																})
															}
														} else {
															differentStream.push({
																faculty: bachelor.faculty,
																affiliationDetails: affiliationDetails,
																type: bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() => {
												var differentCollege = []
												differentStream.forEach(bach => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bach.faculty
														}
													}).then(function (facultyMaster) {
														models.userMarkList.findAll({
															where: {
																user_id: req.User.id,
																type: "Bachelors",
																faculty: bach.faculty,
															}
														}).then(function (userMarklist) {
															if (userMarklist.length > 0) {
																if (userMarklist[0].patteren == "Annual") {
																	userMarklist.forEach(marklist => {
																		differentCollege.push({
																			faculty: marklist.faculty,
																			collegeId: marklist.collegeId,
																			affiliationDetails: bach.affiliationDetails,
																			type: marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year
																		})
																	})
																} else if (userMarklist[0].patteren == "Semester") {
																	var semesters = facultyMaster.year * 2;
																	for (var i = 2; i <= semesters; i = i + 2) {
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist => {
																			if (marklist.name == sem) {
																				differentCollege.push({
																					faculty: marklist.faculty,
																					collegeId: marklist.collegeId,
																					affiliationDetails: bach.affiliationDetails,
																					type: marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(() => {
													var bachelors = [];
													differentCollege.forEach(coll => {
														var college = [];
														var bachFlag = false;
														if (bachelors.length > 0) {
															bachelors.forEach(bach => {
																if (bach.faculty == coll.faculty) {
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg => {
																		if (clg.collegeId == coll.collegeId) {
																			count++;
																		}
																	})
																	if (count <= bach.colleges.length) {
																		bach.colleges.push({
																			collegeId: coll.collegeId
																		})
																	}

																	if (bach.affiliationDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if (bachFlag == false) {
																college.push({
																	collegeId: coll.collegeId
																})

																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	affiliationDetails: coll.affiliationDetails,
																	college_List: college_List,
																	type: coll.type + ' of ' + coll.faculty,
																	clg_duration: coll.clg_duration,
																})
															}
														} else {
															college.push({
																collegeId: coll.collegeId
															})
															bachelors.push({
																faculty: coll.faculty,
																colleges: college,
																affiliationDetails: coll.affiliationDetails,
																college_List: college_List,
																type: coll.type + ' of ' + coll.faculty,
																clg_duration: coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 3000)
											}, 4000)

										} else if (bachelorDetails[0].college_stream_type == false) {
											models.College.find({
												where: {
													id: bachelorDetails[0].collegeId
												}
											}).then(collegename => {
												models.facultymaster.find({
													where: {
														degree: 'Bachelors',
														faculty: bachelorDetails[0].faculty
													}
												}).then(function (facultyMaster) {
													models.Affiliation_Letter.findAll({
														where: {
															user_id: req.User.id,
															education: 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function (affiliationDetails) {
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty: bachelorDetails[0].faculty,
															colleges: college,
															affiliationDetails: affiliationDetails,
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration: facultyMaster.year,
														})
														res.json({
															status: 200,
															data: educationDetails
														})
													})
												})
											})
										}
									}
								})
							}, 3000)
						}, 4000)

					} else if (masterDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: masterDetails[0].collegeId
							}
						}).then(master_collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: masterDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + masterDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									college.push({
										collegeId: masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: masterDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
										college_name: master_collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
										}
									}).then(function (bachelorDetails) {
										var differentStream = [];
										let clg_duration;
										if (bachelorDetails.length > 0) {
											if (bachelorDetails[0].college_stream_type == true) {
												let college_List = [];
												bachelorDetails.forEach(bachelor => {
													models.College.find({
														where: {
															id: bachelor.collegeId
														}
													}).then(collegename => {
														if (bachelor.patteren == "Annual") {
															//academic_year = bachelor.name;
															college_List.push({
																clg_name: collegename.name,
																academic_year: bachelor.name
															})
														} else if (bachelor.patteren == "Semester") {
															switch (bachelor.name) {
																case 'Semester 2':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'First Year'
																	})
																	break;
																case 'Semester 4':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Second Year'
																	})
																	break;
																case 'Semester 6':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Third Year'
																	})
																	break;
																case 'Semester 8':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fourth Year'
																	})

																	break;
																case 'Semester 10':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fifth Year'
																	})
																	break;
															}
														}
														models.Affiliation_Letter.findAll({
															where: {
																user_id: req.User.id,
																education: 'Bachelors_' + bachelor.faculty
															}
														}).then(function (affiliationDetails) {
															if (differentStream.length > 0) {
																var flag = false;
																differentStream.forEach(single => {
																	if (single.faculty == bachelor.faculty) {
																		flag = true;
																	}
																})
																if (flag == false) {

																	differentStream.push({
																		faculty: bachelor.faculty,
																		affiliationDetails: affiliationDetails,
																		type: bachelor.type,
																	})
																}
															} else {
																differentStream.push({
																	faculty: bachelor.faculty,
																	affiliationDetails: affiliationDetails,
																	type: bachelor.type,
																})
															}
														})
													})
												})
												setTimeout(() => {
													var differentCollege = []
													differentStream.forEach(bach => {
														models.facultymaster.find({
															where: {
																degree: 'Bachelors',
																faculty: bach.faculty
															}
														}).then(function (facultyMaster) {
															models.userMarkList.findAll({
																where: {
																	user_id: req.User.id,
																	type: "Bachelors",
																	faculty: bach.faculty,
																}
															}).then(function (userMarklist) {
																if (userMarklist.length > 0) {
																	if (userMarklist[0].patteren == "Annual") {
																		userMarklist.forEach(marklist => {
																			differentCollege.push({
																				faculty: marklist.faculty,
																				collegeId: marklist.collegeId,
																				affiliationDetails: bach.affiliationDetails,
																				// college_List : college_List,
																				type: marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		})
																	} else if (userMarklist[0].patteren == "Semester") {
																		var semesters = facultyMaster.year * 2;
																		for (var i = 2; i <= semesters; i = i + 2) {
																			var sem = "Semester " + i
																			userMarklist.forEach(marklist => {
																				if (marklist.name == sem) {
																					differentCollege.push({
																						faculty: marklist.faculty,
																						collegeId: marklist.collegeId,
																						affiliationDetails: bach.affiliationDetails,
																						// college_List : college_List,
																						type: marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			})
																		}
																	}
																}
															})
														})
													})
													setTimeout(() => {
														var bachelors = [];
														differentCollege.forEach(coll => {
															var college = [];
															var bachFlag = false;
															if (bachelors.length > 0) {
																bachelors.forEach(bach => {
																	if (bach.faculty == coll.faculty) {
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg => {
																			if (clg.collegeId == coll.collegeId) {
																				count++;
																			}
																		})
																		if (count <= bach.colleges.length) {
																			bach.colleges.push({
																				collegeId: coll.collegeId
																			})
																		}

																		if (bach.affiliationDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if (bachFlag == false) {
																	college.push({
																		collegeId: coll.collegeId
																	})

																	bachelors.push({
																		faculty: coll.faculty,
																		colleges: college,
																		affiliationDetails: coll.affiliationDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															} else {
																college.push({
																	collegeId: coll.collegeId
																})
																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	affiliationDetails: coll.affiliationDetails,
																	type: coll.type + ' of ' + coll.faculty,
																	college_List: college_List,
																	clg_duration: coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;

													}, 3000)
												}, 4000)

											} else if (bachelorDetails[0].college_stream_type == false) {
												models.College.find({
													where: {
														id: bachelorDetails[0].collegeId
													}
												}).then(collegename => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														models.Affiliation_Letter.findAll({
															where: {
																user_id: req.User.id,
																education: 'Bachelors_' + bachelorDetails[0].faculty
															}
														}).then(function (affiliationDetails) {
															var college = [];
															college.push({
																collegeId: bachelorDetails[0].collegeId
															})
															educationDetails.bachelors.push({
																faculty: bachelorDetails[0].faculty,
																colleges: college,
																affiliationDetails: affiliationDetails,
																type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																college_name: collegename.name,
																clg_duration: facultyMaster.year,
																form: true
															})
														})
													})
												})
											}
										}
									})
									setTimeout(() => {
										consoel.log("educationDetails == " + JSON.stringify(educationDetails));
										res.json({
											status: 200,
											data: educationDetails
										})
									}, 2000);
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Bachelors",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Bachelors_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Bachelors',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var bachelors = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (bachelors.length > 0) {
										bachelors.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											bachelors.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										bachelors.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Bachelors',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Masters') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (masters.length > 0) {
										masters.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											masters.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										masters.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Phd,Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Phd",
				}
			}).then(function (bachelor_Details) {
				let clg_duration;
				var differentStream = [];
				var bachelorDetails = [];
				if (bachelor_Details.length > 0) {
					bachelor_Details.forEach(detail => {
						if (detail.app_id != null) {
							var app_idArr = detail.app_id.split(",");
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									bachelorDetails.push(detail);
								}
							})
						}
					})
				}
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Phd_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Phd',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Phd",
											faculty: bach.faculty,
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var phd = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (phd.length > 0) {
										phd.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											phd.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										phd.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											college_List: college_List,
											clg_duration: coll.clg_duration,
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Phd',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Phd_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		}
	} else {
		if (req.query.degreeValue == 'Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
					app_id: null
				}
			}).then(function (masterDetails) {
				let masters_duration;
				var differentStream = [];
				if (masterDetails.length > 0) {
					if (masterDetails[0].college_stream_type == true) {
						let college_List = []
						masterDetails.forEach(master => {
							models.College.find({
								where: {
									id: master.collegeId
								}
							}).then(collegename => {
								if (master.patteren == "Annual") {
									college_List.push({
										clg_name: collegename.name,
										academic_year: master.name
									})
								} else if (master.patteren == "Semester") {
									switch (master.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + master.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == master.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: master.faculty,
												affiliationDetails: affiliationDetails,
												type: master.type
											})
										}
									} else {
										differentStream.push({
											faculty: master.faculty,
											affiliationDetails: affiliationDetails,
											type: master.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []

							differentStream.forEach(mast => {
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: mast.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: mast.faculty,
											app_id: null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: mast.affiliationDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: mast.affiliationDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								var masters = [];

								differentCollege.forEach(coll => {
									models.College.find({
										where: {
											id: coll.collegeId
										}
									}).then(collegename => {
										var college = [];
										var mastFlag = false
										if (masters.length > 0) {
											masters.forEach(mast => {
												if (mast.faculty == coll.faculty) {
													mastFlag = true;
													var count = 0;
													mast.colleges.forEach(clg => {
														if (clg.collegeId == coll.collegeId) {
															count++;
														}
													})
													if (count <= mast.colleges.length) {
														mast.colleges.push({
															collegeId: coll.collegeId
														})
													}

													if (mast.affiliationDetails.length >= 0) {
														mast.form = true;
													}
												}
											})

											if (mastFlag == false) {
												college.push({
													collegeId: coll.collegeId
												})

												masters.push({
													faculty: coll.faculty,
													colleges: college,
													affiliationDetails: coll.affiliationDetails,
													type: coll.type + ' of ' + coll.faculty,
													college_List: college_List,
													clg_duration: coll.clg_duration,
													college_name: collegename.name,
													form: true
												})
											}
										} else {
											college.push({
												collegeId: coll.collegeId
											})
											masters.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												college_List: college_List,
												clg_duration: coll.clg_duration,
												college_name: collegename.name,
												form: true
											})
										}
									})
								})
								educationDetails.masters = masters;
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: "Bachelors",
										app_id: null
									}
								}).then(function (bachelorDetails) {
									var differentStream = [];
									// let clg_duration;
									if (bachelorDetails.length > 0) {
										if (bachelorDetails[0].college_stream_type == true) {
											let college_List = [];
											bachelorDetails.forEach(bachelor => {
												models.College.find({
													where: {
														id: bachelor.collegeId
													}
												}).then(collegename => {
													if (bachelor.patteren == "Annual") {
														//academic_year = bachelor.name;
														college_List.push({
															clg_name: collegename.name,
															academic_year: bachelor.name
														})
													} else if (bachelor.patteren == "Semester") {
														switch (bachelor.name) {
															case 'Semester 2':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'First Year'
																})
																break;
															case 'Semester 4':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Second Year'
																})
																break;
															case 'Semester 6':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Third Year'
																})
																break;
															case 'Semester 8':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fourth Year'
																})

																break;
															case 'Semester 10':
																college_List.push({
																	clg_name: collegename.name,
																	academic_year: 'Fifth Year'
																})
																break;
														}
													}
													models.Affiliation_Letter.findAll({
														where: {
															user_id: req.User.id,
															education: 'Bachelors_' + bachelor.faculty
														}
													}).then(function (affiliationDetails) {
														if (differentStream.length > 0) {
															var flag = false;
															differentStream.forEach(single => {
																if (single.faculty == bachelor.faculty) {
																	flag = true;
																}
															})
															if (flag == false) {

																differentStream.push({
																	faculty: bachelor.faculty,
																	affiliationDetails: affiliationDetails,
																	type: bachelor.type,
																})
															}
														} else {
															differentStream.push({
																faculty: bachelor.faculty,
																affiliationDetails: affiliationDetails,
																type: bachelor.type,
															})
														}
													})
												})
											})
											setTimeout(() => {
												var differentCollege = []
												differentStream.forEach(bach => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bach.faculty
														}
													}).then(function (facultyMaster) {
														models.userMarkList.findAll({
															where: {
																user_id: req.User.id,
																type: "Bachelors",
																faculty: bach.faculty,
																app_id: null
															}
														}).then(function (userMarklist) {
															if (userMarklist.length > 0) {
																if (userMarklist[0].patteren == "Annual") {
																	userMarklist.forEach(marklist => {
																		differentCollege.push({
																			faculty: marklist.faculty,
																			collegeId: marklist.collegeId,
																			affiliationDetails: bach.affiliationDetails,
																			type: marklist.type,
																			// college_List : college_List,
																			clg_duration: facultyMaster.year
																		})
																	})
																} else if (userMarklist[0].patteren == "Semester") {
																	var semesters = facultyMaster.year * 2;
																	for (var i = 2; i <= semesters; i = i + 2) {
																		var sem = "Semester " + i
																		userMarklist.forEach(marklist => {
																			if (marklist.name == sem) {
																				differentCollege.push({
																					faculty: marklist.faculty,
																					collegeId: marklist.collegeId,
																					affiliationDetails: bach.affiliationDetails,
																					type: marklist.type,
																					// college_List : college_List,
																					clg_duration: facultyMaster.year,
																					form: true
																				})
																			}
																		})
																	}
																}
															}
														})
													})
												})
												setTimeout(() => {
													var bachelors = [];
													differentCollege.forEach(coll => {
														var college = [];
														var bachFlag = false;
														if (bachelors.length > 0) {
															bachelors.forEach(bach => {
																if (bach.faculty == coll.faculty) {
																	bachFlag = true;
																	var count = 0;
																	bach.colleges.forEach(clg => {
																		if (clg.collegeId == coll.collegeId) {
																			count++;
																		}
																	})
																	if (count <= bach.colleges.length) {
																		bach.colleges.push({
																			collegeId: coll.collegeId
																		})
																	}

																	if (bach.affiliationDetails.length > 0) {
																		bach.form = true;
																	}
																}
															})

															if (bachFlag == false) {
																college.push({
																	collegeId: coll.collegeId
																})

																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	affiliationDetails: coll.affiliationDetails,
																	college_List: college_List,
																	type: coll.type + ' of ' + coll.faculty,
																	clg_duration: coll.clg_duration,
																})
															}
														} else {
															college.push({
																collegeId: coll.collegeId
															})
															bachelors.push({
																faculty: coll.faculty,
																colleges: college,
																affiliationDetails: coll.affiliationDetails,
																college_List: college_List,
																type: coll.type + ' of ' + coll.faculty,
																clg_duration: coll.clg_duration,
															})
														}
													})
													educationDetails.bachelors = bachelors;
													res.json({
														status: 200,
														data: educationDetails
													})
												}, 3000)
											}, 4000)

										} else if (bachelorDetails[0].college_stream_type == false) {
											models.College.find({
												where: {
													id: bachelorDetails[0].collegeId
												}
											}).then(collegename => {
												models.facultymaster.find({
													where: {
														degree: 'Bachelors',
														faculty: bachelorDetails[0].faculty
													}
												}).then(function (facultyMaster) {
													models.Affiliation_Letter.findAll({
														where: {
															user_id: req.User.id,
															education: 'Bachelors_' + bachelorDetails[0].faculty
														}
													}).then(function (affiliationDetails) {
														var college = [];
														college.push({
															collegeId: bachelorDetails[0].collegeId
														})
														educationDetails.bachelors.push({
															faculty: bachelorDetails[0].faculty,
															colleges: college,
															affiliationDetails: affiliationDetails,
															type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
															college_name: collegename.name,
															clg_duration: facultyMaster.year,
															form: true
														})
														res.json({
															status: 200,
															data: educationDetails
														})
													})
												})
											})
										}
									}

									// res.json({
									// 	status : 200,
									// 	data : educationDetails
									// })
								})
							}, 3000)
						}, 4000)

					} else if (masterDetails[0].college_stream_type == false) {
						models.College.find({
							where: {
								id: masterDetails[0].collegeId
							}
						}).then(master_collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: masterDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + masterDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									college.push({
										collegeId: masterDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: masterDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: masterDetails[0].type + ' of ' + masterDetails[0].faculty,
										college_name: master_collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											app_id: null
										}
									}).then(function (bachelorDetails) {
										var differentStream = [];
										let clg_duration;
										if (bachelorDetails.length > 0) {
											if (bachelorDetails[0].college_stream_type == true) {
												let college_List = [];
												bachelorDetails.forEach(bachelor => {
													models.College.find({
														where: {
															id: bachelor.collegeId
														}
													}).then(collegename => {
														if (bachelor.patteren == "Annual") {
															//academic_year = bachelor.name;
															college_List.push({
																clg_name: collegename.name,
																academic_year: bachelor.name
															})
														} else if (bachelor.patteren == "Semester") {
															switch (bachelor.name) {
																case 'Semester 2':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'First Year'
																	})
																	break;
																case 'Semester 4':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Second Year'
																	})
																	break;
																case 'Semester 6':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Third Year'
																	})
																	break;
																case 'Semester 8':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fourth Year'
																	})

																	break;
																case 'Semester 10':
																	college_List.push({
																		clg_name: collegename.name,
																		academic_year: 'Fifth Year'
																	})
																	break;
															}
														}
														models.Affiliation_Letter.findAll({
															where: {
																user_id: req.User.id,
																education: 'Bachelors_' + bachelor.faculty
															}
														}).then(function (affiliationDetails) {
															if (differentStream.length > 0) {
																var flag = false;
																differentStream.forEach(single => {
																	if (single.faculty == bachelor.faculty) {
																		flag = true;
																	}
																})
																if (flag == false) {

																	differentStream.push({
																		faculty: bachelor.faculty,
																		affiliationDetails: affiliationDetails,
																		type: bachelor.type,
																	})
																}
															} else {
																differentStream.push({
																	faculty: bachelor.faculty,
																	affiliationDetails: affiliationDetails,
																	type: bachelor.type,
																})
															}
														})
													})
												})
												setTimeout(() => {
													var differentCollege = []
													differentStream.forEach(bach => {
														models.facultymaster.find({
															where: {
																degree: 'Bachelors',
																faculty: bach.faculty
															}
														}).then(function (facultyMaster) {
															models.userMarkList.findAll({
																where: {
																	user_id: req.User.id,
																	type: "Bachelors",
																	faculty: bach.faculty,
																	app_id: null
																}
															}).then(function (userMarklist) {
																if (userMarklist.length > 0) {
																	if (userMarklist[0].patteren == "Annual") {
																		userMarklist.forEach(marklist => {
																			differentCollege.push({
																				faculty: marklist.faculty,
																				collegeId: marklist.collegeId,
																				affiliationDetails: bach.affiliationDetails,
																				// college_List : college_List,
																				type: marklist.type,
																				clg_duration: facultyMaster.year
																			})
																		})
																	} else if (userMarklist[0].patteren == "Semester") {
																		var semesters = facultyMaster.year * 2;
																		for (var i = 2; i <= semesters; i = i + 2) {
																			var sem = "Semester " + i
																			userMarklist.forEach(marklist => {
																				if (marklist.name == sem) {
																					differentCollege.push({
																						faculty: marklist.faculty,
																						collegeId: marklist.collegeId,
																						affiliationDetails: bach.affiliationDetails,
																						// college_List : college_List,
																						type: marklist.type,
																						clg_duration: facultyMaster.year
																					})
																				}
																			})
																		}
																	}
																}
															})
														})
													})
													setTimeout(() => {
														var bachelors = [];
														differentCollege.forEach(coll => {
															var college = [];
															var bachFlag = false;
															if (bachelors.length > 0) {
																bachelors.forEach(bach => {
																	if (bach.faculty == coll.faculty) {
																		bachFlag = true;
																		var count = 0;
																		bach.colleges.forEach(clg => {
																			if (clg.collegeId == coll.collegeId) {
																				count++;
																			}
																		})
																		if (count <= bach.colleges.length) {
																			bach.colleges.push({
																				collegeId: coll.collegeId
																			})
																		}

																		if (bach.affiliationDetails.length > 0) {
																			bach.form = true;
																		}
																	}
																})

																if (bachFlag == false) {
																	college.push({
																		collegeId: coll.collegeId
																	})

																	bachelors.push({
																		faculty: coll.faculty,
																		colleges: college,
																		affiliationDetails: coll.affiliationDetails,
																		type: coll.type + ' of ' + coll.faculty,
																		college_List: college_List,
																		clg_duration: coll.clg_duration,
																	})
																}
															} else {
																college.push({
																	collegeId: coll.collegeId
																})
																bachelors.push({
																	faculty: coll.faculty,
																	colleges: college,
																	affiliationDetails: coll.affiliationDetails,
																	type: coll.type + ' of ' + coll.faculty,
																	college_List: college_List,
																	clg_duration: coll.clg_duration,
																})
															}
														})
														educationDetails.bachelors = bachelors;
														res.json({
															status: 200,
															data: educationDetails
														})
													}, 5000)
												}, 6000)

											} else if (bachelorDetails[0].college_stream_type == false) {
												models.College.find({
													where: {
														id: bachelorDetails[0].collegeId
													}
												}).then(collegename => {
													models.facultymaster.find({
														where: {
															degree: 'Bachelors',
															faculty: bachelorDetails[0].faculty
														}
													}).then(function (facultyMaster) {
														models.Affiliation_Letter.findAll({
															where: {
																user_id: req.User.id,
																education: 'Bachelors_' + bachelorDetails[0].faculty
															}
														}).then(function (affiliationDetails) {
															var college = [];
															college.push({
																collegeId: bachelorDetails[0].collegeId
															})
															educationDetails.bachelors.push({
																faculty: bachelorDetails[0].faculty,
																colleges: college,
																affiliationDetails: affiliationDetails,
																type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
																college_name: collegename.name,
																clg_duration: facultyMaster.year,
																form: true
															})
															res.json({
																status: 200,
																data: educationDetails
															})
														})
													})
												})
											}
										}
										// setTimeout(()=>{
										// 	res.json({
										// 		status : 200,
										// 		data : educationDetails
										// 	})
										// },2000)
									})
								})
							})
						})
					}
				}


			})
		} else if (req.query.degreeValue == 'Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Bachelors",
					app_id: null
				}
			}).then(function (bachelorDetails) {
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Bachelors_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Bachelors',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Bachelors",
											faculty: bach.faculty,
											app_id: null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								// console.log("clg_duration==>"+clg_duration)
								var bachelors = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (bachelors.length > 0) {
										bachelors.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											bachelors.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												clg_duration: coll.clg_duration,
												college_List: college_List,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										bachelors.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											clg_duration: coll.clg_duration,
											college_List: college_List
										})
									}
								})
								educationDetails.bachelors = bachelors;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						// console.log("clg_durationD==>"+clg_duration)
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Bachelors',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Bachelors_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.bachelors.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Masters') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters",
					app_id: null
				}
			}).then(function (bachelorDetails) {
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Masters',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Masters",
											faculty: bach.faculty,
											app_id: null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								// console.log("clg_duration==>"+clg_duration)
								var masters = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (masters.length > 0) {
										masters.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											masters.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												clg_duration: coll.clg_duration,
												college_List: college_List,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										masters.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											clg_duration: coll.clg_duration,
											college_List: college_List
										})
									}
								})
								educationDetails.masters = masters;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						// console.log("clg_durationD==>"+clg_duration)
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Masters',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Masters_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.masters.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		} else if (req.query.degreeValue == 'Phd,Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Phd",
					app_id: null
				}
			}).then(function (bachelorDetails) {
				// let clg_duration;
				// console.log("durationnn----->"+clg_duration)
				var differentStream = [];
				if (bachelorDetails.length > 0) {
					if (bachelorDetails[0].college_stream_type == true) {
						let college_List = [];
						bachelorDetails.forEach(bachelor => {
							models.College.find({
								where: {
									id: bachelor.collegeId
								}
							}).then(collegename => {
								if (bachelor.patteren == "Annual") {
									//academic_year = bachelor.name;
									college_List.push({
										clg_name: collegename.name,
										academic_year: bachelor.name
									})
								} else if (bachelor.patteren == "Semester") {
									switch (bachelor.name) {
										case 'Semester 2':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'First Year'
											})
											break;
										case 'Semester 4':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Second Year'
											})
											break;
										case 'Semester 6':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Third Year'
											})
											break;
										case 'Semester 8':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fourth Year'
											})

											break;
										case 'Semester 10':
											college_List.push({
												clg_name: collegename.name,
												academic_year: 'Fifth Year'
											})
											break;
									}
								}
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Phd_' + bachelor.faculty
									}
								}).then(function (affiliationDetails) {
									if (differentStream.length > 0) {
										var flag = false;
										differentStream.forEach(single => {
											if (single.faculty == bachelor.faculty) {
												flag = true;
											}
										})
										if (flag == false) {

											differentStream.push({
												faculty: bachelor.faculty,
												affiliationDetails: affiliationDetails,
												type: bachelor.type
											})
										}
									} else {
										differentStream.push({
											faculty: bachelor.faculty,
											affiliationDetails: affiliationDetails,
											type: bachelor.type
										})
									}
								})
							})
						})
						setTimeout(() => {
							var differentCollege = []
							differentStream.forEach(bach => {
								models.facultymaster.find({
									where: {
										degree: 'Phd',
										faculty: bach.faculty
									}
								}).then(function (facultyMaster) {
									models.userMarkList.findAll({
										where: {
											user_id: req.User.id,
											type: "Phd",
											faculty: bach.faculty,
											app_id: null
										}
									}).then(function (userMarklist) {
										if (userMarklist.length > 0) {
											if (userMarklist[0].patteren == "Annual") {
												userMarklist.forEach(marklist => {
													differentCollege.push({
														faculty: marklist.faculty,
														collegeId: marklist.collegeId,
														affiliationDetails: bach.affiliationDetails,
														type: marklist.type,
														// college_List : college_List,
														clg_duration: facultyMaster.year
													})
												})
											} else if (userMarklist[0].patteren == "Semester") {
												var semesters = facultyMaster.year * 2;
												for (var i = 2; i <= semesters; i = i + 2) {
													var sem = "Semester " + i
													userMarklist.forEach(marklist => {
														if (marklist.name == sem) {
															differentCollege.push({
																faculty: marklist.faculty,
																collegeId: marklist.collegeId,
																affiliationDetails: bach.affiliationDetails,
																type: marklist.type,
																// college_List : college_List,
																clg_duration: facultyMaster.year
															})
														}
													})
												}
											}
										}
									})
								})
							})
							setTimeout(() => {
								// console.log("clg_duration==>"+clg_duration)
								var phd = [];
								differentCollege.forEach(coll => {
									var college = [];
									var bachFlag = false;
									if (phd.length > 0) {
										phd.forEach(bach => {
											if (bach.faculty == coll.faculty) {
												bachFlag = true;
												var count = 0;
												bach.colleges.forEach(clg => {
													if (clg.collegeId == coll.collegeId) {
														count++;
													}
												})
												if (count <= bach.colleges.length) {
													bach.colleges.push({
														collegeId: coll.collegeId
													})
												}

												if (bach.affiliationDetails.length > 0) {
													bach.form = true;
												}
											}
										})

										if (bachFlag == false) {
											college.push({
												collegeId: coll.collegeId
											})

											phd.push({
												faculty: coll.faculty,
												colleges: college,
												affiliationDetails: coll.affiliationDetails,
												type: coll.type + ' of ' + coll.faculty,
												clg_duration: coll.clg_duration,
												college_List: college_List,
											})
										}
									} else {
										college.push({
											collegeId: coll.collegeId
										})
										phd.push({
											faculty: coll.faculty,
											colleges: college,
											affiliationDetails: coll.affiliationDetails,
											type: coll.type + ' of ' + coll.faculty,
											clg_duration: coll.clg_duration,
											college_List: college_List
										})
									}
								})
								educationDetails.phd = phd;
								res.json({
									status: 200,
									data: educationDetails
								})
							}, 3000)
						}, 4000)

					} else if (bachelorDetails[0].college_stream_type == false) {
						// console.log("clg_durationD==>"+clg_duration)
						models.College.find({
							where: {
								id: bachelorDetails[0].collegeId
							}
						}).then(collegename => {
							models.facultymaster.find({
								where: {
									degree: 'Phd',
									faculty: bachelorDetails[0].faculty
								}
							}).then(function (facultyMaster) {
								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										education: 'Phd_' + bachelorDetails[0].faculty
									}
								}).then(function (affiliationDetails) {
									var college = [];
									var form;
									// if(instructionalDetails.length > 0){
									// 	form = true;
									// }else{
									// 	form = false;	
									// }
									college.push({
										collegeId: bachelorDetails[0].collegeId
									})
									educationDetails.phd.push({
										faculty: bachelorDetails[0].faculty,
										colleges: college,
										affiliationDetails: affiliationDetails,
										type: bachelorDetails[0].type + ' of ' + bachelorDetails[0].faculty,
										college_name: collegename.name,
										clg_duration: facultyMaster.year,
										form: true
									})
									res.json({
										status: 200,
										data: educationDetails
									})
								})
							})
						})
					}
				}
			})
		}
	}
})
router.get('/getDocumentDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/getDocumentDetails');
	var outercounter = 0;
	var ssc_document_exists,
		hsc_document_exists,
		degree_document_exists,
		master_document_exists,
		phd_document_exists;
	var ssc_document;
	var hsc_document;
	var degree_document;
	var master_document;
	var phd_document;
	var ssc_lock, hsc_lock, degree_lock, master_lock, phd_lock;
	models.User_Transcript.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (transcripts) {
		if (transcripts.length > 0) {
			transcripts.forEach(function (transcript) {
				if (transcript.type == 'SSC') {
					ssc_document_exists = 'exists';
					ssc_document = transcript.file_name;
					ssc_lock = transcript.lock_transcript;
				}

				if (transcript.type == 'HSC') {
					hsc_document_exists = 'exists';
					hsc_document = transcript.file_name;
					hsc_lock = transcript.lock_transcript;
				}

				if (transcript.type == 'Graduation') {
					degree_document_exists = 'exists';
					degree_document = transcript.file_name;
					degree_lock = transcript.lock_transcript;
				}

				if (transcript.type == 'Master') {
					master_document_exists = 'exists';
					master_document = transcript.file_name;
					master_lock = transcript.lock_transcript;
				}

				if (transcript.type == 'Ph.D') {
					phd_document_exists = 'exists';
					phd_document = transcript.file_name;
					phd_lock = transcript.lock_transcript;
				}

				outercounter++;
			});
			if (outercounter == transcripts.length) {
				var data = [];
				data.push({
					ssc_document_exists: ssc_document_exists,
					hsc_document_exists: hsc_document_exists,
					degree_document_exists: degree_document_exists,
					master_document_exists: master_document_exists,
					phd_document_exists: phd_document_exists,
					ssc_document: ssc_document,
					hsc_document: hsc_document,
					degree_document: degree_document,
					master_document: master_document,
					phd_document: phd_document,
					ssc_lock: ssc_lock,
					hsc_lock: hsc_lock,
					degree_lock: degree_lock,
					master_lock: master_lock,
					phd_lock: phd_lock,
				});

				res.json({
					status: 200,
					data: data
				})
			}
		} else {
			res.json({
				status: 400,
				message: 'Transcripts not uploaded'
			})
		}
	})
});

router.get('/getDocumentStatus', middlewares.getUserInfo, function (req, res) {
	console.log('/getDocumentStatus');
	var ssc_exists = false;
	var hsc_exists = false;
	var degree_exists = false;
	var master_exists = false;
	var phd_exists = false;
	var outercounter = 0;
	models.User.find({
		where: {
			id: req.User.id
		}
	}).then(function (user) {
		models.User_Transcript.findAll({
			where: {
				user_id: user.id
			}
		}).then(function (all_transcripts) {
			if (all_transcripts.length > 0) {
				if (user.applying_for == 'Degree') {
					all_transcripts.forEach(function (transcript) {
						if (transcript.type == 'SSC') {
							ssc_exists = true;
						}

						if (transcript.type == 'HSC') {
							hsc_exists = true;
						}
						if (transcript.type == 'Graduation') {
							degree_exists = true;
						}
						outercounter++;
					});

					if (all_transcripts.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true) {
							res.json({
								status: 200,
								message: 'All transcripts exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'Transcripts missing'
							});
						}
					}
				} else if (user.applying_for == 'Masters') {
					all_transcripts.forEach(function (transcript) {
						if (transcript.type == 'SSC') {
							ssc_exists = true;
						}

						if (transcript.type == 'HSC') {
							hsc_exists = true;
						}

						if (transcript.type == 'Graduation') {
							degree_exists = true;
						}

						if (transcript.type == 'Masters') {
							master_exists = true;
						}
						outercounter++;
					});

					if (all_transcripts.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true) {
							res.json({
								status: 200,
								message: 'All transcripts exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'Transcripts missing'
							});
						}
					}
				} else if (user.applying_for == 'Ph.D') {
					all_transcripts.forEach(function (transcript) {
						if (transcript.type == 'SSC') {
							ssc_exists = true;
						}

						if (transcript.type == 'HSC') {
							hsc_exists = true;
						}

						if (transcript.type == 'Graduation') {
							degree_exists = true;
						}

						if (transcript.type == 'Master') {
							master_exists = true;
						}
						if (transcript.type == 'Ph.D') {
							phd_exists = true;
						}
						outercounter++;
					});

					if (all_transcripts.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true && phd_exists == true) {
							res.json({
								status: 200,
								message: 'All transcripts exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'Transcripts missing'
							});
						}
					}
				}
			} else {
				res.json({
					status: 400,
					message: 'Transcripts missing'
				});
			}
		})
	});
});

router.get('/getInstituteStatus', middlewares.getUserInfo, function (req, res) {
	console.log('/getInstituteStatus');
	var ssc_exists = false;
	var hsc_exists = false;
	var degree_exists = false;
	var master_exists = false;
	var phd_exists = false;
	var outercounter = 0;
	models.User.find({
		where: {
			id: req.User.id
		}
	}).then(function (user) {
		models.Educational_Details.findAll({
			where: {
				user_id: user.id
			}
		}).then(function (all_details) {
			if (all_details.length > 0) {
				if (user.applying_for == 'Degree') {
					all_details.forEach(function (detail) {
						if (detail.type == 'SSC') {
							ssc_exists = true;
						}

						if (detail.type == 'HSC') {
							hsc_exists = true;
						}

						if (detail.type == 'Graduation') {
							degree_exists = true;
						}
						outercounter++;
					});

					if (all_details.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true) {
							res.json({
								status: 200,
								message: 'All details exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'details missing'
							});
						}
					}
				} else if (user.applying_for == 'Masters') {
					all_details.forEach(function (detail) {
						if (detail.type == 'SSC') {
							ssc_exists = true;
						}

						if (detail.type == 'HSC') {
							hsc_exists = true;
						}

						if (detail.type == 'Graduation') {
							degree_exists = true;
						}

						if (detail.type == 'Master') {
							master_exists = true;
						}
						outercounter++;
					});

					if (all_details.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true) {
							res.json({
								status: 200,
								message: 'All details exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'details missing'
							});
						}
					}
				} else if (user.applying_for == 'Ph.D') {
					all_details.forEach(function (detail) {
						if (detail.type == 'SSC') {
							ssc_exists = true;
						}

						if (detail.type == 'HSC') {
							hsc_exists = true;
						}

						if (detail.type == 'Graduation') {
							degree_exists = true;
						}

						if (detail.type == 'Master') {
							master_exists = true;
						}
						if (detail.type == 'Ph.D') {
							phd_exists = true;
						}
						outercounter++;
					});

					if (all_details.length == outercounter) {
						if (ssc_exists == true && hsc_exists == true && degree_exists == true && master_exists == true && phd_exists == true) {
							res.json({
								status: 200,
								message: 'All details exists'
							});
						} else {
							res.json({
								status: 400,
								message: 'details missing'
							});
						}
					}
				}
			} else {
				res.json({
					status: 400,
					message: 'details missing'
				});
			}
		})
	});
});

router.get('/getApplyingEducation', middlewares.getUserInfo, function (req, res) {
	console.log('/getApplyingEducation');
	models.User.find({
		where: {
			id: req.User.id
		}
	}).then(function (user) {
		res.json({
			status: 200,
			data: user
		});
	})
});

router.get('/my_applications', middlewares.getUserInfo, function (req, res) {
	console.log('/my_applications');
	var user_id = req.User.id;
	var final_data = [];
	var errata = {};
	var count = 0;
	var amount;
	models.Application.findAll({
		where: {
			user_id: user_id
		}
	}).then(function (applications) {
		applications.forEach(application => {
			models.Institution_details.findAll({
				where: {
					user_id: user_id,
					app_id: application.id
				}
			}).then(function (institutes) {
				var instituteData = [];
				institutes.forEach(institute => {
					var status;
					if (application.tracker == 'apply') {
						if (application.status == 'new') {
							if (application.transcriptRequiredMail) {
								status = "On Hold (Required Transcripts)";
							} else {
								status = "Applied";
							}
						} else if (application.status == 'reject') {
							status = "Rejected";
						}
					} else if (application.tracker == 'done') {
						models.EmailActivityTracker.getEmailData(institute.email, req.User.name, req.User.surname).then(function (emailActivity) {
							if (emailActivity[0].clicks_count > 0) {
								status = "Documents Reviewed"
							} else if (emailActivity[0].opens_count > 0) {
								status = "Mail Checked"
							} else {
								status = emailActivity[0].status
							}
						})
					} else if (application.tracker == 'signed' && institute.type == "Educational credential evaluators WES") {
						status = "sent to WES";
					} else {
						status = application.tracker
					}

					var email;
					if (institute.OtherEmail) {
						email = institute.email + "," + institute.OtherEmail
					} else {
						email = institute.email
					}
					var referenceNo;
					if (institute.type == 'study')
						referenceNo = institute.studyrefno;
					if (institute.type == 'employment')
						referenceNo = institute.emprefno;
					if (institute.type == 'IQAS')
						referenceNo = institute.iqasno;
					if (institute.type == 'CES')
						referenceNo = institute.cesno;
					if (institute.type == 'ICAS')
						referenceNo = institute.icasno;
					if (institute.type == 'visa')
						referenceNo = institute.visarefno;
					if (institute.type == 'MYIEE')
						referenceNo = institute.myieeno;
					if (institute.type == 'ICES')
						referenceNo = institute.icesno;
					if (institute.type == 'NASBA')
						referenceNo = institute.nasbano;
					if (institute.type == 'Educational Perspective')
						referenceNo = institute.eduperno;
					if (institute.type == 'NCEES')
						referenceNo = institute.nceesno;
					if (institute.type == 'NARIC')
						referenceNo = institute.naricno;
					if (institute.type == 'National Committee on Accreditation')
						referenceNo = institute.ncano;
					if (institute.type == 'others')
						referenceNo = institute.otheraccno;
					if (institute.type == 'Educational credential evaluators WES')
						referenceNo = institute.wesno;

					instituteData.push({
						purpose: institute.type,
						email: email,
						reference_no: referenceNo,
						status: status
					});
				})

				if (application.transcriptRequiredMail == true) {
					errata.transcriptErrata = true;
				}

				if (application.notes != null && application.notes != undefined && application.notes != '') {
					if (application.notes.includes('Marksheet incomplete')) {
						errata.marksheetErrata = true;
					}

					if (application.notes.includes('Convocation is not approved')) {
						errata.transcriptErrata = true;
					}

					if (application.notes.includes('Convocation is not uploded')) {
						errata.transcriptErrata = true;
					}

					if (application.notes.includes('you have uploaded degree certificate')) {
						errata.transcriptErrata = true;
					}
				}

				models.UserMarklist_Upload.findAll({
					where: {
						user_id: req.User.id,
						lock_transcript: 1,
						upload_step: {
							[Op.not]: 'changed'
						}
					}
				}).then((usermarklist_uploadData) => {
					usermarklist_uploadData.forEach(marklist => {
						var app_idArr = marklist.app_id.split(',');
						app_idArr.forEach(app_id => {
							if (app_id == application.id) {
								errata.marksheetErrata = true;
							}
						})
					})

					models.User_Transcript.findAll({
						where: {
							user_id: req.User.id,
							lock_transcript: 1,
							upload_step: {
								[Op.not]: 'changed'
							}
						}
					}).then((User_TranscriptData) => {
						User_TranscriptData.forEach(transcript => {
							var app_idArr = transcript.app_id.split(',');
							app_idArr.forEach(app_id => {
								if (app_id == application.id) {
									errata.transcriptErrata = true;
								}
							})
						})

						models.User_Curriculum.findAll({
							where: {
								user_id: req.User.id,
								lock_transcript: 1,
								upload_step: {
									[Op.not]: 'changed'
								}
							}
						}).then((User_Curriculum) => {
							User_Curriculum.forEach(curriculum => {
								var app_idArr = curriculum.app_id.split(',');
								app_idArr.forEach(app_id => {
									if (app_id == application.id) {
										errata.curriculumErrata = true;
									}
								})
							})

							models.GradeToPercentageLetter.findAll({
								where: {
									user_id: req.User.id,
									lock_transcript: 1,
									upload_step: {
										[Op.not]: 'changed'
									}
								}
							}).then((User_Letter) => {
								User_Letter.forEach(letter => {
									var app_idArr = letter.app_id.split(',');
									app_idArr.forEach(app_id => {
										if (app_id == application.id) {
											errata.letterErrata = true;
										}
									})
								})

								final_data.push({
									application_id: application.id,
									instituteData: instituteData,
									application_date: moment(application.created_at).format('DD-MM-YYYY'),
									errata: errata
								})
							})
						})
					})
				})
			})
		})
		setTimeout(() => {
			res.json({
				status: 200,
				data: final_data
			})
		}, 5000)
	})
});

router.post('/upload_document', function (req, res) {
	console.log('/upload_document');
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;

	var dir = constant.FILE_LOCATION + "public/upload/transcript/" + userId;

	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/transcript/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				if (transcript_doc == 'transcripts') {
					models.User_Transcript.find({
						where:
						{
							user_id: userId,
							type: transcript_doc,
						}
					}).then(function (user_exists) {
						if (user_exists) {
							user_exists.update({
								name: transcript_name,
								user_id: userId,
								type: transcript_doc,
								file_name: imageLocationToCallClient,
								lock_transcript: false,
								upload_step: "changed"
							}).then(function (transcript_updated) {
								if (transcript_updated) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							})
						} else {
							models.User_Transcript.create({
								name: transcript_name,
								user_id: userId,
								type: transcript_doc,
								file_name: imageLocationToCallClient,
								lock_transcript: false,
								upload_step: "default"
							}).then(function (userTranscript) {
								if (userTranscript) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}

							});
						}
					})
				} else if (transcript_doc == 'extraDocument') {
					if (req.query.doc_id == null || req.query.doc_id == 'null' || req.query.doc_id == 'undefined' || req.query.doc_id == undefined) {
						models.User_Transcript.findAll({
							where: {
								user_id: userId,
								type: 'extraDocument'

							},
							attributes: [[sequelize.fn('max', sequelize.col('name')), 'name']],
						}).then(function (userTranscript) {

							if (userTranscript[0].name != null) {
								var nameArr = userTranscript[0].name.split(" ");
								var nextNumber = parseInt(nameArr[nameArr.length - 1]) + 1;
								models.User_Transcript.create({
									name: "Extra Document " + nextNumber,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: "default"
								}).then(function (addedNew) {
									if (addedNew) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							} else {
								models.User_Transcript.create({
									name: "Extra Document 1",
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: "default"
								}).then(function (addedNew) {
									if (addedNew) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							}
						})

					} else {
						models.User_Transcript.find({
							where: {
								id: req.query.doc_id
							}
						}).then(function (userTranscript) {
							userTranscript.update({
								file_name: imageLocationToCallClient,
							})
						})
					}
				}
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});

router.get('/checkCart', middlewares.getUserInfo, function (req, res) {
	console.log('/checkCart');
	models.Cart.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (cart) {
		if (cart.length > 0) {
			res.json({
				status: 200
			});
		} else {
			res.json({
				status: 400
			});
		}
	});
})

router.get('/checkapplications', middlewares.getUserInfo, function (req, res) {
	console.log('/checkapplications');
	models.User.find({
		where: {
			email: req.User.email,
			user_type: 'student'
		}
	}).then(function (user) {
		if (user) {
			models.Application.findAll({
				where: {
					user_id: req.User.id
				}
			}).then(function (uca) {
				if (uca) {
					if (uca.length > 0) {
						res.json({
							status: 200
						})
					} else {
						res.json({
							status: 400
						})
					}
				} else {
					res.json({
						status: 400
					})
				}
			})
		} else {
			res.json({
				status: 400
			})
		}
	})
});


router.get('/downloadPaymentReceipt', middlewares.getUserInfo, function (req, res) {
	console.log('/downloadPaymentReceipt');
	var appl_id = req.query.appl_id;
	var user_id = req.User.id;
	var filePath = constant.FILE_LOCATION + "public/upload/transcript/" + user_id + '/' + appl_id + "_Attestation_Payment_Challan.pdf"
	var fee_amount;
	var gst_amount;
	var total_amount;
	try {
		if (fs.existsSync(path)) {
			res.download(filePath);
		} else {
			if (appl_id != "840") {
				models.Orders.find({
					where: {
						user_id: user_id,
						application_id: appl_id
					}
				}).then((orderdata) => {
					models.Transaction.find({
						where: {
							order_id: orderdata.id
						}
					}).then((transactiondata) => {
						self_PDF.online_payment_challan(user_id, appl_id, transactiondata.amount, transactiondata.merchant_param5, transactiondata.created_at, transactiondata.order_status, fee_amount, gst_amount, total_amount, orderdata.id, req.User.email, function (err) {
							if (err) {
								res.send({ status: 400, data: err })
							} else {
								setTimeout(function () {
									res.download(filePath);
								}, 3000);
							}
						});
					})
				})
			} else if (appl_id == "840") {
				models.Transaction.find({
					where: {
						tracking_id: "109865187451"
					}
				}).then((transactiondata) => {
					self_PDF.online_payment_challan(user_id, appl_id, transactiondata.amount, transactiondata.merchant_param5, transactiondata.created_at, transactiondata.order_status, fee_amount, gst_amount, total_amount, transactiondata.order_id, req.User.email, function (err) {
						if (err) {
							res.send({ status: 400, data: err })
						} else {
							setTimeout(function () {
								res.download(filePath);
							}, 3000);
						}
					});
				})
			}
		}
	} catch (err) {
		console.error(err)
	}
})



// NEW Starts
router.get('/getBoard', function (req, res) {
	console.log('/getBoard');
	models.Board_Details.getalldata().then(function (board_data) {
		res.json({
			status: 200,
			data: board_data
		});
	})
})

router.post('/saveBoard', function (req, res) {
	console.log('/saveBoard');
	var view_data = {};
	models.User.find({
		where: {
			id: req.body.user_id
		}
	}).then(function (user) {
		models.Board_Details.find({
			where: {
				id: req.body.board_id
			}
		}).then(function (bd) {
			user.update({
				board_id: req.body.board_id
			}).then(function (updated) {
				if (updated) {
					view_data.ssc_name = bd.sss_name;
					view_data.hsc_name = bd.hsc_name;
					view_data.board_name = bd.board_name;
					res.json({
						status: 200,
						data: view_data
					});
				} else {
					view_data.ssc_name = '';
					view_data.hsc_name = '';
					view_data.board_name = '';
					res.json({
						status: 400,
						data: view_data
					});
				}
			})
		})
	})
});

router.get('/getUserWiseBoard', middlewares.getUserInfo, function (req, res) {
	console.log('/getUserWiseBoard');
	var view_data = {};
	models.User.find({
		where: {
			id: req.User.id
		}
	}).then(function (user) {
		if (user.board_id) {
			models.Board_Details.find({
				where: {
					id: user.board_id
				}
			}).then(function (board_data) {
				view_data.ssc_name = board_data.sss_name;
				view_data.hsc_name = board_data.hsc_name;
				view_data.board_id = board_data.id;
				res.json({
					status: 200,
					data: view_data
				});
			})
		} else {
			res.json({
				status: 400,
				data: view_data
			});
		}
	})
})


router.post('/feedBack', middlewares.getUserInfo, function (req, res) {
	console.log('/feedBack');
	models.Feedback.find({
		where: {
			user_id: req.User.id
		}
	}).then(function (feedbackExists) {
		if (feedbackExists) {
			feedbackExists.update({
				website_satisfy: req.body.satisfy,
				website_recommend: req.body.recommend,
				staff_satisfy: req.body.staff,
				experience_problem: req.body.experience,
				problem: req.body.exp_prob,
				suggestion: req.body.suggestion,
			}).then(function (feedbackRecorded) {
				if (feedbackRecorded) {
					res.json({
						status: 200
					})
				} else {
					res.json({
						status: 400
					})
				}
			})
		} else {
			models.Feedback.create({
				website_satisfy: req.body.satisfy,
				website_recommend: req.body.recommend,
				staff_satisfy: req.body.staff,
				experience_problem: req.body.experience,
				problem: req.body.exp_prob,
				suggestion: req.body.suggestion,
				user_id: req.User.id
			}).then(function (feedbackRecorded) {
				if (feedbackRecorded) {
					res.json({
						status: 200
					})
				} else {
					res.json({
						status: 400
					})
				}
			})
		}
	})
});

// NEW Ends
router.post('/addUserDegree', middlewares.getUserInfo, function (req, res) {
	console.log('/addUserDegree');
	models.Applied_For_Details.find({
		where: {
			user_id: req.User.id,
			app_id: {
				[Op.eq]: null
			}
		}
	}).then(function (appliedForDetails) {
		if (appliedForDetails) {
			appliedForDetails.update({
				applying_for: req.body.degree
			}).then(function (updatedDetails) {
				res.json({
					status: 200,
					message: "updated"
				})
			})
		}
	})
});

router.post('/uploadMarkList', middlewares.getUserInfo, function (req, res) {
	console.log('/uploadMarkList');
	var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.degreeName;
	var user_marklistid = req.query.user_marklistid

	var dir = constant.FILE_LOCATION + "public/upload/marklist/" + userId;

	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/marklist/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.userMarkList.find({
					where:
					{
						id: user_marklistid,
						user_id: userId,
						type: transcript_doc,
					}
				}).then(function (user_exists) {
					if (user_exists) {
						user_exists.update({
							name: transcript_name,
							user_id: userId,
							type: transcript_doc,
							collegeId: req.query.collegeId,
							faculty: req.query.faculty,
							patteren: req.query.patteren,
							file_name: imageLocationToCallClient,
							lock_marklist: false,
							upload_step: "changed"
						}).then(function (userTranscript) {
							if (userTranscript) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: userTranscript
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});
					} else {
						models.userMarkList.create({
							name: transcript_name,
							user_id: userId,
							type: transcript_doc,
							collegeId: req.query.collegeId,
							faculty: req.query.faculty,
							patteren: req.query.patteren,
							file_name: imageLocationToCallClient,
							lock_marklist: false,
							upload_step: "default"
						}).then(function (userTranscript) {
							if (userTranscript) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: userTranscript
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}
						});
					}
				})
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}
	});
});


// router.post('/uploadUserMarkList',middlewares.getUserInfo,function(req,res){
// 	console.log('/uploadUserMarkList');
//     var userId = req.User.id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var education_type = req.query.education_type;
// 	var user_marklistid = req.query.user_marklistid;
// 	var app_id = (req.query.app_id) ? req.query.app_id : null;
// 	var fileStatus= false;
// 	var doc_id = req.query.doc_id;
// 	var filename;
// 	var uploadedFile;
// 	var datademo= [];
// 	var dir = constant.FILE_LOCATION + "public/upload/marklist/" + userId; 
// 	//var dir = constant.FILE_LOCATION + "public\\upload\\marklist\\" + userId; 
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}
// 	const s3 = new AWS.S3({
//         endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
//         accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
//         secretAccessKey: "18407679424bcee60b6ce730eccba499",
//         s3BucketEndpoint: true,
//     });

//     const file = req.files.file
//     const { name, mimetype, size, data } = file
//     const fileContent  = Buffer.from(data, ' ');
//     s3.putObject({
//         Body: fileContent, // The actual file content
//         Bucket: "muattestation",
//         Key: name, // The name of the file,
//     }, function(err, data) {
//         if (err) {
//             res.json({status :500})
//         } else {
// 			uploadedFile = data.ETag
//             s3.listObjectsV2({
//                 Bucket: "muattestation",

//             }, function (err, data) {
//                 if (err) {
//                     res.json({status :500})
//                 } else {
// 					datademo = data.Contents
// 					datademo.forEach(function (de){

// 						if(de.ETag.includes(uploadedFile)){
// 							filename =de.ETag
// 							imageLocationToCallClient = JSON.parse(filename)


// 								if(doc_id != undefined && doc_id != null && doc_id != ''){
// 									models.UserMarklist_Upload.find({
// 										where :{
// 											id : doc_id
// 										}
// 									}).then(function(marksheetUpload){
// 										marksheetUpload.update({
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											upload_step : 'changed'
// 										}).then(function(updatedMarksheetUpload){
// 											if (updatedMarksheetUpload) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : updatedMarksheetUpload
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}
// 										})
// 									})
// 								}else{
// 									if(app_id == null){
// 										models.UserMarklist_Upload.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											user_marklist_id:req.query.user_marklistid,
// 											education_type: education_type,
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											upload_step : "default",
// 										}).then(function (userMarklist) {
// 											if (userMarklist) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : userMarklist
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}else{
// 										models.UserMarklist_Upload.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											user_marklist_id:req.query.user_marklistid,
// 											education_type: education_type,
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											upload_step : "changed",
// 											app_id : app_id
// 										}).then(function (userMarklist) {
// 											if (userMarklist) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : userMarklist
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}
// 								}
// 						}
// 					})
//                     // res.json({status :200,
//                     //     data : data.Contents})
//                 }
//             })
//         }
//     });
// });
router.post('/uploadUserMarkList', middlewares.getUserInfo, async function (req, res) {
	console.log("/uploadUserMarkList");
	console.log("id", req.query.user_id);

})

router.post('/uploadUserMarkList', middlewares.getUserInfo, function (req, res) {
	console.log('/uploadUserMarkList');
	var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var education_type = req.query.education_type;
	var user_marklistid = req.query.user_marklistid;
	var app_id = (req.query.app_id) ? req.query.app_id : null;
	var fileStatus = false;
	var doc_id = req.query.doc_id;
	var ext;
	var dir = constant.FILE_LOCATION + "public/upload/marklist/" + userId;
	//var dir = constant.FILE_LOCATION + "public\\upload\\marklist\\" + userId; 
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/marklist/' + userId);
			//callback(null, constant.FILE_LOCATION+'public\\upload\\marklist\\'+userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
			// if(file.originalname.includes('&')){
			// 	image = file.originalname.split('&').join('_');
			// }else{
			// 	image = file.originalname;
			// }
			// var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			// var flag = false;
			// for(var i = 0; i < format.length;i++){
			// 	if(file.originalname.indexOf(format[i]) > -1){
			// 		flag = true;
			// 		image = file.originalname.split(format[i]).join('_');
			// 	}
			// }
			// if(flag == false){
			// 	image = file.originalname
			// }
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			// if(file.originalname.includes('&')){
			// 	file.originalname = file.originalname.split('&').join('_');
			// }

			// var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
			// var flag = false;
			// for(var i = 0; i < format.length;i++){
			// 	if(file.filename.indexOf(format[i]) > -1){
			// 		flag = true;
			// 		file.filename = file.filename.split(format[i]).join('_');
			// 	}
			// }
			// if(flag == false){
			// 	file.filename = file.filename
			// }

			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, (err, pdfBuffer) => {
				//	fs.readFile(constant.FILE_LOCATION +'public\\upload\\marklist\\' + userId + '\\' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.UserMarklist_Upload.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {
					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != undefined && doc_id != null && doc_id != '') {
							models.UserMarklist_Upload.find({
								where: {
									id: doc_id
								}
							}).then(function (marksheetUpload) {
								marksheetUpload.update({
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: 'changed'
								}).then(function (updatedMarksheetUpload) {
									if (updatedMarksheetUpload) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: updatedMarksheetUpload
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						} else {
							if (app_id == null) {
								models.UserMarklist_Upload.create({
									name: transcript_name,
									user_id: userId,
									user_marklist_id: req.query.user_marklistid,
									education_type: education_type,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: "default",
								}).then(function (userMarklist) {
									if (userMarklist) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: userMarklist
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							} else {
								models.UserMarklist_Upload.create({
									name: transcript_name,
									user_id: userId,
									user_marklist_id: req.query.user_marklistid,
									education_type: education_type,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: "changed",
									app_id: app_id
								}).then(function (userMarklist) {
									if (userMarklist) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: userMarklist
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}
						}

					}
				})
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, function (err) {
					//fs.unlink(constant.FILE_LOCATION + 'public\\upload\\marklist\\' + userId + '\\' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}
	});
});

router.post('/uploadUserMarkListOld', middlewares.getUserInfo, function (req, res) {
	console.log('/uploadUserMarkListOld');
	var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var education_type = req.query.education_type;
	var user_marklistid = req.query.user_marklistid

	var dir = constant.FILE_LOCATION + "public/upload/marklist/" + userId;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/marklist/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			// if(file.originalname.includes('&')){
			// 	file.originalname = file.originalname.split('&').join('_');
			// }
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}
		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.UserMarklist_Upload.find({
					where: {
						id: user_marklistid,
						user_id: userId,
					}
				}).then((datam) => {
					if (datam) {
						datam.update({
							name: transcript_name,
							upload_step: "changed",
							education_type: education_type,
							file_name: imageLocationToCallClient,
							lock_transcript: false
						}).then((updatedmarklist) => {
							if (updatedmarklist) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: userMarklist
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}
						})
					} else {
						models.UserMarklist_Upload.create({
							name: transcript_name,
							user_id: userId,
							user_marklist_id: req.query.user_marklistid,
							education_type: education_type,
							file_name: imageLocationToCallClient,
							lock_transcript: false,
							upload_step: "default"
						}).then(function (userMarklist) {
							if (userMarklist) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: userMarklist
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});
					}

				})

			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}
	});
});


// router.post('/upload_transcript',function(req,res){
// 	console.log('/upload_transcript');
//     var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype; 
// 	var dir = constant.FILE_LOCATION + "public/upload/transcript/" + userId; 
// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id;
// 	var filename;
// 	var datademo =[];
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}
// 	const s3 = new AWS.S3({
//         endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
//         accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
//         secretAccessKey: "18407679424bcee60b6ce730eccba499",
//         s3BucketEndpoint: true,
//     });

//     const file = req.files.file
//     const { name, mimetype, size, data } = file
//     const fileContent  = Buffer.from(data, ' ');
//     s3.putObject({
//         Body: fileContent, // The actual file content
//         Bucket: "muattestation",
//         Key: name,		// The name of the file,



//     }, function(err, data) {
//         if (err) {
//             res.json({status :500})
//         } else {
// 			uploadedFile = data.ETag
//             s3.listObjectsV2({
//                 Bucket: "muattestation",
//             }, function (err, data) {
//                 if (err) {
//                     res.json({status :500})
//                 } else {
//                     // Return the list ("Contents") as JSON
// 					datademo = data.Contents
// 					datademo.forEach(function (de){

// 						if(de.ETag.includes(uploadedFile)){
// 							filename =de.ETag
// 							imageLocationToCallClient = JSON.parse(filename)


//                                 if(doc_id != undefined && doc_id != null && doc_id != ''){
//                                     models.User_Transcript.find({
//                                         where :{
//                                             id : doc_id
//                                         }
//                                     }).then(function(transcriptUpload){
//                                         transcriptUpload.update({
//                                             file_name: imageLocationToCallClient,
//                                             lock_transcript : false,
//                                             upload_step : 'changed'
//                                         }).then(function(updatedtranscriptUpload){
//                                             if (updatedtranscriptUpload) {
//                                                 return res.json({
//                                                     status: 200,
//                                                     message: `Upload Completed.`,
//                                                     data : updatedtranscriptUpload
//                                                 });
//                                             } else {
//                                                 return res.json({
//                                                     status: 400,
//                                                     message: `Error occured in uploading document.`
//                                                 });
//                                             }
//                                         })
//                                     })
//                                 }else{	
//                                     if(app_id == null || app_id == '' || app_id == undefined){				
//                                         models.User_Transcript.create({
//                                             name: transcript_name,
//                                             user_id: userId,
//                                             type: transcript_doc,
//                                             file_name: imageLocationToCallClient, 
//                                             lock_transcript : false,
//                                             collegeId : req.query.clgId
//                                         }).then(function (userTranscript) {
//                                             if (userTranscript) {
//                                                 return res.json({
//                                                     status: 200,
//                                                     message: `Upload Completed.`,
//                                                     data : transcript_doc
//                                                 });
//                                             } else {
//                                                 return res.json({
//                                                     status: 400,
//                                                     message: `Error occured in uploading document.`
//                                                 });
//                                             }

//                                         });
//                                     }else{
//                                         models.User_Transcript.create({
//                                             name: transcript_name,
//                                             user_id: userId,
//                                             type: transcript_doc,
//                                             file_name: imageLocationToCallClient,
//                                             lock_transcript : false,
//                                             collegeId : req.query.clgId,
//                                             upload_step : "changed",
//                                             app_id : app_id
//                                         }).then(function (userTranscript) {
//                                             if (userTranscript) {
//                                                 return res.json({
//                                                     status: 200,
//                                                     message: `Upload Completed.`,
//                                                     data : transcript_doc
//                                                 });
//                                             } else {
//                                                 return res.json({
//                                                     status: 400,
//                                                     message: `Error occured in uploading document.`
//                                                 });
//                                             }

//                                         });
//                                     }
//                                 }
// 						}
// 					})
//                     // res.json({status :200,
//                     //     data : data.Contents})
//                 }
//             })
//         }
//     });


// });

router.post('/upload_transcript', function (req, res) {
	console.log('/upload_transcript');
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/transcript/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	var ext;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/transcript/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);

		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {


				var fileStatus = false;
				models.User_Transcript.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {
					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != undefined && doc_id != null && doc_id != '') {
							models.User_Transcript.find({
								where: {
									id: doc_id
								}
							}).then(function (transcriptUpload) {
								transcriptUpload.update({
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: 'changed'
								}).then(function (updatedtranscriptUpload) {
									if (updatedtranscriptUpload) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: updatedtranscriptUpload
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						} else {
							if (app_id == null || app_id == '' || app_id == undefined) {
								models.User_Transcript.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							} else {
								models.User_Transcript.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId,
									upload_step: "changed",
									app_id: app_id
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}
						}
					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
// router.post('/upload_letterforNameChange',middlewares.getUserInfo,function(req,res){
// 	console.log('/upload_letterforNameChange-------------------',req.User.app_id);
//     var userId = req.User.id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype; 
// 	var dir = constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + userId;

// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id_namechange;
// 	var filename;
// 	var uploadedFile =[];
// 	var datademo =[];
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}

// 		const s3 = new AWS.S3({
// 			endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 			accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 			secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 			s3BucketEndpoint: true,
// 		});

// 		const file = req.files.file
// 		const { name, mimetype, size, data } = file
// 		const fileContent  = Buffer.from(data, ' ');
// 		s3.putObject({
// 			Body: fileContent, // The actual file content
// 			Bucket: "muattestation",
// 			Key: name, // The name of the file,
// 		}, function(err, data) {
// 			if (err) {
// 				res.json({status :500})
// 			} else {
// 				uploadedFile = data.ETag
// 				s3.listObjectsV2({
// 					Bucket: "muattestation",

// 				}, function (err, data) {
// 					if (err) {
// 						res.json({status :500})
// 					} else {
// 						datademo = data.Contents
// 						datademo.forEach(function (de){

// 							if(de.ETag.includes(uploadedFile)){
// 								filename =de.ETag
// 								imageLocationToCallClient = JSON.parse(filename)

// 								models.Letterfor_NameChange.find({
// 									where :{
// 											user_id : userId
// 									}

// 								}).then(function (userTranscript) {

// 									if(userTranscript){
// 										userTranscript.update({
// 											file_name: imageLocationToCallClient,
// 											name  : 'Passport'
// 										})
// 										return res.json({
// 											status: 200,
// 											message: `Upload Completed.`,
// 											data : transcript_doc
// 										});
// 									}

// 									else {
// 										return res.json({
// 											status: 400,
// 											message: `Error occured in uploading document.`
// 										});
// 									}

// 								});

// 							}
// 						})
// 						// res.json({status :200,
// 						//     data : data.Contents})
// 					}
// 				})
// 			}
// 		});
// });

router.post('/upload_letterforNameChange', function (req, res) {
	// console.log('/upload_letterforNameChange-------------------',req.User.app_id);
	var userId = req.query.user_id;
	console.log("id", userId)
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id_namechange;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/NameChangeLetter/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/NameChangeLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {


				var fileStatus = false;
				models.Letterfor_NameChange.findOne({
					where: {
						user_id: userId,
					}
				}).then((datam) => {

					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						console.log('in else');
						models.Letterfor_NameChange.find({
							where: {
								user_id: userId
							}

						}).then(function (userTranscript) {

							if (userTranscript) {
								userTranscript.update({
									file_name: imageLocationToCallClient,
									name: 'Passport'
								})
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: transcript_doc
								});
							}

							else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});


					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/NameChangeLetter/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});

router.post('/WesLetterUrl', middlewares.getUserInfo, function (req, res) {
	console.log('/WesLetterUrl-------------------');
	var userId = req.User.id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/StudentSignature/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id_namechange;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/StudentSignature/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/StudentSignature/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {


				var fileStatus = false;
				models.Wes_Form.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {


					datam.forEach(function (marklistData) {
						if (marklistData) {
							if (marklistData.file_name == imageLocationToCallClient) {
								fileStatus = true;
							}
						}
					})

					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						console.log('in else' + userId);
						models.Wes_Form.findAll({
							where: {
								user_id: userId
							}

						}).then(function (userTranscript) {
							console.log(" imageLocationToCallClient" + imageLocationToCallClient);
							console.log(" imageLocationToCallClient" + image);
							if (userTranscript) {
								console.log("dbchjdsf");
								models.Wes_Form.create({
									file_name: imageLocationToCallClient,
									user_id: userId
								}).then(function (result) {
									console.log("result" + result);
									if (result) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									}
								})
							}

							else {
								console.log("elseeeeeeeeeeeeeeeeeeee");
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});


					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/StudentSignature/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});

// router.post('/upload_CompetencyLetter',function(req,res){
// 	console.log('/upload_CompetencyLetter',req.query.hiddentype);
//     var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype; 
// 	var dir = constant.FILE_LOCATION + "public/upload/CompetencyLetter/" + userId; 
// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id;
// 	var filename;
// 	var filePath;
// 	var uploadedFile = [];
// 	var datademo = [];
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}

// 		const s3 = new AWS.S3({
// 			endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 			accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 			secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 			s3BucketEndpoint: true,
// 		});

// 		const file = req.files.file
// 		const { name, mimetype, size, data } = file
// 		const fileContent  = Buffer.from(data, ' ');
// 		s3.putObject({
// 			Body: fileContent, // The actual file content
// 			Bucket: "muattestation",
// 			Key: name, // The name of the file,
// 		}, function(err, data) {
// 			if (err) {
// 				res.json({status :500})
// 			} else {
// 				uploadedFile = data.ETag
// 				s3.listObjectsV2({
// 					Bucket: "muattestation",

// 				}, function (err, data) {
// 					if (err) {
// 						res.json({status :500})
// 					} else {
// 						datademo = data.Contents
// 						datademo.forEach(function (de){

// 							if(de.ETag.includes(uploadedFile)){
// 								filename =de.ETag
// 								imageLocationToCallClient = JSON.parse(filename)

// 								if(doc_id != undefined && doc_id != null && doc_id != ''){
// 									models.competency_letter.find({
// 										where :{
// 											id : doc_id
// 										}
// 									}).then(function(transcriptUpload){
// 										transcriptUpload.update({
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											upload_step : 'changed'
// 										}).then(function(updatedtranscriptUpload){
// 											if (updatedtranscriptUpload) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : updatedtranscriptUpload
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}
// 										})
// 									})
// 								}else{	
// 									if(app_id == null || app_id == '' || app_id == undefined){				
// 										models.competency_letter.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											type: transcript_doc,
// 											file_name: imageLocationToCallClient, 
// 											lock_transcript : false,
// 											collegeId : req.query.clgId
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}else{
// 										models.competency_letter.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											type: transcript_doc,
// 											file_name: imageLocationToCallClient,
// 											lock_transcript : false,
// 											collegeId : req.query.clgId,
// 											upload_step : "changed",
// 											app_id : app_id
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});
// 									}
// 								}

// 							}
// 						})
// 						// res.json({status :200,
// 						//     data : data.Contents})
// 					}
// 				})
// 			}
// 		});
// });
router.post('/upload_CompetencyLetter', function (req, res) {
	console.log('/upload_CompetencyLetter', req.query.hiddentype);
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/CompetencyLetter/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/CompetencyLetter/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/CompetencyLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				// models.User_Transcript.find({
				// 	where:
				// 	{
				// 		user_id: userId,
				// 		type: transcript_doc,
				// 		collegeId : req.query.clgId
				// 	}
				// }).then(function(user_exists){
				// 	if(user_exists){
				// 		user_exists.update({
				// 			name: transcript_name,
				// 			user_id: userId,
				// 			type: transcript_doc,
				// 			file_name: imageLocationToCallClient,
				// 			lock_transcript : false,
				// 			collegeId : req.query.clgId
				// 		}).then(function(transcript_updated){
				// 			if(transcript_updated){
				// 				return res.json({
				// 					status: 200,
				// 					message: `Upload Completed.`,
				// 					data : transcript_doc
				// 				});
				// 			}else{
				// 				return res.json({
				// 					status: 400,
				// 					message: `Error occured in uploading document.`
				// 				});
				// 			}
				// 		})
				// 	}else{

				var fileStatus = false;
				models.competency_letter.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {
					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != undefined && doc_id != null && doc_id != '') {
							models.competency_letter.find({
								where: {
									id: doc_id
								}
							}).then(function (transcriptUpload) {
								transcriptUpload.update({
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: 'changed'
								}).then(function (updatedtranscriptUpload) {
									if (updatedtranscriptUpload) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: updatedtranscriptUpload
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						} else {
							if (app_id == null || app_id == '' || app_id == undefined) {
								models.competency_letter.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							} else {
								models.competency_letter.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId,
									upload_step: "changed",
									app_id: app_id
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}
						}
					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/CompetencyLetter/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});
// router.post('/Upload_PaymentIssueUrl',middlewares.getUserInfo,function(req,res){
// 	console.log('/Upload_PaymentIssueUrl');
//     var userId = req.query.user_id;
// 	var image;
// 	var transcript_name = req.query.transcript_name;
// 	var transcript_doc = req.query.hiddentype; 
// 	var dir = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId; 
// 	var doc_id = req.query.doc_id;
// 	var app_id = req.query.app_id;
// 	if (!fs.existsSync(dir)) {
// 		fs.mkdirSync(dir);
// 	}
//   	var storage = multer.diskStorage({
// 		destination: function(req, file, callback) {
// 			callback(null, constant.FILE_LOCATION+'public/upload/Payment_Acknowledgement/'+userId);
// 		},
// 		filename: function(req, file, callback) {
// 			callback(null, file.originalname);
// 			// if(file.originalname.includes('&')){
// 			// 	image = file.originalname.split('&').join('_');
// 			// }else{
// 			// 	image = file.originalname;
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					image = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				image = file.originalname
// 			}
// 		}
// 	});

// 	var upload = multer({
// 		storage: storage,
// 		fileFilter: function (req, file, callback) {
// 			// if(file.originalname.includes('&')){
// 			// 	file.originalname = file.originalname.split('&').join('_');
// 			// }

// 			var format = "`!@#$%^&*()+-=[]{};':\"|,<>/?~"
// 			var flag = false;
// 			for(var i = 0; i < format.length;i++){
// 				if(file.originalname.indexOf(format[i]) > -1){
// 					flag = true;
// 					file.originalname = file.originalname.split(format[i]).join('_');
// 				}
// 			}
// 			if(flag == false){
// 				file.originalname = file.originalname
// 			}

// 			ext = path.extname(file.originalname)
// 			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
// 				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
// 			}
// 			callback(null, true)
// 		}
// 	}).single('file');
// 	upload(req, res, function (err, data) {
// 		imageLocationToCallClient = image;
// 		fileName = imageLocationToCallClient
// 		if (ext == '.pdf') {
// 			fs.readFile(constant.FILE_LOCATION +'public/upload/Payment_Acknowledgement/' + userId + '/' + image, (err, pdfBuffer) => {
// 				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
// 					if (err) {
// 						uploadValue = false;
// 						ValueUpdateData(uploadValue);
// 					} else if (!item) {
// 						uploadValue = true;
// 						ValueUpdateData(uploadValue);
// 					} else if (item.text) {}
// 				});
// 			});
// 		} else {
// 			uploadValue = true;
// 			ValueUpdateData(uploadValue);
// 		}
// 		function ValueUpdateData(uploadValue) {
// 			if (uploadValue == true) {		
// 						var fileStatus = false;
// 						models.paymenterror_details.findAll({
// 							where :{
// 								user_id: userId,
// 							}
// 						}).then((datam)=>{
// 							if(datam.length > 0){
// 								datam.forEach(function(marklistData){
// 									if(marklistData){
// 										if(marklistData.file_name == imageLocationToCallClient){
// 											fileStatus=true;
// 										}
// 									}
// 								})
// 							}
// 							if(fileStatus==true){
// 								res.json({
// 									status: 200,
// 									message: `File already exist. please upload another file!!!..`,
// 								})
// 							}else{
// 								if(datam != undefined && datam != null && datam != ''){
// 									models.paymenterror_details.find({
// 										where :{
// 											user_id : userId
// 										}
// 									}).then(function(transcriptUpload){
// 										transcriptUpload.update({
// 											file_name: imageLocationToCallClient,
// 											// lock_transcript : false,
// 											// upload_step : 'changed'
// 										}).then(function(updatedtranscriptUpload){
// 											if (updatedtranscriptUpload) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : updatedtranscriptUpload
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}
// 										})
// 									})
// 								}else{	

// 										models.paymenterror_details.create({
// 											name: transcript_name,
// 											user_id: userId,
// 											// type: transcript_doc,
// 											file_name: imageLocationToCallClient,
// 											// lock_transcript : false,
// 											// collegeId : req.query.clgId,
// 											// upload_step : "changed",
// 											// app_id : app_id
// 										}).then(function (userTranscript) {
// 											if (userTranscript) {
// 												return res.json({
// 													status: 200,
// 													message: `Upload Completed.`,
// 													data : transcript_doc
// 												});
// 											} else {
// 												return res.json({
// 													status: 400,
// 													message: `Error occured in uploading document.`
// 												});
// 											}

// 										});

// 								}
// 							}
// 						})
// 				// 	}
// 				// })
// 			} else if (uploadValue == false) {
// 				fs.unlink(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId + '/' + image, function (err) {
// 					if (err) {
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});
// 					} else {
// 						return res.json({
// 							status: 401,
// 							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
// 						});
// 					}
// 				});
// 			}

// 		}

// 	});
// });

router.post('/Upload_PaymentIssueUrl', middlewares.getUserInfo, function (req, res) {
	console.log('/Upload_PaymentIssueUrl');
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		fileName = imageLocationToCallClient
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}
		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				var fileStatus = false;
				models.paymenterror_details.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {
					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (datam != undefined && datam != null && datam != '') {
							models.paymenterror_details.find({
								where: {
									user_id: userId
								}
							}).then(function (transcriptUpload) {
								transcriptUpload.update({
									file_name: imageLocationToCallClient,
									// lock_transcript : false,
									// upload_step : 'changed'
								}).then(function (updatedtranscriptUpload) {
									if (updatedtranscriptUpload) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: updatedtranscriptUpload
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						} else {

							models.paymenterror_details.create({
								name: transcript_name,
								user_id: userId,
								// type: transcript_doc,
								file_name: imageLocationToCallClient,
								// lock_transcript : false,
								// collegeId : req.query.clgId,
								// upload_step : "changed",
								// app_id : app_id
							}).then(function (userTranscript) {
								if (userTranscript) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}

							});

						}
					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/Payment_Acknowledgement/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}

	});
});
router.get('/getUploadUserMarklist', middlewares.getUserInfo, function (req, res) {
	console.log('/getUploadUserMarklist');
	var view_data = {
		annual_bachelors_firstYear: [],
		annual_bachelors_secondYear: [],
		annual_bachelors_thirdYear: [],
		annual_bachelors_fourthYear: [],
		annual_bachelors_fifthYear: [],

		annual_masters_firstYear: [],
		annual_masters_secondYear: [],
		annual_masters_thirdYear: [],
		annual_masters_fourthYear: [],
		annual_masters_fifthYear: [],

		annual_phd_firstYear: [],
		annual_phd_secondYear: [],
		annual_phd_thirdYear: [],
		annual_phd_fourthYear: [],
		annual_phd_fifthYear: [],

		annual_bachelors_semesterFirst: [],
		annual_bachelors_semesterSecond: [],
		annual_bachelors_semesterThird: [],
		annual_bachelors_semesterFourth: [],
		annual_bachelors_semesterFifth: [],
		annual_bachelors_semesterSixth: [],
		annual_bachelors_semesterSeventh: [],
		annual_bachelors_semesterEight: [],
		annual_bachelors_semesterNine: [],
		annual_bachelors_semesterTen: [],

		annual_masters_semesterFirst: [],
		annual_masters_semesterSecond: [],
		annual_masters_semesterThird: [],
		annual_masters_semesterFourth: [],
		annual_masters_semesterFifth: [],
		annual_masters_semesterSixth: [],
		annual_masters_semesterSeventh: [],
		annual_masters_semesterEight: [],
		annual_masters_semesterNine: [],
		annual_masters_semesterTen: [],

		annual_phd_semesterFirst: [],
		annual_phd_semesterSecond: [],
		annual_phd_semesterThird: [],
		annual_phd_semesterFourth: [],
		annual_phd_semesterFifth: [],
		annual_phd_semesterSixth: [],
		annual_phd_semesterSeventh: [],
		annual_phd_semesterEight: [],
		annual_phd_semesterNine: [],
		annual_phd_semesterTen: [],
	}
	var view_data2 = {
		education: []
	};
	var outercounter = 0;

	models.User.find({
		where: {
			id: req.User.id
		}
	}).then(function (users) {
		if (users) {
			var education = users.applying_for;
			var education1 = education.split(',')
			var finalEducation = education1[0]
			view_data2.education.push({
				education: finalEducation
			});
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id
				}
			}).then(function (marklist) {
				if (marklist.length > 0) {
					marklist.forEach(function (markAllList) {
						if (markAllList.patteren == "Annual" && markAllList.type == "Bachelors" && markAllList.name == "First Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: 'First Year',
									type: 'Bachelors',
									patteren: 'Annual'
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {


											view_data.annual_bachelors_firstYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										})
									});

								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Bachelors" && markAllList.name == "Second Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Second Year",
									type: "Bachelors",
									patteren: "Annual"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_secondYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Bachelors" && markAllList.name == "Third Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Third Year",
									type: "Bachelors",
									patteren: "Annual"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_thirdYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Bachelors" && markAllList.name == "Fourth Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fourth Year",
									type: "Bachelors",
									patteren: "Annual"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_fourthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Bachelors" && markAllList.name == "Fifth Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fifth Year",
									type: "Bachelors",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_fifthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Masters" && markAllList.name == "First Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "First Year",
									type: "Masters",
									patteren: "Annual"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_firstYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Masters" && markAllList.name == "Second Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Second Year",
									type: "Masters",
									patteren: "Annual"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_secondYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Masters" && markAllList.name == "Third Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Third Year",
									type: "Masters",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_thirdYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Masters" && markAllList.name == "Fourth Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fourth Year",
									type: "Masters",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_fourthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "Masters" && markAllList.name == "Fifth Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fifth Year",
									type: "Masters",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_fifthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "PhD" && markAllList.name == "First Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "First Year",
									type: "PhD",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_firstYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "PhD" && markAllList.name == "Second Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Second Year",
									type: "PhD",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_secondYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "PhD" && markAllList.name == "Third Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Third Year",
									type: "PhD",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_thirdYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "PhD" && markAllList.name == "Fourt Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fourth Year",
									type: "PhD",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_fourthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Annual" && markAllList.type == "PhD" && markAllList.name == "Fifth Year") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Fifth Year",
									type: "PhD",
									patteren: "Annual"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_fifthYear.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 1") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 1",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterFirst.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 2") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 2",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterSecond.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 3") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 3",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterThird.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 4") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 4",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterFourth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 5") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 5",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterFifth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 6") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 6",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterSixth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 7") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 7",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterSeventh.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 8") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 8",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterEight.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 9") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 9",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterNine.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Bachelors" && markAllList.name == "Semester 10") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 10",
									type: "Bachelors",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_bachelors_semesterTen.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 1") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 1",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterFirst.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 2") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 2",
									type: "Masters",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterSecond.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 3") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 3",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterThird.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 4") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 4",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterFourth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 5") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 5",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterFifth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 6") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 6",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterSixth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 7") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 7",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterSeventh.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 8") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 8",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterEight.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 9") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 9",
									type: "Masters",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterNine.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "Masters" && markAllList.name == "Semester 10") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 10",
									type: "Masters",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_masters_semesterTen.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 1") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 1",
									type: "PhD",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterFirst.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year
											});
										});
									});
								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 2") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 2",
									type: "PhD",
									patteren: "Semester"
								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterSecond.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 3") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 3",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterThird.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 4") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 4",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterFourth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 5") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 5",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterFifth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 6") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 6",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterSixth.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 7") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 7",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterSeventh.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 8") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 8",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterEight.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 9") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 9",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterNine.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						} else if (markAllList.patteren == "Semester" && markAllList.type == "PhD" && markAllList.name == "Semester 10") {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									name: "Semester 10",
									type: "PhD",
									patteren: "Semester"

								}
							}).then(function (marklistData) {
								marklistData.forEach(function (allBachmarklistData) {
									models.College.find({
										where: {
											id: allBachmarklistData.collegeId
										}
									}).then(function (collegeData) {
										models.facultymaster.find({
											where: {
												faculty: allBachmarklistData.faculty
											}
										}).then(function (facultyYearData) {
											view_data.annual_phd_semesterTen.push({
												patterenName: allBachmarklistData.name,
												patteren: allBachmarklistData.patteren,
												faculty: allBachmarklistData.faculty,
												file_name: allBachmarklistData.file_name,
												type: allBachmarklistData.type,
												lock_marklist: allBachmarklistData.lock_marklist,
												college_name: collegeData.name,
												collegeId: allBachmarklistData.collegeId,
												facultyYear: facultyYearData.year

											});
										});
									});

								});
							})
						}

						outercounter++;

					})
					setTimeout(function () {
						if (marklist.length == outercounter) {

							return res.json({
								message: 'Successfully  data !',
								status: 200,
								data: view_data,
								data1: view_data2
							});
						}

					}, 6000)

				} else {
					res.json({
						status: 400,
						message: 'Bad Request'
					});
				}

			})
		}

	})

});

router.post('/reUpload_transcript', function (req, res) {
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var dir = constant.FILE_LOCATION + "public/upload/transcript/" + userId;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/transcript/' + userId);
		},
		filename: function (req, file, callback) {
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				models.User_Transcript.find({
					where:
					{
						id: req.query.id,
						// user_id: userId,
						// type: 'transcripts',
						// collegeId : req.query.clgId
					}
				}).then(function (user_exists) {
					if (user_exists) {
						user_exists.update({
							//name: transcript_name,
							user_id: userId,
							//type: 'transcripts',
							file_name: imageLocationToCallClient,
							lock_transcript: false,
							collegeId: req.query.clgId
						}).then(function (transcript_updated) {
							if (transcript_updated) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: transcript_doc
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}
						})
					} else {
						models.User_Transcript.create({
							name: transcript_name,
							user_id: userId,
							type: 'transcripts',
							file_name: imageLocationToCallClient,
							lock_transcript: false,
							collegeId: req.query.clgId
						}).then(function (userTranscript) {
							if (userTranscript) {
								return res.json({
									status: 200,
									message: `Upload Completed.`,
									data: transcript_doc
								});
							} else {
								return res.json({
									status: 400,
									message: `Error occured in uploading document.`
								});
							}

						});
					}
				})
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/transcript/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});




router.post('/language', (req, res) => {
	models.InstructionalDetails.update(
		{ instruction_medium: req.body.language },
		{
			where:
				{ userId: req.body.userId }
		}).then((err, updated) => {
			if (err) {
				console.error(err);
			}
			res.json({
				status: 200,
				data: 'saved!!!'
			})

		})
})


router.get('/viewFileYearWise', middlewares.getUserInfo, function (req, res) {
	var view_data = [];
	models.userMarkList.findAll({
		where: {
			user_id: req.User.id,
			name: req.query.year,
			patteren: req.query.pattern,
			type: req.query.education


		}
	}).then(function (users) {
		if (users) {
			users.forEach(function (userData) {
				models.College.find({
					where: {
						id: userData.collegeId
					}
				}).then(function (collegeData) {

					view_data.push({
						patternName: userData.name,
						pattern: userData.patteren,
						faculty: userData.faculty,
						file_name: userData.file_name,
						type: userData.type,
						lock_marklist: userData.lock_marklist,
						college_name: collegeData.name,
						marklistId: userData.id

					})
				});


			});
			setTimeout(function () {
				res.json({
					status: 200,
					data: view_data
				})

			}, 500)

		} else {
			res.json({
				status: 400
			})
		}



	});
})

router.get('/getMarklistLetter', function (req, res) {
	var data = {};
	var file_id = req.query.id;
	models.userMarkList.find({
		where: {
			id: file_id
		}
	}).then(function (userMarkList) {
		if (userMarkList) {
			var fileName = userMarkList.file_name;
			var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
			var file = constant.FILE_LOCATION + 'public/upload/marklist/' + userMarkList.user_id + '/' + userMarkList.file_name;
			var file1 = constant.BASE_URL + '/upload/marklist/' + userMarkList.user_id + '/' + userMarkList.file_name;

			var fileName = userMarkList.file_name;
			if (!fs.existsSync(file)) {
				res.json({
					status: 400
				})
			} else {
				data.file = fileName;
				data.filePath = file1;
				data.fileExtension = fileExtension;
				data.userId = req.User.id;
				res.json({
					status: 200,
					data: data
				})
			}
			//})
		}
	})
});


router.get('/getCurriculum', middlewares.getUserInfo, function (req, res) {
	var data = {};
	var file_id = req.query.id;
	models.User_Curriculum.find({
		where: {
			file_name: file_id
		}
	}).then(function (userMarkList) {
		if (userMarkList) {
			var fileName = userMarkList.file_name;
			var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
			var file = constant.FILE_LOCATION + 'public/upload/curriculum/' + userMarkList.user_id + '/' + userMarkList.file_name;
			var file1 = constant.BASE_URL + '/upload/curriculum/' + userMarkList.user_id + '/' + userMarkList.file_name;
			var fileName = userMarkList.file_name;

			if (!fs.existsSync(file)) {
				res.json({
					status: 400
				})
			} else {
				data.file = fileName;
				data.filePath = file1;
				data.fileExtension = fileExtension;
				data.userId = req.User.id;
				res.json({
					status: 200,
					data: data
				})
			}
			//})
		}
	})
});
router.delete('/deleteUploadFile', middlewares.getUserInfo, function (req, res) {
	var userId = req.User.id;
	models.userMarkList.find({
		where: {
			user_id: req.User.id
		}

	}).then(function (users) {
		if (users) {
			models.userMarkList.find({
				where: {
					id: req.query.id
				}

			}).then(function (file) {
				if (file) {
					var path = constant.FILE_LOCATION + "public/upload/marklist/" + userId + "/" + file.file_name;
					require('fs').unlink(path, function (err) {
						file.destroy().then(function (userMarklistDelete) {
							res.json({
								status: 200,
								data: userMarklistDelete,
								message: 'File successfully deleted!...'
							})

						});
					});
				} else {
					res.json({
						status: 400,
						message: 'File not  Deleted!!..'
					});
				}
			})
		}
	})
});

router.get('/downloadMarkshhet', function (req, res) {
	var file_name = req.query.file_name;
	var userId = req.User.id;
	const downloadData = constant.FILE_LOCATION + "public/upload/marklist/" + userId + "/" + file_name;
	res.download(downloadData);
});

router.put('/updateLoginCount', function (req, res) {
	models.User.find({
		where: {
			id: req.body.user_id
		}
	}).then(function (user) {
		user.update({
			login_count: 1
		})

		res.json({
			status: 200,
			data: user
		});

	})
})

router.get('/changeCollegeWithDeleteMarklist', middlewares.getUserInfo, function (req, res) {
	var userId = req.User.id;
	var view_data = [];
	models.userMarkList.findAll({
		where: {
			user_id: req.User.id,
			name: req.query.year,
			patteren: req.query.pattern,
			type: req.query.education
		}
	}).then(function (userMarklist) {
		if (userMarklist) {
			userMarklist.forEach(function (userMarklistData) {
				var path = constant.FILE_LOCATION + "public/upload/marklist/" + userId + "/" + userMarklistData.file_name;
				require('fs').unlink(path, function (err) {
					models.userMarkList.find({
						where: {
							file_name: userMarklistData.file_name,
							user_id: req.User.id,
							name: req.query.year,
							patteren: req.query.pattern,
							type: req.query.education
						}
					}).then(function (fileData) {
						fileData.destroy().then(function (deleteMarklist) {
							if (deleteMarklist) {
								view_data.push({
									file: deleteMarklist
								})


							}
						})
					});
				})

			});
			res.json({
				status: 200,
				message: "Marklist deleted Successfull"
			});
		} else {
			res.json({
				status: 400,
				message: "Marklist not delete"
			});
		}
	})
});

router.post('/instructionalDetails', middlewares.getUserInfo, (req, res) => {
	models.User.update(
		{ instructionalField: req.body.instructionalDetails },
		{
			where:
				{ id: req.User.id }
		}
	).then(updated => {
		const valueUpdated = updated;
		res.status(200).json({
			message: valueUpdated
		})
	})
})

router.post('/educationalDetails', middlewares.getUserInfo, (req, res) => {
	console.log("/educationalDetails");
	// models.User.update(
	// 	{educationalDetails:req.body.educationalDetails},
	// 	{where:
	// 		{id:req.User.id}
	// 	}
	// ).then(updated=>{
	// 	const valueUpdated = updated;
	// 	res.status(200).json({
	// 		message : valueUpdated
	// 	})
	// })	
	if (req.body.applied_for == "PrevData") {
		models.userMarkList.updatePrevData(req.User.id, req.body.educationalDetailsValues).then(function (updated) {
			res.json({
				status: 200,
				message: "updated"
			})
		})
	} else {
		models.Applied_For_Details.find({
			where: {
				user_id: req.User.id,
				app_id: {
					[Op.eq]: null
				}
			}
		}).then(function (appliedForDetails) {
			if (req.body.applied_for == "educationalDetails") {
				if (appliedForDetails) {
					appliedForDetails.update({
						educationalDetails: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						educationalDetails: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "instructionalDetails") {
				if (appliedForDetails) {
					appliedForDetails.update({
						instructionalField: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						instructionalField: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "curriculumDetails") {
				if (appliedForDetails) {
					appliedForDetails.update({
						curriculum: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						curriculum: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "gradToPer") {
				if (appliedForDetails) {
					appliedForDetails.update({
						gradToPer: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						gradToPer: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "affiliation") {
				if (appliedForDetails) {
					appliedForDetails.update({
						affiliation: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						affiliation: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "CompetencyLetter") {
				if (appliedForDetails) {
					appliedForDetails.update({
						CompetencyLetter: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						CompetencyLetter: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			} else if (req.body.applied_for == "LetterforNameChange") {
				if (appliedForDetails) {
					appliedForDetails.update({
						LetterforNameChange: req.body.educationalDetailsValues
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "updated"
						})
					})
				} else {
					models.Applied_For_Details.create({
						LetterforNameChange: req.body.educationalDetailsValues,
						user_id: req.User.id
					}).then(function (updatedDetails) {
						res.json({
							status: 200,
							message: "added"
						})
					})
				}
			}
		})
	}


})


router.post('/curriculumDetails', middlewares.getUserInfo, (req, res) => {
	models.Applied_For_Details.update(
		{ curriculum: req.body.curriculumDetails },
		{
			where:
				{ user_id: req.User.id }
		}
	).then(updated => {
		const valueUpdated = updated;
		res.status(200).json({
			message: valueUpdated
		})
	})
})


router.post('/instructionalUserDetails', middlewares.getUserInfo, async (req, res) => {
	console.log('/instructionalUserDetails');
	models.InstructionalDetails.find({
		where: {
			id: req.body.idCtrl
		}
	}).then(user => {
		if (!user) {
			models.InstructionalDetails.create({
				userId: req.User.id,
				studentName: req.body.nameCtrl,
				courseName: req.body.courseCtrl,
				collegeName: req.body.collegeCtrl,
				specialization: req.body.specializationCtrl,
				duration: req.body.durationCtrl,
				yearofpassing: req.body.passingCtrl,
				division: req.body.divisionCtrl,
				academicYear: req.body.acadYearCtrl,
				education: req.body.education
			}).then((userCreated) => {
				if (userCreated) {
					res.status(200).json({
						message: 'data saved successfully!!!'
					})
				}

			})

		} else {
			user.update({
				studentName: req.body.nameCtrl,
				courseName: req.body.courseCtrl,
				collegeName: req.body.collegeCtrl,
				specialization: req.body.specializationCtrl,
				duration: req.body.durationCtrl,
				yearofpassing: req.body.passingCtrl,
				division: req.body.divisionCtrl,
				academicYear: req.body.acadYearCtrl
			}).then(userUpdated => {
				res.status(200).json({
					message: 'data saved successfully!!!'
				})
			})

		}

	})
})

router.post('/affiliationUserDetails', middlewares.getUserInfo, async (req, res) => {
	console.log('/affiliationUserDetails');
	models.Affiliation_Letter.find({
		where: {
			id: req.body.idCtrl
		}
	}).then(user => {
		if (!user) {
			models.Affiliation_Letter.create({
				user_id: req.User.id,
				studentName: req.body.nameCtrl,
				courseName: req.body.courseCtrl,
				collegeName: req.body.collegeCtrl,
				specialization: req.body.specializationCtrl,
				duration: req.body.durationCtrl,
				yearofpassing: req.body.passingCtrl,
				division: req.body.divisionCtrl,
				academicYear: req.body.acadYearCtrl,
				education: req.body.education
			}).then((userCreated) => {
				if (userCreated) {
					res.status(200).json({
						message: 'data saved successfully!!!'
					})
				}

			})

		} else {
			user.update({
				studentName: req.body.nameCtrl,
				courseName: req.body.courseCtrl,
				collegeName: req.body.collegeCtrl,
				specialization: req.body.specializationCtrl,
				duration: req.body.durationCtrl,
				yearofpassing: req.body.passingCtrl,
				division: req.body.divisionCtrl,
				academicYear: req.body.acadYearCtrl
			}).then(userUpdated => {
				res.status(200).json({
					message: 'data saved successfully!!!'
				})
			})

		}

	})
})
// router.post('/saveLetterNameChangeData',(req,res)=>{
// 	console.log("data:",req.body.data);
// 	console.log('/saveLetterNameChangeData', req.body.data.lastNamePassportCtrl);

// 	var userId=req.body.user_id;
// 	console.log("id",userId);
// 	models.Letterfor_NameChange.find({
// 		where:{
// 			user_id: userId
// 		}
// 	}).then(user =>{
// 		if(!user){
// 			models.Letterfor_NameChange.create({
// 				user_id:userId,
// 				firstnameaspermarksheet:req.body.data.firstNameMarksheetCtrl,
// 				fathersnameaspermarksheet:req.body.data.fatherNameMarksheetCtrl,
// 				mothersnameaspermarksheet:req.body.data.motherNameMarksheetCtrl,
// 				lastnameaspermarksheet:req.body.data.lastNameMarksheetCtrl,
// 				firstnameasperpassport:req.body.data.firstNamePassportCtrl	,
// 				fathersnameasperpassport:req.body.data.fatherNamePassportCtrl,
// 				lastnameasperpassport:req.body.data.lastNamePassportCtrl,
// 				//  file_name :'test',
// 				type: 'Passport'
// 			}).then((userCreated)=>{
// 				if(userCreated){
// 					res.json({
// 						status : 200,
// 						message:'data saved successfully!!!'
// 					})
// 				}else{
// 					status : 400
// 				}

// 			})

// 		}else{
// 			user.update({
// 				firstnameaspermarksheet:req.body.data.firstNameMarksheetCtrl,
// 				fathersnameaspermarksheet:req.body.data.fatherNameMarksheetCtrl,
// 				mothersnameaspermarksheet:req.body.data.motherNameMarksheetCtrl,
// 				lastnameaspermarksheet:req.body.data.lastNameMarksheetCtrl,
// 				firstnameasperpassport:req.body.data.firstNamePassportCtrl,
// 				fathersnameasperpassport:req.body.data.fatherNamePassportCtrl,
// 				lastnameasperpassport:req.body.data.lastNamePassportCtrl,
// 				// file_name :,
// 				type: 'Passport'
// 			}).then(userUpdated =>{
// 				if(userUpdated){
// console.log("aaaaaaaaaaaaaa");
// 				}
// 				res.json({
// 					status : 200,
// 					message:'data saved successfully!!!'
// 				})
// 			})

// 		}

// 	})
// })
router.post('/saveLetterNameChangeData', async (req, res) => {
	console.log("/saveLetterNameChangeData");
	try {
		const userId = req.body.user_id;

		const user = await models.Letterfor_NameChange.findOne({
			where: {
				user_id: userId
			}
		});

		if (user) {
			await user.update({
				firstnameaspermarksheet: req.body.data.firstNameMarksheetCtrl,
				fathersnameaspermarksheet: req.body.data.fatherNameMarksheetCtrl,
				mothersnameaspermarksheet: req.body.data.motherNameMarksheetCtrl,
				lastnameaspermarksheet: req.body.data.lastNameMarksheetCtrl,
				firstnameasperpassport: req.body.data.firstNamePassportCtrl,
				fathersnameasperpassport: req.body.data.fatherNamePassportCtrl,
				lastnameasperpassport: req.body.data.lastNamePassportCtrl,
				type: 'Passport'
			});

			res.json({
				status: 200,
				message: 'Data saved successfully!!!'
			});

		} else {
			const userCreated = await models.Letterfor_NameChange.create({
				user_id: userId,
				firstnameaspermarksheet: req.body.data.firstNameMarksheetCtrl,
				fathersnameaspermarksheet: req.body.data.fatherNameMarksheetCtrl,
				mothersnameaspermarksheet: req.body.data.motherNameMarksheetCtrl,
				lastnameaspermarksheet: req.body.data.lastNameMarksheetCtrl,
				firstnameasperpassport: req.body.data.firstNamePassportCtrl,
				fathersnameasperpassport: req.body.data.fatherNamePassportCtrl,
				lastnameasperpassport: req.body.data.lastNamePassportCtrl,
				type: 'Passport'
			});

			if (userCreated) {
				res.json({
					status: 200,
					message: 'Data saved successfully!!!'
				});
			} else {
				res.status(400);
			}
		}
	} catch (error) {
		console.error("Error:", error);
		res.status(500).json({
			error: 'Internal server error'
		});
	}
});


// router.get('/getNameChangeData',middlewares.getUserInfo,async (req,res)=>{
// 	console.log('/getNameChangeData', req.User.id);
// 	var userId=req.User.id
// 	var filename_data = [];
// 	var letterforNameChange_upload= [];
// 	var filePath;
// 	var filename;
// 	const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});
// 	s3.listObjectsV2({
// 		Bucket: "muattestation",
// 	}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			letterforNameChange_upload = data.Contents
// 			// res.json({status :200,
//         //     data : data.Contents})
// 	models.Letterfor_NameChange.find({
// 		where:{
// 			user_id:userId
// 		}
// 	}).then(user =>{
// 		console.log("user === > "+ user.file_name);
// 		letterforNameChange_upload.forEach(function (data){
//             if(data.ETag.includes(user.file_name)){
//                     filename = JSON.parse(data.ETag);
//                     filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
//                     // console.log("filePath of filePath"+ filePath);									
//             }else if(user.file_name.includes('.')){
//              filename= (user) ? constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null,
//              filePath= (user) ? constant.BASE_URL + "/upload/NameChangeLetter/" + req.User.id + "/" + user.file_name : null												
//          }
//         })
// 		filename_data.push({	
// 			filePath: filePath,
// 			filename: filename,
// 		})
// 		if(user){
// 			console.log("filename_data "+  JSON.stringify(filename_data));
// 			res.json({
// 				status : 200,
// 				data :  user,
// 				filename : filename_data
// 			})
// 		}else {
// 			res.json({
// 				status : 400,
// 			})
// 		}


// 	})
// }
// })
// })

router.get('/getNameChangeData', middlewares.getUserInfo, async (req, res) => {
	console.log('/getNameChangeData', req.query.user_id);
	var userId = req.query.user_id
	var filename = [];
	models.Letterfor_NameChange.findOne({
		where: {
			user_id: userId
		}
	}).then(user => {
		filename.push({
			filePath: (user.file_name) ? constant.FILE_LOCATION + "public/upload/NameChangeLetter/" + userId + "/" + user.file_name : null,
			filename: (user.file_name) ? constant.BASE_URL + "/" + "upload/NameChangeLetter/" + userId + "/" + user.file_name : null,
		})
		if (user) {
			res.json({
				status: 200,
				data: user,
				filename: filename
			})
		} else {
			res.json({
				status: 400,
			})
		}


	})
})



router.post('/upload_curriculum', async function (req, res) {
	console.log("/upload_curriculum")
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var doc_id = req.query.doc_id;
	var dir = constant.FILE_LOCATION + "public/upload/curriculum/" + userId;
	var app_id = req.query.app_id;
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}

	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			console.log("file", file);
			console.log("1111111")
			callback(null, constant.FILE_LOCATION + 'public/upload/curriculum/' + userId);
		},
		filename: function (req, file, callback) {
			console.log("1111111")
			console.log("file,file", file);
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');

	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/curriculum/' + userId + '/' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {
			uploadValue = true;
			ValueUpdateData(uploadValue);
		}
		async function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				var fileStatus = false;
				const curriculum = await models.User_Curriculum.findAll({
					where: {
						user_id: userId
					}
				})
				if (curriculum) {
					if (curriculum.length > 0) {
						curriculum.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != undefined && doc_id != null && doc_id != '') {
							const curriculum_data = await models.User_Curriculum.findOne({
								where: {
									user_id: userId,
									id: doc_id
								}
							})
							if (curriculum_data) {
								const userdata = await curriculum_data.update({
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.collegeId,
									upload_step: "changed"
								})
								if (userdata) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}

							}
						} else {
							if (app_id == null) {
								const userCurriculum = await models.User_Curriculum.create({
									name: transcript_name,
									user_id: userId,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.collegeId,
									upload_step: "default"
								})
								if (userCurriculum) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							} else {
								const curriculumData = await models.User_Curriculum.create({
									name: transcript_name,
									user_id: userId,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.collegeId,
									upload_step: "changed",
									app_id: app_id
								})
								if (curriculumData) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: transcript_doc
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							}
						}
					}
				}

			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}

	})

})



router.delete('/deleteUploadpdf', middlewares.getUserInfo, function (req, res) {
	models.User_Curriculum.find({
		where: {
			user_id: req.User.id
		}

	}).then(function (users) {
		if (users) {
			models.User_Curriculum.find({
				where: {
					id: req.query.id
				}
			}).then(function (file) {
				if (file) {
					fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
						file.destroy().then(function (userMarklistDelete) {
							res.json({
								status: 200,
								data: userMarklistDelete
							})
						});
					});
				} else {
					res.json({
						status: 400,
						message: 'File Deleted!!..'
					});
				}

			})
		}
	})
});

router.post('/deleteErrataCurriculum', middlewares.getUserInfo, function (req, res) {
	var userData = req.body.data
	models.User_Curriculum.find({
		where: {
			user_id: userData.user_id
		}

	}).then(function (users) {
		if (users) {
			models.User_Curriculum.find({
				where: {
					id: userData.id,
					user_id: userData.user_id
				}
			}).then(function (file) {
				if (file) {
					//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + userData.user_id + '/' + file.file_name, function (err) {
					file.destroy().then(function (userMarklistDelete) {
						if (userMarklistDelete) {
							models.Activitytracker.create({
								user_id: userData.user_id,
								activity: userMarklistDelete.name + 'Deleted',
								data: userMarklistDelete.file_name + ' deleted by ' + req.User.email,
								applicaiton_id: userData.app_id
							})
							res.json({
								status: 200,
								message: 'Curriculum deleted successfully!!...'
							})
						}
					});
					//});
				} else {
					res.json({
						status: 400,
						message: 'File Not Deleted!!..'
					});
				}

			})
		}
	})
});


router.get('/getAdminInstructionalDetails', (req, res) => {
	var data = [];
	models.InstructionalDetails.findAll(
		{
			where: {
				userId: req.query.userId,
				app_id: {
					[Op.ne]: null
				}
			}
		}
	).then(user => {
		user.forEach(function (userdata) {
			data.push({
				name: userdata.studentName,
				course: userdata.courseName,
				college: userdata.collegeName,
				duration: userdata.duration,
				specialization: userdata.specialization,
				yearofpassing: userdata.yearofpassing,
				division: userdata.division
			})
		})
		if (data) {
			res.json({
				data: data
			})
		} else {
			res.json({
				data: null
			})
		}
	})
})

router.get('/getAdminHrdDetails', (req, res) => {
	console.log("getAdminHrdDetails ===>");
	var data = [];
	models.Hrd_details.findAll(
		{
			where: {
				user_id: req.query.userId,
				app_id: {
					[Op.ne]: null
				}
			}
		}
	).then(user => {
		user.forEach(function (userdata) {
			data.push({
				fullName: userdata.fullName,
				course_name: userdata.course_name,
				seat_no: userdata.seat_no,
				seat_no_sem5: userdata.seat_no_sem5,
				seat_no_sem6: userdata.seat_no_sem6,
				secondlastsem: userdata.secondlastsem,
				lastsem: userdata.lastsem,
				prn_no: userdata.prn_no,
				cgpa: userdata.cgpa,
				cgpi: userdata.cgpi,
				verification_type: userdata.verification_type,
				transcript_no: userdata.transcript_no,
				transcript_date: userdata.transcript_date,
				exam_date: userdata.exam_date,
				specialization: userdata.specialization,
				reference_no: userdata.reference_no,
				app_id: userdata.app_id,
				degree: userdata.degree
			})
		})
		if (data) {
			res.json({
				data: data
			})
		} else {
			res.json({
				data: null
			})
		}
	})
})
router.get('/getApplied_for', middlewares.getUserInfo, (req, res) => {
	console.log("getApplied_for ===>");
	models.Applied_For_Details.findAll({
		where: {
			user_id: req.User.id,
			app_id: {
				[Op.eq]: null
			}
		}
	}).then(function (applied_for) {
		console.log("appplied_for" + applied_for[0].applying_for);
		if (applied_for[0].applying_for) {
			console.log("dsbkcbj,zms");
			res.json({
				status: 200,
				applying_for: applied_for[0].applying_for
			})
		} else {
			res.json({
				status: 400
			})
		}

	})
})
router.post('/saveMarkListDetails', middlewares.getUserInfo, (req, res) => {
	console.log(req.body.data.editFlag);
	var userId = req.User.id;
	if (req.body.data.id != '') {
		models.userMarkList.find({
			where: {
				id: req.body.data.id
			}
		}).then(function (marklist) {
			marklist.update({
				collegeId: req.body.data.collegeId,
				faculty: req.body.data.faculty,
				patteren: req.body.data.patteren,
				name: req.body.data.name,
			})

			res.json({
				status: 200,
				message: `Updated Successfully.`,
				data: marklist
			});

		})
	} else {

		if (req.body.data.editFlag == "true") {
			models.userMarkList.create({
				user_id: userId,
				type: req.body.data.degreeName,
				collegeId: req.body.data.collegeId,
				faculty: req.body.data.faculty,
				patteren: req.body.data.patteren,
				name: req.body.data.name,
				college_stream_type: req.body.data.college_stream,
				app_id: req.body.data.app_id
			}).then(function (userMarkListDetails) {
				if (userMarkListDetails) {
					return res.json({
						status: 200,
						message: `Saved Successfully.`,
						data: userMarkListDetails
					});
				} else {
					return res.json({
						status: 400,
						message: `Error occured in uploading document.`
					});
				}
			});
		} else {
			models.userMarkList.create({
				user_id: userId,
				type: req.body.data.degreeName,
				collegeId: req.body.data.collegeId,
				faculty: req.body.data.faculty,
				patteren: req.body.data.patteren,
				name: req.body.data.name,
				college_stream_type: req.body.data.college_stream,
			}).then(function (userMarkListDetails) {
				if (userMarkListDetails) {
					return res.json({
						status: 200,
						message: `Saved Successfully.`,
						data: userMarkListDetails
					});
				} else {
					return res.json({
						status: 400,
						message: `Error occured in uploading document.`
					});
				}
			});
		}

	}
})

// router.post('/saveUserMarkList',upload.single('file') ,async (req,res)=>{
// 	try{
// 		var image;
// 	console.log("saveUserMarkList");
// 	console.log("data",req.body);
// 	console.log("file",req.file);
// 	console.log("file",req.files);
// 	// console.log("college id",req.body.data.collegeNameCtrl);
// 	// console.log("faculty",req.body.data.courseNameCtrl);
// 	// console.log("semester annual",req.body.data.semYearCtrl);
// 	// console.log("degreetype",req.body.degree.courseNameCtrl);
// 	console.log("userid",req.body.user_id);
// 	// console.log("pattern",req.body.degree );
// 	var userId=req.body.user_id

// var collegeId=req.body.data.collegeNameCtrl
// var courseName=req.body.data.courseNameCtrl
// var semYear=req.body.data.semYearCtrl
// var degree=req.body.degree.courseNameCtrl
// var doc_id = req.query.doc_id;
// var app_id = (req.query.app_id) ? req.query.app_id : null;
// console.log("name",degree + "_" +courseName + "_" + semYear);
// var dir = constant.FILE_LOCATION + "public/upload/marklist/" + userId;
// if(!fs.existsSync(dir)){
// 	fs.mkdirSync(dir);
// 	console.log("makedir");
// }
// console.log("DSGDSgf");  
// var storage = multer.diskStorage({
// 	destination:function(req,file,callback){
// 		console.log("11111111111");
// 		callback(null,constant.FILE_LOCATION + 'public/upload/marklist/' + userId);
// 	},
// 	filename:function(req,file,callback){
// 		console.log("22222222222222");
// 		console.log("filename",file);
// 		var extension = path.extname(file.originalname)
// 		var randomString = functions.generateRandomString(10,'alphabetic')
// 		var newFileName = randomString.concat(extension);
// 		image = newFileName;
// 		callback(null,newFileName);

// 	}
// });

// var upload=multer({
//   storage:storage,
//   fileFilter:function(req,file,callback){
// 	console.log("33333333333333333333333333333");
// 	ext = path.extname(file.originalname)
// 	if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg'  && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG') {
// 		return callback(res.end('Please upload your document in  .jpeg, .jpg or .png formats only'), null)
// 	}
// 	callback(null,true)
// }
// }).single('file');
//  upload(req,res,function(err,data){
// 	imageLocationToCallClient = image;

// 	uploadValue = true;
// 	ValueUpdateData(uploadValue)

// 	async function ValueUpdateData(uploadValue){
// 		if(uploadValue == true){ 
// 		var fileStatus = false;
//         const marklistUpload=await models.UserMarklist_Upload.findAll({
// 			where:{
// 				user_id:userId
// 			}
// 		})
// 		if(marklistUpload){
// 			if(marklistUpload.length > 0){
// 				marklistUpload.forEach(function(marklistData){
// 					if(marklistData){ 
// 						if(marklistData.file_name == imageLocationToCallClient){
// 							fileStatus=true;
// 						}
// 					}
// 				})
// 			}
// 			if(fileStatus == true){
// 				res.json({
// 					status: 200,
// 					message: `File already exist. please upload another file!!!..`,
// 				})
// 			}else{
//               if(doc_id != undefined && doc_id != null && doc_id != ''){
// 				const marksheet_data=await models.UserMarklist_Upload.findOne({
// 					where:{
// 						user_id : userId,
// 						id : doc_id
// 					}
// 				})
// 				if(marksheet_data){
// 					const userdata=await marksheet_data.update({
// 						file_name: imageLocationToCallClient,
// 						lock_transcript : false,
// 						upload_step : "changed"
// 					})
// 					if(userdata){
// 						return res.json({
// 							status: 200,
// 							message: `Upload Completed.`,
// 							data : userdata
// 						});
// 					}else{
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});
// 					}

// 				}
// 			  }else{
// 				if(app_id == null){
// 					const userMarklist=await models.UserMarklist_Upload.create({
// 						name: degree + "_" +courseName + "_" + semYear,
// 						user_id: userId,
// 						file_name: imageLocationToCallClient,
// 						lock_transcript : false,
// 						collegeId: collegeId,
// 						education_type:degree,
// 						pattern:semYear,
// 						faculty:courseName,
// 						upload_step : "default"
// 					})
// 					if(userMarklist){
// 						return res.json({
// 							status: 200,
// 							message: `Upload Completed.`,
// 							data : userMarklist
// 						});
// 					}else{
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});	
// 					}
// 				}else{
// 					const userMarklist=await models.UserMarklist_Upload.create({
// 						name: degree + "_" +courseName + "_" + semYear,
// 						user_id: userId,
// 						file_name: imageLocationToCallClient,
// 						lock_transcript : false,
// 						collegeId: collegeId,
// 						education_type:degree,
// 						pattern:semYear,
// 						faculty:courseName,
// 						upload_step : "default"	
// 					})
// 					if(userMarklist){
// 						return res.json({
// 							status: 200,
// 							message: `Upload Completed.`,
// 							data : userMarklist
// 						});
// 					}else{
// 						return res.json({
// 							status: 400,
// 							message: `Error occured in uploading document.`
// 						});
// 					}
// 				}
// 			  }
// 			}
// 		}

// 		}else if(uploadValue == false){
// 			fs.unlink(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, function (err) {
// 				if (err) {
// 					return res.json({
// 						status: 400,
// 						message: `Error occured in uploading document.`
// 					});
// 				} else {
// 					return res.json({
// 						status: 401,
// 						message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
// 					});
// 				}
// 			});
// 		}
// 	 }
//  })
// }catch (err){
// 	console.error(err);
//     return res.status(500).json({
//       status: 500,
//       message: `Internal server error.`,
//       error: err.message
//     });
// }
// })

/**
 * @
 */
router.post('/saveUserMarkList', upload.single('file'), async (req, res) => {
	console.log("saveUserMarkList");  
	try {
        var data = tesseract.recognize("C:/Users/PC-6/Desktop/karthikedulab_new/updatedattestation_Server/public/upload/marklist", config).then(async (text_data) => {
			var getCollege = await functions.getCollegeList();
			var getCourse = await functions.getProgramList();
			var str = text_data.replace(/(\r\n|\n|\r)/gm, "");
			var text = str.replace('&', 'and');
			var collegeName;
			var courseName;
			var patteren;
			var whichduration;
			console.log('texttexttexttexttext' ,text)
		 
		 
		}).catch((error) => {console.log('**********error.message***************', error.message)})

		let image;
		const file = req.file
		const userId = req.body.user_id
		const extension = path.extname(file.originalname)
		const randomString = functions.generateRandomString(10, 'alphabetic')
		const newFileName = randomString.concat(extension);
		image = newFileName;
		const doc_id = req.query.doc_id;
		const app_id = (req.query.app_id) ? req.query.app_id : null;
		const collegeId = req.body.college;
		const degree = req.body.degree;
		const semYear = req.body.semYearValue;
		const semYearValue = req.body.semYear
		const courseName = req.body.faculty;
		const name = degree + "_" + courseName + "_" + semYearValue;

		uploadValue = true;
		ValueUpdateData(uploadValue)
		async function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				var fileStatus = false;
				const marklistUpload = await models.UserMarklist_Upload.findAll({
					where: {
						user_id: userId
					}
				})
				if (marklistUpload) {
					if (marklistUpload.length > 0) {
						marklistUpload.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == image) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != undefined && doc_id != null && doc_id != '') {
							const marksheet_data = await models.UserMarklist_Upload.findOne({
								where: {
									user_id: userId,
									id: doc_id
								}
							})
							if (marksheet_data) {
								const userdata = await marksheet_data.update({
									file_name: image,
									lock_transcript: false,
									upload_step: "changed"
								})
								if (userdata) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: userdata
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}

							}
						} else {
							if (app_id == null) {
								const userMarklist = await models.UserMarklist_Upload.create({
									name: degree + "_" + courseName + "_" + semYear,
									user_id: userId,
									file_name: image,
									lock_transcript: false,
									collegeId: collegeId,
									education_type: degree,
									pattern: semYear,
									faculty: courseName,
									upload_step: "default"
								})
								if (userMarklist) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: userMarklist
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							} else {
								const userMarklist = await models.UserMarklist_Upload.create({
									name: degree + "_" + courseName + "_" + semYear,
									user_id: userId,
									file_name: image,
									lock_transcript: false,
									collegeId: collegeId,
									education_type: degree,
									pattern: semYear,
									faculty: courseName,
									upload_step: "default"
								})
								if (userMarklist) {
									return res.json({
										status: 200,
										message: `Upload Completed.`,
										data: userMarklist
									});
								} else {
									return res.json({
										status: 400,
										message: `Error occured in uploading document.`
									});
								}
							}
						}
					}
				}
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/marklist/' + userId + '/' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}
		}

	} catch (err) {
		console.error(err);
		return res.status(500).json({
			status: 500,
			message: `Internal server error.`,
			error: err.message
		});
	}
})




router.post('/saveHrdAdminDetails', middlewares.getUserInfo, (req, res) => {
	console.log("saveHrdAdminDetails");
	var degree = req.body.degree;
	var type = req.body.type;
	var userId = req.body.userId

	models.Hrd_details.update(
		{
			verification_type: type
		},
		{
			where: {

				user_id: userId,
				app_id: {
					[Op.ne]: null
				}
			}
		}).then((err, updated) => {
			res.json({
				status: 200
			})
		})
})

router.post('/deleteDetails', middlewares.getUserInfo, function (req, res) {
	models.userMarkList.find({
		where: {
			id: req.body.id
		}
	}).then(function (userMarklist) {
		if (userMarklist) {
			userMarklist.destroy().then(function (delmarklist) {
				if (delmarklist) {
					res.json({
						status: 200,
						message: "Marksheet deleted Successfully"
					})

				} else {
					res.json({
						status: 400,
						message: "Marksheet not delete"
					});
				}
			});
		}
	});
});

router.get('/getMarkListDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/getMarkListDetails')

	var userMarkListDetails = [];
	var userMarkLists = [];

	// models.userMarkList.findAll({
	// 	where: {
	// 		user_id : req.User.id,
	// 		type:req.query.degreeName
	// 	}
	// }).then(function (userMarkLists) {
	// 	if(userMarkLists.length > 0){
	// 		userMarkLists.forEach(function(userMarkList) {
	// 			if(userMarkList.collegeId != '' && userMarkList.collegeId != null){
	// 				models.College.find({
	// 					where:{
	// 						id : userMarkList.collegeId
	// 					}
	// 				}).then(function(college){
	// 					userMarkListDetails.push({
	// 						id: userMarkList.id,
	// 						faculty: userMarkList.faculty,
	// 						user_id: userMarkList.user_id,
	// 						type : userMarkList.type,
	// 						patteren : userMarkList.patteren,
	// 						collegeName : college.name,
	// 						collegeId : userMarkList.collegeId,
	// 						college_stream : userMarkList.college_stream_type,
	// 						name : userMarkList.name,
	// 					});
	// 				})
	// 			}
	// 		});
	// 	} 
	// 	setTimeout(function() {
	// 		res.json({
	// 			status : 200,
	// 			data : userMarkListDetails,
	// 		})              
	// 	}, 1500);
	// })
	if (req.query.editFlag == 'true') {
		models.userMarkList.findAll({
			where: {
				user_id: req.User.id,
				type: req.query.degreeName
			}
		}).then(function (userMarkList_Details) {
			userMarkList_Details.forEach(detail => {
				if (detail.app_id != null) {
					var app_idArr = detail.app_id.split(',');
					app_idArr.forEach(app_id => {
						if (app_id == req.query.app_id) {
							userMarkLists.push(detail)
						}
					})
				}
			})

			userMarkLists.forEach(function (userMarkList) {
				if (userMarkList.collegeId != '' && userMarkList.collegeId != null) {
					models.College.find({
						where: {
							id: userMarkList.collegeId
						}
					}).then(function (college) {
						userMarkListDetails.push({
							id: userMarkList.id,
							faculty: userMarkList.faculty,
							user_id: userMarkList.user_id,
							type: userMarkList.type,
							patteren: userMarkList.patteren,
							collegeName: college.name,
							collegeId: userMarkList.collegeId,
							college_stream: userMarkList.college_stream_type,
							name: userMarkList.name,
							app_id: userMarkList.app_id
						});
					})
				}
			});

			setTimeout(function () {
				res.json({
					status: 200,
					data: userMarkListDetails,
				})
			}, 1500);

		})
	} else {
		models.userMarkList.find({
			where: {
				user_id: req.User.id

			}
		}).then(function (userMarkList_Details) {
			if (userMarkList_Details) {
				if (userMarkList_Details.previous_data == true) {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeName
						}
					}).then(function (userMarkList_data) {
						if (userMarkList_data.length > 0) {
							userMarkList_data.forEach(function (userMarkList) {
								if (userMarkList.collegeId != '' && userMarkList.collegeId != null) {
									models.College.find({
										where: {
											id: userMarkList.collegeId
										}
									}).then(function (college) {
										userMarkListDetails.push({
											id: userMarkList.id,
											faculty: userMarkList.faculty,
											user_id: userMarkList.user_id,
											type: userMarkList.type,
											patteren: userMarkList.patteren,
											collegeName: college.name,
											collegeId: userMarkList.collegeId,
											college_stream: userMarkList.college_stream_type,
											name: userMarkList.name,
											app_id: userMarkList.app_id
										});
									})
								}
							});
						}
						setTimeout(function () {
							res.json({
								status: 200,
								data: userMarkListDetails,
							})
						}, 1500);
					})
				} else if (userMarkList_Details.previous_data == false || userMarkList_Details.previous_data == '') {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeName,
							app_id: {
								[Op.eq]: null
							}
						}
					}).then(function (userMarkList_data) {
						if (userMarkList_data.length > 0) {
							userMarkList_data.forEach(function (userMarkList) {
								if (userMarkList.collegeId != '' && userMarkList.collegeId != null) {
									models.College.find({
										where: {
											id: userMarkList.collegeId
										}
									}).then(function (college) {
										userMarkListDetails.push({
											id: userMarkList.id,
											faculty: userMarkList.faculty,
											user_id: userMarkList.user_id,
											type: userMarkList.type,
											patteren: userMarkList.patteren,
											collegeName: college.name,
											collegeId: userMarkList.collegeId,
											college_stream: userMarkList.college_stream_type,
											name: userMarkList.name,
											app_id: userMarkList.app_id
										});
									})
								}
							});
						}
						setTimeout(function () {
							res.json({
								status: 200,
								data: userMarkListDetails,
							})
						}, 1500);
					})
				}
			} else {
				res.json({
					status: 200,
					data: userMarkListDetails
				})
			}
		})
	}
});

// router.get('/getuserEducationDetails',middlewares.getUserInfo,function(req,res){
// 	console.log('/getuserEducationDetails');
// 	var view_data=[];
// 	var userMarkList_uploads = [];
// 	var more_marksheets = [];
// 	var usermarklist_data = [];
// 	var filename;
// 	var filePath;
// 	const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});

// 	// const file = req.files.file
// 	// const { name, mimetype, size, data } = file
// 	// const fileContent  = Buffer.from(data, ' ');
// 	s3.listObjectsV2({
// 		Bucket: "muattestation",
// 	}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			usermarklist_data = data.Contents
// 			// res.json({status :200,
// 			//     data : data.Contents})


// 	if(req.query.editFlag == 'true'){
// 		models.UserMarklist_Upload.findAll({
// 			where :{
// 				user_id : req.User.id,
// 				education_type : req.query.degreeValue
// 			}
// 		}).then(function(userMarkListUploads){
// 			if(userMarkListUploads.length > 0){
// 				userMarkListUploads.forEach(userMarklistUpload=>{
// 					if(userMarklistUpload.app_id != null){
// 						var app_idArr = userMarklistUpload.app_id.split(',');
// 						app_idArr.forEach(app_id=>{
// 							if(app_id == req.query.app_id){
// 								userMarkList_uploads.push(userMarklistUpload);
// 							}
// 						})
// 					}	
// 				});
// 				if(userMarkList_uploads.length > 0){
// 					userMarkList_uploads.forEach(userMarkList_upload=>{
// 						models.userMarkList.find({
// 							where : {
// 								id : userMarkList_upload.user_marklist_id,
// 							}
// 						}).then(function(userMarklist){
// 							if(userMarklist){
// 								models.College.find({
// 									where :{
// 										id : userMarklist.collegeId
// 									}
// 								}).then(function(college){
// 									usermarklist_data.forEach(function (data){
// 										// console.log("data == = >" + data);
// 										if(data.ETag.includes(userMarklist_upload.file_name)){
// 												filename = JSON.parse(data.ETag);
// 												filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key												
// 										}else if(userMarkList_upload.file_name.includes('.')) {
// 											filename = constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											 filePath = constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarkList_upload.file_name									
// 										}
// 									})
// 									if(userMarkList_upload.name.includes("_Attempt_")){
// 										more_marksheets.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName:userMarkList_upload.name,
// 											filePath :filePath,
// 											filename : filename,
// 											// filename : constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											lock_transcript : userMarkList_upload.lock_transcript,
// 											doc_id : userMarkList_upload.id,
// 											upload_step : userMarkList_upload.upload_step,
// 											app_id : userMarkList_upload.app_id
// 										});
// 									}else{
// 										view_data.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName:userMarkList_upload.name,
// 											filePath : filePath,
// 											filename : filename,											
// 											// filename : constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarkList_upload.file_name,
// 											lock_transcript : userMarkList_upload.lock_transcript,
// 											doc_id : userMarkList_upload.id,
// 											upload_step : userMarkList_upload.upload_step,
// 											app_id : userMarkList_upload.app_id
// 										});
// 									}

// 								})
// 							}
// 						})
// 					})

// 					models.userMarkList.findAll({
// 						where:{
// 							user_id : req.User.id,
// 							type: req.query.degreeValue,
// 							app_id :{
// 								[Op.ne]: null
// 							}
// 						}
// 					}).then(function(userMarkLists){
// 						userMarkLists.forEach(userMarklist=>{
// 							models.College.find({
// 								where :{
// 									id : userMarklist.collegeId
// 								}
// 							}).then(function(college){
// 								if(view_data.length > 0){
// 									if(userMarklist.college_stream_type == true){
// 										var flag = false;
// 										var name = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name
// 										view_data.forEach(vData=>{
// 											if(name == vData.patternName){
// 												flag = true;
// 											}
// 										})
// 										if(flag == false){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}
// 									}else if(userMarklist.college_stream_type == false){
// 										models.facultymaster.find({
// 											where :{
// 												faculty : userMarklist.faculty,
// 												degree : userMarklist.type
// 											}
// 										}).then(function(facultyMaster){
// 											var totalDocument = 0;
// 											if(userMarklist.patteren == 'Semester'){

// 												totalDocument = facultyMaster.year * 2;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var flag = false;
// 													var name = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i
// 													view_data.forEach(vData=>{
// 														if(name == vData.patternName){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}

// 											}else if(userMarklist.patteren == 'Annual'){
// 												totalDocument = facultyMaster.year;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var year = converter.toWordsOrdinal(i);
// 													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 													var flag = false;
// 													var name = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year";
// 													view_data.forEach(vData=>{
// 														if(name == vData.patternName){
// 															flag = true;
// 														}
// 													})
// 													if(flag == false){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}
// 											}
// 										})
// 									}
// 								}else{
// 									if(userMarklist.college_stream_type == true){
// 										view_data.push({
// 											faculty:userMarklist.faculty,
// 											pattern:userMarklist.patteren,
// 											collegeId:college.id,
// 											collegeName:college.name,
// 											education_type:userMarklist.type,
// 											user_marklistid:userMarklist.id,
// 											selectDifferent:userMarklist.college_stream_type,
// 											patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 											filePath : null,
// 											filename : null,
// 											lock_transcript :  null,
// 											doc_id : null,
// 											upload_step : null,
// 											app_id : null
// 										});
// 									}else if(userMarklist.college_stream_type == false){
// 										models.facultymaster.find({
// 											where :{
// 												faculty : userMarklist.faculty,
// 												degree : userMarklist.type
// 											}
// 										}).then(function(facultyMaster){
// 											var totalDocument = 0;
// 											if(userMarklist.patteren == 'Semester'){
// 												totalDocument = facultyMaster.year * 2;
// 												for(var i = 1; i <= totalDocument; i++){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}

// 											}else if(userMarklist.patteren == 'Annual'){
// 												totalDocument = facultyMaster.year;
// 												for(var i = 1; i <= totalDocument; i++){
// 													var year = converter.toWordsOrdinal(i);
// 													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}
// 										})
// 									}
// 								}
// 							})
// 						})
// 					})


// 				}else{
// 					models.userMarkList.findAll({
// 						where:{
// 							user_id : req.User.id,
// 							type: req.query.degreeValue
// 						}
// 					}).then(function(userMarkLists){
// 						userMarkLists.forEach(userMarklist=>{
// 							models.UserMarklist_Upload.findAll({
// 								where :{
// 									user_marklist_id : userMarklist.id
// 								}
// 							}).then(function(UserMarklist_Uploads){
// 								models.College.find({
// 									where :{
// 										id : userMarklist.collegeId
// 									}
// 								}).then(function(college){
// 									usermarklist_data.forEach(function (data){
// 										// console.log("data == = >" + data);
// 										if(data.ETag.includes(userMarklist.file_name)){
// 												filename = JSON.parse(data.ETag);
// 												filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key													
// 										}else if(userMarklist.file_name.includes('.')){
// 											 filename= (userMarklist) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist.file_name : null,
// 											 filePath = (userMarklist) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist.file_name : null														
// 										}
// 									})
// 									if(UserMarklist_Uploads.length > 0){
// 										UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 											if(userMarklist_upload.name.includes("_Attempt_")){
// 												more_marksheets.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 													filePath :filePath,
// 													filename : filename,
// 													// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 												});
// 											}else{
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 													filePath : filePath,
// 													filename : filename,
// 													// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 													lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 													doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 													upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 													app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 												});
// 											}
// 										})
// 									}else{
// 										if(userMarklist.college_stream_type == true){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}else if(userMarklist.college_stream_type == false){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: null,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}
// 									}
// 								})
// 							})
// 						})
// 					})
// 				}

// 			}else{
// 				var userMarkLists = [];
// 				models.userMarkList.findAll({
// 					where:{
// 						user_id : req.User.id,
// 						type: req.query.degreeValue
// 					}
// 				}).then(function(userMarkLists_data){
// 					userMarkLists_data.forEach(userMarklist=>{
// 						if(userMarklist.app_id != null){
// 							var app_idArr = userMarklist.app_id.split(',');
// 							app_idArr.forEach(app_id=>{
// 								if(app_id == req.query.app_id){
// 									userMarkLists.push(userMarklist);
// 								}
// 							})
// 						}	
// 					});
// 					userMarkLists.forEach(userMarklist=>{
// 						models.UserMarklist_Upload.findAll({
// 							where :{
// 								user_marklist_id : userMarklist.id
// 							}
// 						}).then(function(UserMarklist_Uploads){
// 							models.College.find({
// 								where :{
// 									id : userMarklist.collegeId
// 								}
// 							}).then(function(college){
// 								usermarklist_data.forEach(function (data){
// 									// console.log("data == = >" + data);
// 									if(data.ETag.includes(userMarklist.file_name)){
// 											filename = JSON.parse(data.ETag);
// 											filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key													
// 									}else if(userMarklist.file_name.includes('.')){
// 										 filename= (userMarklist) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist.file_name : null,
// 										 filePath = (userMarklist) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist.file_name : null													
// 									}
// 								})
// 								if(UserMarklist_Uploads.length > 0){
// 									UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 										if(userMarklist_upload.name.includes("_Attempt_")){
// 											more_marksheets.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 												filePath : filePath,
// 												filename : filename,
// 												// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 												lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 												doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 												upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 												app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 											});
// 										}else{
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 												filePath : filePath,
// 												filename : filename,
// 												// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 												lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 												doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 												upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 												app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 											});
// 										}
// 									})
// 								}else{
// 									if(userMarklist.college_stream_type == true){
// 											view_data.push({
// 												faculty:userMarklist.faculty,
// 												pattern:userMarklist.patteren,
// 												collegeId:college.id,
// 												collegeName:college.name,
// 												education_type:userMarklist.type,
// 												user_marklistid:userMarklist.id,
// 												selectDifferent:userMarklist.college_stream_type,
// 												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 												filePath : null,
// 												filename : null,
// 												lock_transcript :  null,
// 												doc_id : null,
// 												upload_step : null,
// 												app_id : null
// 											});
// 										}else if(userMarklist.college_stream_type == false){
// 											models.facultymaster.find({
// 												where :{
// 													faculty : userMarklist.faculty,
// 													degree : userMarklist.type
// 												}
// 											}).then(function(facultyMaster){
// 												var totalDocument = 0;
// 												if(userMarklist.patteren == 'Semester'){
// 													totalDocument = facultyMaster.year * 2;
// 													for(var i = 1; i <= totalDocument; i++){
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}

// 												}else if(userMarklist.patteren == 'Annual'){
// 													totalDocument = facultyMaster.year;
// 													for(var i = 1; i <= totalDocument; i++){
// 														var year = converter.toWordsOrdinal(i);
// 														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 														view_data.push({
// 															faculty:userMarklist.faculty,
// 															pattern:userMarklist.patteren,
// 															collegeId:college.id,
// 															collegeName:college.name,
// 															education_type:userMarklist.type,
// 															user_marklistid:userMarklist.id,
// 															selectDifferent:userMarklist.college_stream_type,
// 															patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 															filePath : null,
// 															filename : null,
// 															lock_transcript :  null,
// 															doc_id : null,
// 															upload_step : null,
// 															app_id : null
// 														});
// 													}
// 												}
// 											})
// 										}
// 									// }

// 								}
// 							})
// 						})
// 					})
// 				})
// 			}
// 			setTimeout(()=>{
// 				res.json({
// 					status : 200,
// 					data : view_data,
// 					more_marksheets : more_marksheets
// 				})
// 			},3000)
// 		})
// 	}else{
// 		models.userMarkList.find({
// 				where:{
// 					user_id : req.User.id,
// 				}
// 			}).then(function(userMarkList){
// 				if(userMarkList){
// 					if(userMarkList.previous_data == true){
// 						models.userMarkList.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								type: req.query.degreeValue
// 							}
// 						}).then(function(userMarkLists){
// 							userMarkLists.forEach(userMarklist=>{
// 								models.UserMarklist_Upload.findAll({
// 									where :{
// 										user_marklist_id : userMarklist.id
// 									}
// 								}).then(function(UserMarklist_Uploads){
// 									models.College.find({
// 										where :{
// 											id : userMarklist.collegeId
// 										}
// 									}).then(function(college){
// 										if(UserMarklist_Uploads.length > 0){
// 											UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 												usermarklist_data.forEach(function (data){
// 													// console.log("data == = >" + data);
// 													if(data.ETag.includes(userMarklist_upload.file_name)){
// 															filename = JSON.parse(data.ETag);
// 															filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 													}else if(userMarklist_upload.file_name.includes('.')){
// 														filename = (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														 filePath = (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null															
// 													}
// 												})

// 												if(userMarklist_upload.name.includes("_Attempt_")){
// 													console.log("in more marksheeets == > ");
// 													more_marksheets.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath : filePath,
// 														filename : filename,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}else{
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath : filePath,
// 														filename : filename,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}
// 											})

// 											if(userMarklist.college_stream_type == true){
// 												var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
// 												var availFlag = false;
// 												view_data.forEach(data=>{
// 													if(data.patternName == patternName){
// 														availFlag = true;
// 													}
// 												})
// 												if(availFlag == false){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: patternName,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}else if(userMarklist.college_stream_type == false){
// 												models.facultymaster.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i;
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year"
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}
// 												})
// 											}
// 										}else{
// 											if(userMarklist.college_stream_type == true){
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 													filePath : null,
// 													filename : null,
// 													lock_transcript :  null,
// 													doc_id : null,
// 													upload_step : null,
// 													app_id : null
// 												});
// 											}else if(userMarklist.college_stream_type == false){
// 												models.facultymaster.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}

// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}
// 													}
// 												})
// 											}
// 										}
// 									})
// 								})
// 							})
// 						})
// 					}else{
// 						models.userMarkList.findAll({
// 							where:{
// 								user_id : req.User.id,
// 								type: req.query.degreeValue,
// 								app_id :{
// 									[Op.eq] : null
// 								}
// 							}
// 						}).then(function(userMarkLists){
// 							userMarkLists.forEach(userMarklist=>{
// 								models.UserMarklist_Upload.findAll({
// 									where :{
// 										user_marklist_id : userMarklist.id
// 									}
// 								}).then(function(UserMarklist_Uploads){
// 									models.College.find({
// 										where :{
// 											id : userMarklist.collegeId
// 										}
// 									}).then(function(college){
// 										if(UserMarklist_Uploads.length > 0){
// 											UserMarklist_Uploads.forEach(userMarklist_upload=>{
// 												// setTimeout(()=>{
// 												usermarklist_data.forEach(function (data){

// 														if(data.ETag.includes(userMarklist_upload.file_name)){
// 																filename = JSON.parse(data.ETag);
// 																filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 																 console.log("filePath of filePath"+ filePath);									
// 														}else if(userMarklist_upload.file_name.includes('.')){
// 															console.log("ncn");
// 															filePath =(userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null;
// 															filename= (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null															
// 														}
// 													})
// 												// },3000)
// 												if(userMarklist_upload.name.includes("_Attempt_")){

// 													more_marksheets.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														// filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filePath : filePath,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filename : filename,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}else{
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName:(userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
// 														filePath :filePath,
// 														// filePath : (userMarklist_upload) ? constant.FILE_LOCATION+"public/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														// filename : (userMarklist_upload) ? constant.BASE_URL+"/upload/marklist/"+req.User.id+"/"+userMarklist_upload.file_name : null,
// 														filename : filename,
// 														lock_transcript : (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
// 														doc_id : (userMarklist_upload) ? userMarklist_upload.id : null,
// 														upload_step : (userMarklist_upload) ? userMarklist_upload.upload_step : null,
// 														app_id : (userMarklist_upload) ? userMarklist_upload.app_id : null,
// 													});
// 												}
// 											})
// 											if(userMarklist.college_stream_type == true){
// 												var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
// 												var availFlag = false;
// 												view_data.forEach(data=>{
// 													if(data.patternName == patternName){
// 														availFlag = true;
// 													}
// 												})
// 												if(availFlag == false){
// 													view_data.push({
// 														faculty:userMarklist.faculty,
// 														pattern:userMarklist.patteren,
// 														collegeId:college.id,
// 														collegeName:college.name,
// 														education_type:userMarklist.type,
// 														user_marklistid:userMarklist.id,
// 														selectDifferent:userMarklist.college_stream_type,
// 														patternName: patternName,
// 														filePath : null,
// 														filename : null,
// 														lock_transcript :  null,
// 														doc_id : null,
// 														upload_step : null,
// 														app_id : null
// 													});
// 												}
// 											}else if(userMarklist.college_stream_type == false){
// 												models.facultymaster.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i;
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															var patternName = userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year"
// 															var availFlag = false;
// 															view_data.forEach(data=>{
// 																if(data.patternName == patternName){
// 																	availFlag = true;
// 																}
// 															})
// 															if(availFlag == false){
// 																view_data.push({
// 																	faculty:userMarklist.faculty,
// 																	pattern:userMarklist.patteren,
// 																	collegeId:college.id,
// 																	collegeName:college.name,
// 																	education_type:userMarklist.type,
// 																	user_marklistid:userMarklist.id,
// 																	selectDifferent:userMarklist.college_stream_type,
// 																	patternName: patternName,
// 																	filePath : null,
// 																	filename : null,
// 																	lock_transcript :  null,
// 																	doc_id : null,
// 																	upload_step : null,
// 																	app_id : null
// 																});
// 															}
// 														}
// 													}
// 												})
// 											}
// 										}else{
// 											if(userMarklist.college_stream_type == true){
// 												view_data.push({
// 													faculty:userMarklist.faculty,
// 													pattern:userMarklist.patteren,
// 													collegeId:college.id,
// 													collegeName:college.name,
// 													education_type:userMarklist.type,
// 													user_marklistid:userMarklist.id,
// 													selectDifferent:userMarklist.college_stream_type,
// 													patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
// 													filePath : null,
// 													filename : null,
// 													lock_transcript :  null,
// 													doc_id : null,
// 													upload_step : null,
// 													app_id : null
// 												});
// 											}else if(userMarklist.college_stream_type == false){
// 												models.facultymaster.find({
// 													where :{
// 														faculty : userMarklist.faculty,
// 														degree : userMarklist.type
// 													}
// 												}).then(function(facultyMaster){
// 													var totalDocument = 0;
// 													if(userMarklist.patteren == 'Semester'){
// 														totalDocument = facultyMaster.year * 2;
// 														for(var i = 1; i <= totalDocument; i++){
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_Semester "+ i,
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}

// 													}else if(userMarklist.patteren == 'Annual'){
// 														totalDocument = facultyMaster.year;
// 														for(var i = 1; i <= totalDocument; i++){
// 															var year = converter.toWordsOrdinal(i);
// 															var inWords = year.charAt(0).toUpperCase() + year.slice(1);
// 															view_data.push({
// 																faculty:userMarklist.faculty,
// 																pattern:userMarklist.patteren,
// 																collegeId:college.id,
// 																collegeName:college.name,
// 																education_type:userMarklist.type,
// 																user_marklistid:userMarklist.id,
// 																selectDifferent:userMarklist.college_stream_type,
// 																patternName: userMarklist.type+"_"+userMarklist.faculty+"_"+ inWords + " Year",
// 																filePath : null,
// 																filename : null,
// 																lock_transcript :  null,
// 																doc_id : null,
// 																upload_step : null,
// 																app_id : null
// 															});
// 														}
// 													}
// 												})
// 											}
// 										}
// 									})
// 								})
// 							})
// 						})
// 					}
// 				}
// 				setTimeout(()=>{
// 					res.json({
// 						status : 200,
// 						data : view_data,
// 						more_marksheets : more_marksheets
// 					})
// 				},3000);
// 			})

// 	}
// }
// })
// });

router.get('/getuserEducationDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/getuserEducationDetails');
	var view_data = [];
	var userMarkList_uploads = [];
	var more_marksheets = [];



	if (req.query.editFlag == 'true') {
		models.UserMarklist_Upload.findAll({
			where: {
				user_id: req.User.id,
				education_type: req.query.degreeValue
			}
		}).then(function (userMarkListUploads) {
			if (userMarkListUploads.length > 0) {
				userMarkListUploads.forEach(userMarklistUpload => {
					if (userMarklistUpload.app_id != null) {
						var app_idArr = userMarklistUpload.app_id.split(',');
						app_idArr.forEach(app_id => {
							if (app_id == req.query.app_id) {
								userMarkList_uploads.push(userMarklistUpload);
							}
						})
					}
				});
				if (userMarkList_uploads.length > 0) {
					userMarkList_uploads.forEach(userMarkList_upload => {
						models.userMarkList.find({
							where: {
								id: userMarkList_upload.user_marklist_id,
							}
						}).then(function (userMarklist) {
							if (userMarklist) {
								models.College.find({
									where: {
										id: userMarklist.collegeId
									}
								}).then(function (college) {
									if (userMarkList_upload.name.includes("_Attempt_")) {
										more_marksheets.push({
											faculty: userMarklist.faculty,
											pattern: userMarklist.patteren,
											collegeId: college.id,
											collegeName: college.name,
											education_type: userMarklist.type,
											user_marklistid: userMarklist.id,
											selectDifferent: userMarklist.college_stream_type,
											patternName: userMarkList_upload.name,
											type: userMarkList_upload.file_name.split('.').pop(),
											filePath: constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarkList_upload.file_name,
											filename: constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarkList_upload.file_name,
											lock_transcript: userMarkList_upload.lock_transcript,
											doc_id: userMarkList_upload.id,
											upload_step: userMarkList_upload.upload_step,
											app_id: userMarkList_upload.app_id
										});
									} else {
										view_data.push({
											faculty: userMarklist.faculty,
											pattern: userMarklist.patteren,
											collegeId: college.id,
											collegeName: college.name,
											education_type: userMarklist.type,
											user_marklistid: userMarklist.id,
											selectDifferent: userMarklist.college_stream_type,
											patternName: userMarkList_upload.name,
											type: userMarkList_upload.file_name.split('.').pop(),
											filePath: constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarkList_upload.file_name,
											filename: constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarkList_upload.file_name,
											lock_transcript: userMarkList_upload.lock_transcript,
											doc_id: userMarkList_upload.id,
											upload_step: userMarkList_upload.upload_step,
											app_id: userMarkList_upload.app_id
										});
									}

								})
							}
						})
					})

					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeValue,
							app_id: {
								[Op.ne]: null
							}
						}
					}).then(function (userMarkLists) {
						userMarkLists.forEach(userMarklist => {
							models.College.find({
								where: {
									id: userMarklist.collegeId
								}
							}).then(function (college) {
								if (view_data.length > 0) {
									if (userMarklist.college_stream_type == true) {
										var flag = false;
										var name = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name
										view_data.forEach(vData => {
											if (name == vData.patternName) {
												flag = true;
											}
										})
										if (flag == false) {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
												type: null,
												filePath: null,
												filename: null,
												lock_transcript: null,
												doc_id: null,
												upload_step: null,
												app_id: null
											});
										}
									} else if (userMarklist.college_stream_type == false) {
										models.facultymaster.find({
											where: {
												faculty: userMarklist.faculty,
												degree: userMarklist.type
											}
										}).then(function (facultyMaster) {
											var totalDocument = 0;
											if (userMarklist.patteren == 'Semester') {

												totalDocument = facultyMaster.year * 2;
												for (var i = 1; i <= totalDocument; i++) {
													var flag = false;
													var name = userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i
													view_data.forEach(vData => {
														if (name == vData.patternName) {
															flag = true;
														}
													})
													if (flag == false) {
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i,
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}
												}

											} else if (userMarklist.patteren == 'Annual') {
												totalDocument = facultyMaster.year;
												for (var i = 1; i <= totalDocument; i++) {
													var year = converter.toWordsOrdinal(i);
													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
													var flag = false;
													var name = userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year";
													view_data.forEach(vData => {
														if (name == vData.patternName) {
															flag = true;
														}
													})
													if (flag == false) {
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year",
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}
												}
											}
										})
									}
								} else {
									if (userMarklist.college_stream_type == true) {
										view_data.push({
											faculty: userMarklist.faculty,
											pattern: userMarklist.patteren,
											collegeId: college.id,
											collegeName: college.name,
											education_type: userMarklist.type,
											user_marklistid: userMarklist.id,
											selectDifferent: userMarklist.college_stream_type,
											patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
											type: null,
											filePath: null,
											filename: null,
											lock_transcript: null,
											doc_id: null,
											upload_step: null,
											app_id: null
										});
									} else if (userMarklist.college_stream_type == false) {
										models.facultymaster.find({
											where: {
												faculty: userMarklist.faculty,
												degree: userMarklist.type
											}
										}).then(function (facultyMaster) {
											var totalDocument = 0;
											if (userMarklist.patteren == 'Semester') {
												totalDocument = facultyMaster.year * 2;
												for (var i = 1; i <= totalDocument; i++) {
													view_data.push({
														faculty: userMarklist.faculty,
														pattern: userMarklist.patteren,
														collegeId: college.id,
														collegeName: college.name,
														education_type: userMarklist.type,
														user_marklistid: userMarklist.id,
														selectDifferent: userMarklist.college_stream_type,
														patternName: userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i,
														type: null,
														filePath: null,
														filename: null,
														lock_transcript: null,
														doc_id: null,
														upload_step: null,
														app_id: null
													});
												}

											} else if (userMarklist.patteren == 'Annual') {
												totalDocument = facultyMaster.year;
												for (var i = 1; i <= totalDocument; i++) {
													var year = converter.toWordsOrdinal(i);
													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
													view_data.push({
														faculty: userMarklist.faculty,
														pattern: userMarklist.patteren,
														collegeId: college.id,
														collegeName: college.name,
														education_type: userMarklist.type,
														user_marklistid: userMarklist.id,
														selectDifferent: userMarklist.college_stream_type,
														patternName: userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year",
														type: null,
														filePath: null,
														filename: null,
														lock_transcript: null,
														doc_id: null,
														upload_step: null,
														app_id: null
													});
												}
											}
										})
									}
								}
							})
						})
					})


				} else {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeValue
						}
					}).then(function (userMarkLists) {
						userMarkLists.forEach(userMarklist => {
							models.UserMarklist_Upload.findAll({
								where: {
									user_marklist_id: userMarklist.id
								}
							}).then(function (UserMarklist_Uploads) {
								models.College.find({
									where: {
										id: userMarklist.collegeId
									}
								}).then(function (college) {
									if (UserMarklist_Uploads.length > 0) {
										UserMarklist_Uploads.forEach(userMarklist_upload => {
											if (userMarklist_upload.name.includes("_Attempt_")) {
												more_marksheets.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											} else {
												view_data.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											}
										})
									} else {
										if (userMarklist.college_stream_type == true) {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
												type: null,
												filePath: null,
												filename: null,
												lock_transcript: null,
												doc_id: null,
												upload_step: null,
												app_id: null
											});
										} else if (userMarklist.college_stream_type == false) {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: null,
												type: null,
												filePath: null,
												filename: null,
												lock_transcript: null,
												doc_id: null,
												upload_step: null,
												app_id: null
											});
										}
									}
								})
							})
						})
					})
				}

			} else {
				var userMarkLists = [];
				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						type: req.query.degreeValue
					}
				}).then(function (userMarkLists_data) {
					userMarkLists_data.forEach(userMarklist => {
						if (userMarklist.app_id != null) {
							var app_idArr = userMarklist.app_id.split(',');
							app_idArr.forEach(app_id => {
								if (app_id == req.query.app_id) {
									userMarkLists.push(userMarklist);
								}
							})
						}
					});
					userMarkLists.forEach(userMarklist => {
						models.UserMarklist_Upload.findAll({
							where: {
								user_marklist_id: userMarklist.id
							}
						}).then(function (UserMarklist_Uploads) {
							models.College.find({
								where: {
									id: userMarklist.collegeId
								}
							}).then(function (college) {
								if (UserMarklist_Uploads.length > 0) {
									UserMarklist_Uploads.forEach(userMarklist_upload => {
										if (userMarklist_upload.name.includes("_Attempt_")) {
											more_marksheets.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
												type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
												filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
												filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
												lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
												doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
												upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
												app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
											});
										} else {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
												filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
												filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
												lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
												doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
												upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
												app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
											});
										}
									})
								} else {
									if (userMarklist.college_stream_type == true) {
										view_data.push({
											faculty: userMarklist.faculty,
											pattern: userMarklist.patteren,
											collegeId: college.id,
											collegeName: college.name,
											education_type: userMarklist.type,
											user_marklistid: userMarklist.id,
											selectDifferent: userMarklist.college_stream_type,
											patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
											type: null,
											filePath: null,
											filename: null,
											lock_transcript: null,
											doc_id: null,
											upload_step: null,
											app_id: null
										});
									} else if (userMarklist.college_stream_type == false) {
										models.facultymaster.find({
											where: {
												faculty: userMarklist.faculty,
												degree: userMarklist.type
											}
										}).then(function (facultyMaster) {
											var totalDocument = 0;
											if (userMarklist.patteren == 'Semester') {
												totalDocument = facultyMaster.year * 2;
												for (var i = 1; i <= totalDocument; i++) {
													view_data.push({
														faculty: userMarklist.faculty,
														pattern: userMarklist.patteren,
														collegeId: college.id,
														collegeName: college.name,
														education_type: userMarklist.type,
														user_marklistid: userMarklist.id,
														selectDifferent: userMarklist.college_stream_type,
														patternName: userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i,
														type: null,
														filePath: null,
														filename: null,
														lock_transcript: null,
														doc_id: null,
														upload_step: null,
														app_id: null
													});
												}

											} else if (userMarklist.patteren == 'Annual') {
												totalDocument = facultyMaster.year;
												for (var i = 1; i <= totalDocument; i++) {
													var year = converter.toWordsOrdinal(i);
													var inWords = year.charAt(0).toUpperCase() + year.slice(1);
													view_data.push({
														faculty: userMarklist.faculty,
														pattern: userMarklist.patteren,
														collegeId: college.id,
														collegeName: college.name,
														education_type: userMarklist.type,
														user_marklistid: userMarklist.id,
														selectDifferent: userMarklist.college_stream_type,
														patternName: userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year",
														type: null,
														filePath: null,
														filename: null,
														lock_transcript: null,
														doc_id: null,
														upload_step: null,
														app_id: null
													});
												}
											}
										})
									}
									// }

								}
							})
						})
					})
				})
			}
			setTimeout(() => {
				res.json({
					status: 200,
					data: view_data,
					more_marksheets: more_marksheets
				})
			}, 3000)
		})
	} else {
		models.userMarkList.find({
			where: {
				user_id: req.User.id,
			}
		}).then(function (userMarkList) {
			if (userMarkList) {
				if (userMarkList.previous_data == true) {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeValue
						}
					}).then(function (userMarkLists) {
						userMarkLists.forEach(userMarklist => {
							models.UserMarklist_Upload.findAll({
								where: {
									user_marklist_id: userMarklist.id
								}
							}).then(function (UserMarklist_Uploads) {
								models.College.find({
									where: {
										id: userMarklist.collegeId
									}
								}).then(function (college) {
									if (UserMarklist_Uploads.length > 0) {
										UserMarklist_Uploads.forEach(userMarklist_upload => {
											if (userMarklist_upload.name.includes("_Attempt_")) {
												more_marksheets.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											} else {
												view_data.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											}
										})

										if (userMarklist.college_stream_type == true) {
											var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
											var availFlag = false;
											view_data.forEach(data => {
												if (data.patternName == patternName) {
													availFlag = true;
												}
											})
											if (availFlag == false) {
												view_data.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: patternName,
													type: null,
													filePath: null,
													filename: null,
													lock_transcript: null,
													doc_id: null,
													upload_step: null,
													app_id: null
												});
											}
										} else if (userMarklist.college_stream_type == false) {
											models.facultymaster.find({
												where: {
													faculty: userMarklist.faculty,
													degree: userMarklist.type
												}
											}).then(function (facultyMaster) {
												var totalDocument = 0;
												if (userMarklist.patteren == 'Semester') {
													totalDocument = facultyMaster.year * 2;
													for (var i = 1; i <= totalDocument; i++) {
														var patternName = userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i;
														var availFlag = false;
														view_data.forEach(data => {
															if (data.patternName == patternName) {
																availFlag = true;
															}
														})
														if (availFlag == false) {
															view_data.push({
																faculty: userMarklist.faculty,
																pattern: userMarklist.patteren,
																collegeId: college.id,
																collegeName: college.name,
																education_type: userMarklist.type,
																user_marklistid: userMarklist.id,
																selectDifferent: userMarklist.college_stream_type,
																patternName: patternName,
																type: null,
																filePath: null,
																filename: null,
																lock_transcript: null,
																doc_id: null,
																upload_step: null,
																app_id: null
															});
														}
													}
												} else if (userMarklist.patteren == 'Annual') {
													totalDocument = facultyMaster.year;
													for (var i = 1; i <= totalDocument; i++) {
														var year = converter.toWordsOrdinal(i);
														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
														var patternName = userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year"
														var availFlag = false;
														view_data.forEach(data => {
															if (data.patternName == patternName) {
																availFlag = true;
															}
														})
														if (availFlag == false) {
															view_data.push({
																faculty: userMarklist.faculty,
																pattern: userMarklist.patteren,
																collegeId: college.id,
																collegeName: college.name,
																education_type: userMarklist.type,
																user_marklistid: userMarklist.id,
																selectDifferent: userMarklist.college_stream_type,
																patternName: patternName,
																type: null,
																filePath: null,
																filename: null,
																lock_transcript: null,
																doc_id: null,
																upload_step: null,
																app_id: null
															});
														}
													}
												}
											})
										}
									} else {
										if (userMarklist.college_stream_type == true) {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
												type: null,
												filePath: null,
												filename: null,
												lock_transcript: null,
												doc_id: null,
												upload_step: null,
												app_id: null
											});
										} else if (userMarklist.college_stream_type == false) {
											models.facultymaster.find({
												where: {
													faculty: userMarklist.faculty,
													degree: userMarklist.type
												}
											}).then(function (facultyMaster) {
												var totalDocument = 0;
												if (userMarklist.patteren == 'Semester') {
													totalDocument = facultyMaster.year * 2;
													for (var i = 1; i <= totalDocument; i++) {
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i,
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}

												} else if (userMarklist.patteren == 'Annual') {
													totalDocument = facultyMaster.year;
													for (var i = 1; i <= totalDocument; i++) {
														var year = converter.toWordsOrdinal(i);
														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year",
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}
												}
											})
										}
									}
								})
							})
						})
					})
				} else {
					models.userMarkList.findAll({
						where: {
							user_id: req.User.id,
							type: req.query.degreeValue,
							app_id: {
								[Op.eq]: null
							}
						}
					}).then(function (userMarkLists) {
						userMarkLists.forEach(userMarklist => {
							models.UserMarklist_Upload.findAll({
								where: {
									user_marklist_id: userMarklist.id
								}
							}).then(function (UserMarklist_Uploads) {
								models.College.find({
									where: {
										id: userMarklist.collegeId
									}
								}).then(function (college) {
									if (UserMarklist_Uploads.length > 0) {
										UserMarklist_Uploads.forEach(userMarklist_upload => {
											if (userMarklist_upload.name.includes("_Attempt_")) {
												more_marksheets.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											} else {
												view_data.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: (userMarklist_upload) ? userMarklist_upload.name : userMarklist.name,
													type: (userMarklist_upload) ? userMarklist_upload.file_name.split('.').pop() : null,
													filePath: (userMarklist_upload) ? constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													filename: (userMarklist_upload) ? constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarklist_upload.file_name : null,
													lock_transcript: (userMarklist_upload) ? userMarklist_upload.lock_transcript : null,
													doc_id: (userMarklist_upload) ? userMarklist_upload.id : null,
													upload_step: (userMarklist_upload) ? userMarklist_upload.upload_step : null,
													app_id: (userMarklist_upload) ? userMarklist_upload.app_id : null,
												});
											}
										})
										if (userMarklist.college_stream_type == true) {
											var patternName = userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name;
											var availFlag = false;
											view_data.forEach(data => {
												if (data.patternName == patternName) {
													availFlag = true;
												}
											})
											if (availFlag == false) {
												view_data.push({
													faculty: userMarklist.faculty,
													pattern: userMarklist.patteren,
													collegeId: college.id,
													collegeName: college.name,
													education_type: userMarklist.type,
													user_marklistid: userMarklist.id,
													selectDifferent: userMarklist.college_stream_type,
													patternName: patternName,
													type: null,
													filePath: null,
													filename: null,
													lock_transcript: null,
													doc_id: null,
													upload_step: null,
													app_id: null
												});
											}
										} else if (userMarklist.college_stream_type == false) {
											models.facultymaster.find({
												where: {
													faculty: userMarklist.faculty,
													degree: userMarklist.type
												}
											}).then(function (facultyMaster) {
												var totalDocument = 0;
												if (userMarklist.patteren == 'Semester') {
													totalDocument = facultyMaster.year * 2;
													for (var i = 1; i <= totalDocument; i++) {
														var patternName = userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i;
														var availFlag = false;
														view_data.forEach(data => {
															if (data.patternName == patternName) {
																availFlag = true;
															}
														})
														if (availFlag == false) {
															view_data.push({
																faculty: userMarklist.faculty,
																pattern: userMarklist.patteren,
																collegeId: college.id,
																collegeName: college.name,
																education_type: userMarklist.type,
																user_marklistid: userMarklist.id,
																selectDifferent: userMarklist.college_stream_type,
																patternName: patternName,
																type: null,
																filePath: null,
																filename: null,
																lock_transcript: null,
																doc_id: null,
																upload_step: null,
																app_id: null
															});
														}
													}
												} else if (userMarklist.patteren == 'Annual') {
													totalDocument = facultyMaster.year;
													for (var i = 1; i <= totalDocument; i++) {
														var year = converter.toWordsOrdinal(i);
														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
														var patternName = userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year"
														var availFlag = false;
														view_data.forEach(data => {
															if (data.patternName == patternName) {
																availFlag = true;
															}
														})
														if (availFlag == false) {
															view_data.push({
																faculty: userMarklist.faculty,
																pattern: userMarklist.patteren,
																collegeId: college.id,
																collegeName: college.name,
																education_type: userMarklist.type,
																user_marklistid: userMarklist.id,
																selectDifferent: userMarklist.college_stream_type,
																patternName: patternName,
																filePath: null,
																type: null,
																filename: null,
																lock_transcript: null,
																doc_id: null,
																upload_step: null,
																app_id: null
															});
														}
													}
												}
											})
										}
									} else {
										if (userMarklist.college_stream_type == true) {
											view_data.push({
												faculty: userMarklist.faculty,
												pattern: userMarklist.patteren,
												collegeId: college.id,
												collegeName: college.name,
												education_type: userMarklist.type,
												user_marklistid: userMarklist.id,
												selectDifferent: userMarklist.college_stream_type,
												patternName: userMarklist.type + '_' + userMarklist.faculty + '_' + userMarklist.name,
												type: null,
												filePath: null,
												filename: null,
												lock_transcript: null,
												doc_id: null,
												upload_step: null,
												app_id: null
											});
										} else if (userMarklist.college_stream_type == false) {
											models.facultymaster.find({
												where: {
													faculty: userMarklist.faculty,
													degree: userMarklist.type
												}
											}).then(function (facultyMaster) {
												var totalDocument = 0;
												if (userMarklist.patteren == 'Semester') {
													totalDocument = facultyMaster.year * 2;
													for (var i = 1; i <= totalDocument; i++) {
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_Semester " + i,
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}

												} else if (userMarklist.patteren == 'Annual') {
													totalDocument = facultyMaster.year;
													for (var i = 1; i <= totalDocument; i++) {
														var year = converter.toWordsOrdinal(i);
														var inWords = year.charAt(0).toUpperCase() + year.slice(1);
														view_data.push({
															faculty: userMarklist.faculty,
															pattern: userMarklist.patteren,
															collegeId: college.id,
															collegeName: college.name,
															education_type: userMarklist.type,
															user_marklistid: userMarklist.id,
															selectDifferent: userMarklist.college_stream_type,
															patternName: userMarklist.type + "_" + userMarklist.faculty + "_" + inWords + " Year",
															type: null,
															filePath: null,
															filename: null,
															lock_transcript: null,
															doc_id: null,
															upload_step: null,
															app_id: null
														});
													}
												}
											})
										}
									}
								})
							})
						})
					})
				}
			}
			setTimeout(() => {
				res.json({
					status: 200,
					data: view_data,
					more_marksheets: more_marksheets
				})
			}, 3000);
		})

	}

});

router.get('/getUserMasterDetails', middlewares.getUserInfo, function (req, res) {
	var view_data = [];
	models.userMarkList.find({
		where: {
			user_id: req.User.id,
			type: "Masters"
		}

	}).then(function (userExist) {
		if (userExist != null && userExist != undefined && userExist.college_stream_type == false) {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters"
				}
			}).then(function (user) {
				if (user.length > 0) {
					user.forEach(function (userData) {
						models.College.find({
							where: {
								id: userData.collegeId
							}
						}).then(function (college) {
							view_data.push({
								faculty: userData.faculty,
								pattern: userData.patteren,
								collegeId: college.id,
								collegeName: college.name,
								education_type: userData.type,
								user_marklistid: userData.id,
								selectDifferent: userData.college_stream_type,


							});
						})

					})
					setTimeout(function () {
						res.json({
							status: 200,
							data: view_data
						})
					}, 1000);

				}
			});
		} else if (userExist != null && userExist != undefined && userExist.college_stream_type == true) {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "Masters"
				}
			}).then(function (user) {
				if (user.length > 0) {
					user.forEach(function (userData) {
						models.College.find({
							where: {
								id: userData.collegeId
							}
						}).then(function (college) {
							view_data.push({
								faculty: userData.faculty,
								pattern: userData.patteren,
								collegeId: college.id,
								collegeName: college.name,
								education_type: userData.type,
								user_marklistid: userData.id,
								selectDifferent: userData.college_stream_type,
								patternName: userData.name

							});
						})

					})
					setTimeout(function () {
						res.json({
							status: 200,
							data: view_data
						})
					}, 1000);

				}
			});
		}
		else {
			res.json({
				status: 400,
				message: 'There are no details of Bachelor please add Bachelor details go to 2nd step!!..'
			})

		}

	});
});

router.get('/getUserPhdDetails', middlewares.getUserInfo, function (req, res) {
	var view_data = [];
	models.userMarkList.find({
		where: {
			user_id: req.User.id,
			type: "PhD"
		}

	}).then(function (userExist) {
		if (userExist != null && userExist != undefined && userExist.college_stream_type == false) {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "PhD"
				}
			}).then(function (user) {
				if (user.length > 0) {
					user.forEach(function (userData) {
						models.College.find({
							where: {
								id: userData.collegeId
							}
						}).then(function (college) {
							view_data.push({
								faculty: userData.faculty,
								pattern: userData.patteren,
								collegeId: college.id,
								collegeName: college.name,
								education_type: userData.type,
								user_marklistid: userData.id,
								selectDifferent: userData.college_stream_type,


							});
						})

					})
					setTimeout(function () {
						res.json({
							status: 200,
							data: view_data
						})
					}, 1000);

				}
			});
		} else if (userExist != null && userExist != undefined && userExist.college_stream_type == true) {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					type: "PhD"
				}
			}).then(function (user) {
				if (user.length > 0) {
					user.forEach(function (userData) {
						models.College.find({
							where: {
								id: userData.collegeId
							}
						}).then(function (college) {
							view_data.push({
								faculty: userData.faculty,
								pattern: userData.patteren,
								collegeId: college.id,
								collegeName: college.name,
								education_type: userData.type,
								user_marklistid: userData.id,
								selectDifferent: userData.college_stream_type,
								patternName: userData.name

							});
						})

					})
					setTimeout(function () {
						res.json({
							status: 200,
							data: view_data
						})
					}, 1000);

				}
			});
		}
		else {
			res.json({
				status: 400,
				message: 'There are no details of Bachelor please add Bachelor details go to 2nd step!!..'
			})

		}

	});
});

router.get('/getUploadedMarklist', middlewares.getUserInfo, function (req, res) {
	var marklistDataInfos = [];
	var counts = 0
	models.userMarkList.find({
		where: {
			user_id: req.User.id,
			type: 'Bachelors',
		}
	}).then(marklistInfos => {

		if (marklistInfos) {
			models.UserMarklist_Upload.getBachelorsMarksheetData(marklistInfos.user_id).then(function (marklistInfos) {
				if (marklistInfos.length > 0) {
					marklistInfos.forEach(marklistInfo => {
						if ((marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '') && (marklistInfo.usermarklist_file_name == null || marklistInfo.usermarklist_file_name == '')) {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})
						} else if ((marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') && (marklistInfo.file_name == null || marklistInfo.file_name == '')) {
							var fileName = marklistInfo.usermarklist_file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							MarklistId = marklistInfo.usermarklist_id,
								marklistNamee = marklistInfo.usermarklist_name

							marklistDataInfos.push({
								user_id: marklistInfo.usermarklist_user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.usermarklist_id,
								marklist_name_pattern: marklistInfo.usermarklist_name ? marklistInfo.usermarklist_name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.type ? marklistInfo.type : '',
								lock_transcript: marklistInfo.user_lock_marklist

							})

						} else if (marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '' && marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})

							// var fileNamePrevious = marklistInfo.usermarklist_file_name;
							// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
							// filenameePrevious = constant.BASE_URL+"/upload/marklist/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
							// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							// MarklistIdPrevious = marklistInfo.usermarklist_id ,
							// marklistNameePrevious = marklistInfo.usermarklist_name

							// marklistDataInfos.push({
							// 	user_id : marklistInfo.usermarklist_user_id,
							// 	//collegeId : transcriptInfo.collegeId,
							// 	//collegeName : clgdata.name,
							// 	fileName : filenameePrevious ? filenameePrevious : '',
							// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
							// 	userUploadMarklistId :marklistInfo.usermarklist_id,
							// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
							// 	education_type:marklistInfo.type ? marklistInfo.type : '',
							// 	lock_transcript:marklistInfo.user_lock_marklist 

							// })
						}

					});
					setTimeout(function () {
						res.json({
							status: 200,
							data: marklistDataInfos
						});
					}, 500);
				} else {
					res.json({
						status: 400,
						message: 'There are no uploaded marksheets please upload marksheets!!!..'
					})
				}

			});

		} else {
			res.json({
				status: 400,
				message: 'There are no uploaded marksheets please upload marksheets!!!..'
			});
		}

	})
});

router.get('/getUploadedMasterMarklist', middlewares.getUserInfo, function (req, res) {
	var marklistDataInfos = [];
	var counts = 0
	models.userMarkList.find({
		where: {
			user_id: req.User.id,
			type: 'Masters',
		}
	}).then(marklistInfos => {

		if (marklistInfos) {
			models.UserMarklist_Upload.getMastersMarksheetData(marklistInfos.user_id).then(function (marklistInfos) {
				if (marklistInfos.length > 0) {
					marklistInfos.forEach(marklistInfo => {
						if ((marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '') && (marklistInfo.usermarklist_file_name == null || marklistInfo.usermarklist_file_name == '')) {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})
						} else if ((marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') && (marklistInfo.file_name == null || marklistInfo.file_name == '')) {
							var fileName = marklistInfo.usermarklist_file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							MarklistId = marklistInfo.usermarklist_id,
								marklistNamee = marklistInfo.usermarklist_name

							marklistDataInfos.push({
								user_id: marklistInfo.usermarklist_user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.usermarklist_id,
								marklist_name_pattern: marklistInfo.usermarklist_name ? marklistInfo.usermarklist_name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.type ? marklistInfo.type : '',
								lock_transcript: marklistInfo.user_lock_marklist

							})

						} else if (marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '' && marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})

							// var fileNamePrevious = marklistInfo.usermarklist_file_name;
							// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
							// filenameePrevious = constant.BASE_URL+"/upload/marklist/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
							// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							// MarklistIdPrevious = marklistInfo.usermarklist_id ,
							// marklistNameePrevious = marklistInfo.usermarklist_name

							// marklistDataInfos.push({
							// 	user_id : marklistInfo.usermarklist_user_id,
							// 	//collegeId : transcriptInfo.collegeId,
							// 	//collegeName : clgdata.name,
							// 	fileName : filenameePrevious ? filenameePrevious : '',
							// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
							// 	userUploadMarklistId :marklistInfo.usermarklist_id,
							// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
							// 	education_type:marklistInfo.type ? marklistInfo.type : '',
							// 	lock_transcript:marklistInfo.user_lock_marklist 

							// })
						}

					});
					setTimeout(function () {
						res.json({
							status: 200,
							data: marklistDataInfos
						});
					}, 500);
				} else {
					res.json({
						status: 400,
						message: 'There are no uploaded marksheets please upload marksheets!!!..'
					})
				}

			});

		} else {
			res.json({
				status: 400,
				message: 'User does not exist!!..'
			});
		}

	})
});


router.get('/getUploadedPhdMarklist', middlewares.getUserInfo, function (req, res) {
	var marklistDataInfos = [];
	var counts = 0
	models.userMarkList.find({
		where: {
			user_id: req.User.id,
			type: 'PhD',
		}
	}).then(marklistInfos => {

		if (marklistInfos) {
			models.UserMarklist_Upload.getPhdMarksheetData(marklistInfos.user_id).then(function (marklistInfos) {
				if (marklistInfos.length > 0) {
					marklistInfos.forEach(marklistInfo => {
						if ((marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '') && (marklistInfo.usermarklist_file_name == null || marklistInfo.usermarklist_file_name == '')) {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})
						} else if ((marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') && (marklistInfo.file_name == null || marklistInfo.file_name == '')) {
							var fileName = marklistInfo.usermarklist_file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							MarklistId = marklistInfo.usermarklist_id,
								marklistNamee = marklistInfo.usermarklist_name

							marklistDataInfos.push({
								user_id: marklistInfo.usermarklist_user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.usermarklist_id,
								marklist_name_pattern: marklistInfo.usermarklist_name ? marklistInfo.usermarklist_name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.type ? marklistInfo.type : '',
								lock_transcript: marklistInfo.user_lock_marklist

							})

						} else if (marklistInfo.file_name != 'null' && marklistInfo.file_name != null && marklistInfo.file_name != '' && marklistInfo.usermarklist_file_name != 'null' && marklistInfo.usermarklist_file_name != null && marklistInfo.usermarklist_file_name != '') {
							var fileName = marklistInfo.file_name;
							var fileExtension = fileName.substr((fileName.lastIndexOf('.') + 1));
							filenamee = constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name
							fileDeletePath = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.file_name;
							MarklistId = marklistInfo.id,
								marklistNamee = marklistInfo.name

							marklistDataInfos.push({
								user_id: marklistInfo.user_id,
								//collegeId : transcriptInfo.collegeId,
								//collegeName : clgdata.name,
								fileName: filenamee ? filenamee : '',
								fileNameShow: marklistInfo.file_name ? marklistInfo.file_name : '',
								fileDeletePath: fileDeletePath ? fileDeletePath : '',
								userUploadMarklistId: marklistInfo.id,
								marklist_name_pattern: marklistInfo.name ? marklistInfo.name : '',
								fileExtension: fileExtension ? fileExtension : '',
								education_type: marklistInfo.education_type ? marklistInfo.education_type : '',
								lock_transcript: marklistInfo.lock_transcript

							})

							// var fileNamePrevious = marklistInfo.usermarklist_file_name;
							// var fileExtensionPrevious = fileNamePrevious.substr((fileName.lastIndexOf('.') + 1));
							// filenameePrevious = constant.BASE_URL+"/upload/marklist/"+ req.User.id+"/"+ marklistInfo.usermarklist_file_name
							// fileDeletePathPrevious = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + marklistInfo.usermarklist_file_name;
							// MarklistIdPrevious = marklistInfo.usermarklist_id ,
							// marklistNameePrevious = marklistInfo.usermarklist_name

							// marklistDataInfos.push({
							// 	user_id : marklistInfo.usermarklist_user_id,
							// 	//collegeId : transcriptInfo.collegeId,
							// 	//collegeName : clgdata.name,
							// 	fileName : filenameePrevious ? filenameePrevious : '',
							// 	fileNameShow : marklistInfo.usermarklist_file_name ? marklistInfo.usermarklist_file_name : '',
							// 	fileDeletePath : fileDeletePathPrevious ? fileDeletePathPrevious : '',
							// 	userUploadMarklistId :marklistInfo.usermarklist_id,
							// 	marklist_name_pattern : marklistInfo.usermarklist_name? marklistInfo.usermarklist_name : '',
							// 	fileExtension:fileExtensionPrevious ? fileExtensionPrevious : '',
							// 	education_type:marklistInfo.type ? marklistInfo.type : '',
							// 	lock_transcript:marklistInfo.user_lock_marklist 

							// })
						}

					});
					setTimeout(function () {
						res.json({
							status: 200,
							data: marklistDataInfos
						});
					}, 500);
				} else {
					res.json({
						status: 400,
						message: 'There are no uploaded marksheets please upload marksheets!!!..'
					})
				}

			});

		} else {
			res.json({
				status: 400,
				message: 'User does not exist!!..'
			});
		}

	})
});

router.get('/downloadMarklist', middlewares.getUserInfo, function (req, res) {
	var file_name = req.query.file_name;
	var userId = req.User.id;
	const downloadData = constant.FILE_LOCATION + "public/upload/marklist/" + userId + "/" + file_name;
	res.download(downloadData);
});

router.post('/deleteMarklist', middlewares.getUserInfo, function (req, res) {
	var userData = req.body.data
	models.UserMarklist_Upload.find({
		where: {
			id: userData.userUploadMarklistId,
			user_id: req.User.id
		}
	}).then(function (userMarklist) {
		if (userMarklist) {
			var path = userData.fileDeletePath
			//require('fs').unlink(path, function(err) {
			userMarklist.destroy().then(function (delmarklist) {
				if (delmarklist) {
					res.json({
						status: 200,
						message: "Marksheet deleted Successfully"
					})

				} else {
					res.json({
						status: 400,
						message: "Marksheet not delete"
					});
				}
			});
			//});
		} else {
			models.userMarkList.find({
				where: {
					id: userData.userUploadMarklistId,
					user_id: req.User.id
				}
			}).then(function (userMarklists) {
				if (userMarklists) {
					var path = userData.fileDeletePath
					//require('fs').unlink(path, function(err) {
					userMarklists.destroy().then(function (delmarklist) {
						if (delmarklist) {
							res.json({
								status: 200,
								message: "Marksheet deleted Successfully"
							})

						} else {
							res.json({
								status: 400,
								message: "Marksheet not delete"
							});
						}
					});
					//});
					models.UserMarklist_Upload.find({
						where: {
							user_marklist_id: userMarklists.id,
							user_id: req.User.id
						}
					}).then(function (userMarklistsUpload) {
						if (userMarklistsUpload) {
							var path = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklistsUpload.file_name;
							//require('fs').unlink(path, function(err) {
							userMarklistsUpload.destroy().then(function (delmarklist) {
								if (delmarklist) {
									res.json({
										status: 200,
										message: "Marksheet deleted Successfully"
									})

								} else {
									res.json({
										status: 400,
										message: "Marksheet not delete"
									});
								}
							});
							//});

						}

					});


				}

			});

		}
	});
});

router.post('/deleteErrataMarklist', middlewares.getUserInfo, function (req, res) {
	var userData = req.body.data
	models.UserMarklist_Upload.find({
		where: {
			id: userData.id,
			user_id: userData.user_id
		}
	}).then(function (userMarklist) {
		if (userMarklist) {
			var path = userData.file_path
			//('fs').unlink(path, function(err) {
			userMarklist.destroy().then(function (delmarklist) {
				models.Activitytracker.create({
					user_id: userData.user_id,
					activity: delmarklist.name + 'Deleted',
					data: delmarklist.file_name + ' deleted by ' + req.User.email,
					applicaiton_id: userData.app_id
				})

				if (delmarklist) {
					res.json({
						status: 200,
						message: "Marksheet deleted Successfully"
					})

				} else {
					res.json({
						status: 400,
						message: "Marksheet not delete"
					});
				}
			});
			//});
		} else {
			models.userMarkList.find({
				where: {
					id: userData.id,
					user_id: userData.user_id
				}
			}).then(function (userMarklists) {
				if (userMarklists) {
					var path = userData.file_path
					//require('fs').unlink(path, function(err) {
					userMarklists.destroy().then(function (delmarklist) {
						if (delmarklist) {
							models.Activitytracker.create({
								user_id: userData.user_id,
								activity: delmarklist.name + 'Deleted',
								data: delmarklist.file_name + ' deleted by ' + req.User.email,
								applicaiton_id: userData.app_id
							})

							res.json({
								status: 200,
								message: "Marksheet deleted Successfully"
							})

						} else {
							res.json({
								status: 400,
								message: "Marksheet not delete"
							});
						}
					});
					//});
					models.UserMarklist_Upload.find({
						where: {
							user_marklist_id: userMarklists.id,
							user_id: userData.user_id
						}
					}).then(function (userMarklistsUpload) {
						if (userMarklistsUpload) {
							var path = constant.FILE_LOCATION + "public/upload/marklist/" + req.User.id + "/" + userMarklistsUpload.file_name;
							//	require('fs').unlink(path, function(err) {
							userMarklistsUpload.destroy().then(function (delmarklist) {
								if (delmarklist) {
									models.Activitytracker.create({
										user_id: userData.user_id,
										activity: delmarklist.name + 'Deleted',
										data: delmarklist.file_name + ' deleted by ' + req.User.email,
										applicaiton_id: userData.app_id
									})

									res.json({
										status: 200,
										message: "Marksheet deleted Successfully"
									})

								} else {
									res.json({
										status: 400,
										message: "Marksheet not delete"
									});
								}
							});
							//});

						}

					});


				}

			});

		}
	});
});

router.get('/sendEmail', function (req, res) {
	var user_id = req.query.user_id;
	models.Applied_For_Details.find({
		where: {
			user_id: user_id
		}
	}).then(function (user) {
		if (user.educationalDetails == true) {
			models.User_Transcript.findAll({
				where: {
					user_id: user_id
				}
			}).then(function (userTranscripts) {
				var collegeData = [];
				userTranscripts.forEach(transcript => {
					var singleCollege = {
						user_id: '',
						collegeName: '',
						studentName: '',
						college_id: '',
						collegeEmail: '',
						user_transcript: [],
						user_markList: []
					}
					if (transcript.collegeId != 0 && transcript.collegeId != null) {
						models.College.find({
							where: {
								id: transcript.collegeId
							}
						}).then(function (college) {
							if (collegeData.length < 1) {
								singleCollege.user_id = user_id;
								singleCollege.collegeName = college.name;
								singleCollege.collegeEmail = college.emailId;
								singleCollege.studentName = user.name + ' ' + user.surname;
								singleCollege.college_id = college.id;
								singleCollege.alternateEmail = college.alternateEmailId;
								singleCollege.user_transcript.push({ 'fileName': transcript.file_name, 'transcript': 'upload/transcript/' + user_id + "/" + urlencode(transcript.file_name) });
								collegeData.push(singleCollege);
							} else {
								var transcriptFlag = false;
								for (var i = 0; i < collegeData.length; i++) {
									if (collegeData[i].college_id == transcript.collegeId) {
										collegeData[i].user_transcript.push({ 'fileName': transcript.file_name, 'transcript': 'upload/transcript/' + user_id + "/" + urlencode(transcript.file_name) });
										transcriptFlag = true;
										break;
									}
								}
								if (transcriptFlag == false) {
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.alternateEmail = college.alternateEmailId;
									singleCollege.user_transcript.push({ 'fileName': transcript.file_name, 'transcript': 'upload/transcript/' + user_id + "/" + urlencode(transcript.file_name) });
									collegeData.push(singleCollege);
								}
							}
						})
					}
				});
				models.userMarkList.find({
					where: {
						user_id: user_id
					}
				}).then(function (userMarkListsData) {
					models.UserMarklist_Upload.getMarksheetDataSendToInstitute(userMarkListsData.user_id).then(function (userMarkLists) {
						userMarkLists.forEach(markList => {
							var singleCollege = {
								user_id: '',
								collegeName: '',
								studentName: '',
								college_id: '',
								collegeEmail: '',
								user_transcript: [],
								user_markList: []
							}
							models.College.find({
								where: {
									id: markList.collegeId
								}
							}).then(function (college) {
								if (collegeData.length < 1) {
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.alternateEmail = college.alternateEmailId;
									if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
									} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);
									} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);
									}
								} else {
									var flag = false;
									for (var i = 0; i < collegeData.length; i++) {
										if (collegeData[i].college_id == markList.collegeId) {
											if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												flag = true;
												break;
											} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;
											} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												//flag = true;

												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;
											}
										}
									}
									if (flag == false) {
										singleCollege.user_id = user_id;
										singleCollege.collegeName = college.name;
										singleCollege.studentName = user.name + ' ' + user.surname;
										singleCollege.college_id = college.id;
										singleCollege.collegeEmail = college.emailId;
										singleCollege.alternateEmail = college.alternateEmailId;
										if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
										} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);
										} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);

										}
									}
								}
							});
						})
						setTimeout(function () {
							request.post(constant.BASE_URL_SENDGRID + 'transcriptVerificationEmailShweta', {
								json: {
									collegeData: collegeData
								}
							}, function (error, response, body) {
								if (body.notSent.length > 0) {
									body.noteSent.forEach(data => {
										models.User_Transcript.updateSingleCollegeEmailStatus(user_id, data.college_id, null, 'not sent');
									})
								}
								body.data.forEach(msgId => {
									models.User_Transcript.updateSingleCollegeEmailStatus(user_id, msgId.college_id, msgId.msg_id, 'sent');
								})

							})
						}, 1000);
					});
				})
			})
		}
		if (user.instructionalField == true) {
			var collegeData = [];
			models.InstructionalDetails.find({
				where: {
					userId: user_id
				}
			}).then(function (instructional) {
				models.userMarkList.find({
					where: {
						user_id: user_id
					}
				}).then(function (userMarkListsData) {
					models.UserMarklist_Upload.getMarksheetDataSendToCollege(userMarkListsData.user_id, userMarkListsData.collegeId).then(function (userMarkLists) {
						userMarkLists.forEach(markList => {
							var singleCollege = {
								user_id: '',
								collegeName: '',
								studentName: '',
								college_id: '',
								collegeEmail: '',
								courseName: '',
								user_markList: [],
								alternateEmail: ''
							}
							models.College.find({
								where: {
									id: markList.collegeId
								}
							}).then(function (college) {
								if (collegeData.length < 1) {
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.studentName = instructional.studentName;
									singleCollege.college_id = college.id;
									singleCollege.courseName = instructional.courseName;
									singleCollege.alternateEmail = college.alternateEmailId;
									if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
									} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);
									} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);

									}
								} else {
									var flag = false;
									for (var i = 0; i < collegeData.length; i++) {
										if (collegeData[i].college_id == markList.collegeId) {
											if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												flag = true;
												break;
											} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;
											} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												flag = true;
												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;

											}
										}
									}
									if (flag == false) {
										singleCollege.user_id = user_id;
										singleCollege.collegeName = college.name;
										singleCollege.studentName = instructional.studentName;
										singleCollege.courseName = instructional.courseName;
										singleCollege.college_id = college.id;
										singleCollege.collegeEmail = college.emailId;
										singleCollege.alternateEmail = college.alternateEmailId;
										if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
										} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);
										} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);
										}
									}
								}
							});
						})
						setTimeout(() => {
							request.post(constant.BASE_URL_SENDGRID + 'instructionalFieldVerificationEmail', {
								json: {
									collegeData: collegeData
								}
							}, function (error, response, body) {
								if (body.notSent.length > 0) {
									body.noteSent.forEach(data => {
										models.InstructionalDetails.updateSingleEmailStatus(user_id, null, 'not sent');
									})
								}
								body.data.forEach(msgId => {
									models.InstructionalDetails.updateSingleEmailStatus(user_id, msgId.msg_id, 'sent');
								})
							})
						}, 1000);
					});
				})
			})
		}
		if (user.curriculum == true) {
			var collegeData = [];
			models.User_Curriculum.findAll({
				where: {
					user_id: user_id
				}
			}).then(function (userCurriculums) {
				userCurriculums.forEach(curriculum => {
					var singleCollege = {
						user_id: '',
						collegeName: '',
						studentName: '',
						college_id: '',
						collegeEmail: '',
						alternateEmail: '',
						user_curriculum: [],
						user_markList: []
					}
					models.College.find({
						where: {
							id: curriculum.collegeId
						}
					}).then(function (college) {
						if (collegeData.length < 1) {
							singleCollege.user_id = user_id;
							singleCollege.collegeName = college.name;
							singleCollege.collegeEmail = college.emailId;
							singleCollege.studentName = user.name + ' ' + user.surname;
							singleCollege.college_id = college.id;
							singleCollege.alternateEmail = college.alternateEmailId;
							singleCollege.user_curriculum.push({ 'fileName': curriculum.file_name, 'curriculum': 'upload/curriculum/' + user_id + "/" + urlencode(curriculum.file_name) });
							collegeData.push(singleCollege);
						} else {
							var transcriptFlag = false;
							for (var i = 0; i < collegeData.length; i++) {
								if (collegeData[i].college_id == curriculum.collegeId) {
									collegeData[i].user_curriculum.push({ 'fileName': curriculum.file_name, 'curriculum': 'upload/curriculum/' + user_id + "/" + urlencode(curriculum.file_name) });
									transcriptFlag = true;
									break;
								}
							}
							if (transcriptFlag == false) {
								singleCollege.user_id = user_id;
								singleCollege.collegeName = college.name;
								singleCollege.studentName = user.name + ' ' + user.surname;
								singleCollege.college_id = college.id;
								singleCollege.collegeEmail = college.emailId;
								singleCollege.alternateEmail = college.alternateEmailId;
								singleCollege.user_curriculum.push({ 'fileName': curriculum.file_name, 'curriculum': 'upload/curriculum/' + user_id + "/" + urlencode(curriculum.file_name) });
								collegeData.push(singleCollege);
							}
						}
					})
				});
				models.userMarkList.find({
					where: {
						user_id: user_id
					}
				}).then(function (userMarkListsData) {
					models.UserMarklist_Upload.getMarksheetDataSendToCollege(userMarkListsData.user_id).then(function (userMarkLists) {
						userMarkLists.forEach(markList => {
							var singleCollege = {
								user_id: '',
								collegeName: '',
								studentName: '',
								college_id: '',
								collegeEmail: '',
								user_curriculum: [],
								user_markList: []
							}
							models.College.find({
								where: {
									id: markList.collegeId
								}
							}).then(function (college) {
								if (collegeData.length < 1) {
									singleCollege.user_id = user_id;
									singleCollege.collegeName = college.name;
									singleCollege.collegeEmail = college.emailId;
									singleCollege.studentName = user.name + ' ' + user.surname;
									singleCollege.college_id = college.id;
									singleCollege.alternateEmail = college.alternateEmailId;
									if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
									} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);
									} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
										singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
										collegeData.push(singleCollege);
										singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
										collegeData.push(singleCollege);
									}
								} else {
									var flag = false;
									for (var i = 0; i < collegeData.length; i++) {
										if (collegeData[i].college_id == markList.collegeId) {
											if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												flag = true;
												break;
											} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;
											} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
												collegeData[i].user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
												flag = true;
												collegeData[i].user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
												flag = true;
												break;
											}
										}
									}
									if (flag == false) {
										singleCollege.user_id = user_id;
										singleCollege.collegeName = college.name;
										singleCollege.studentName = user.name + ' ' + user.surname;
										singleCollege.college_id = college.id;
										singleCollege.collegeEmail = college.emailId;
										singleCollege.alternateEmail = college.alternateEmailId;
										if ((markList.file_name != 'null' && markList.file_name != null) && (markList.usermarklist_file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
										} else if ((markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) && (markList.file_name == null)) {
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);
										} else if (markList.file_name != 'null' && markList.file_name != null && markList.usermarklist_file_name != 'null' && markList.usermarklist_file_name != null) {
											singleCollege.user_markList.push({ 'fileName': markList.file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.file_name) });
											collegeData.push(singleCollege);
											singleCollege.user_markList.push({ 'fileName': markList.usermarklist_file_name, 'markList': 'upload/marklist/' + user_id + "/" + urlencode(markList.usermarklist_file_name) });
											collegeData.push(singleCollege);
										}
									}
								}
							});
						})
						setTimeout(function () {
							request.post(constant.BASE_URL_SENDGRID + 'curriculumVerificationEmail', {
								json: {
									collegeData: collegeData
								}
							}, function (error, response, body) {
								if (body.notSent.length > 0) {
									body.noteSent.forEach(data => {
										models.User_Curriculum.updateSingleCollegeEmailStatus(user_id, data.college_id, null, 'not sent');
									})
								}
								body.data.forEach(msgId => {
									models.User_Curriculum.updateSingleCollegeEmailStatus(user_id, msgId.college_id, msgId.msg_id, 'sent');
								})
							})
						}, 1000);
					});
				})
			})
		}
		res.json({
			status: 200
		})
	})
});

router.get('/preview', middlewares.getUserInfo, function (req, res) {
	var userDetails = {};
	userDetails.studentName = req.User.name + ' ' + req.User.surname;
	userDetails.studentEmail = req.User.email;
	userDetails.mobileNumber = req.User.mobile_country_code + ' ' + req.User.mobile;

	models.Applied_For_Details.find({
		where: {
			user_id: req.User.id,
			app_id: {
				[Op.eq]: null
			}
		}
	}).then(function (appliedDetails) {
		userDetails.educationalDetails = (appliedDetails.educationalDetails == true) ? true : false;
		userDetails.instructionalMethod = (appliedDetails.instructionalField == true) ? true : false;
		userDetails.curriculum = (appliedDetails.curriculum == true) ? true : false;
		userDetails.gradToPer = (appliedDetails.gradToPer == true) ? true : false;
		userDetails.degree = appliedDetails.applying_for;
		userDetails.affiliation = (appliedDetails.affiliation == true) ? true : false;
		userDetails.CompetencyLetter = (appliedDetails.CompetencyLetter == true) ? true : false;
		userDetails.LetterforNameChange = (appliedDetails.LetterforNameChange == true) ? true : false;

		models.userMarkList.findAll({
			where: {
				user_id: req.User.id
			}
		}).then(function (userMarkList) {
			if (userMarkList[0].previous_data == true) {
				var differentCollegeStream = (userMarkList[0].college_stream_type == true) ? 'Yes' : 'No';
				var collegeData = [];
				if (differentCollegeStream == 'Yes') {
					userMarkList.forEach(marklist => {
						models.College.find({
							where: {
								id: marklist.collegeId
							}
						}).then(function (college) {
							collegeData.push({
								name: college.name,
								year: marklist.type + " " + marklist.faculty + " " + marklist.name
							})
						})
					})
				} else {
					models.College.find({
						where: {
							id: userMarkList[0].collegeId
						}
					}).then(function (college) {
						collegeData.push({
							name: college.name,
							year: userMarkList[0].type + " " + userMarkList[0].faculty + " " + userMarkList[0].name
						})
					})
				}

				models.UserMarklist_Upload.findAll({
					where: {
						user_id: req.User.id
					}
				}).then(function (userMarksheets) {
					var marksheets = [];
					userMarksheets.forEach(userMarksheet => {
						var imgArr = userMarksheet.file_name.split('.');
						var extension = imgArr[imgArr.length - 1].trim();
						marksheets.push({
							name: userMarksheet.name,
							degree: userMarksheet.education_type,
							filePath: constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarksheet.file_name,
							extension: extension
						})
					})
					var transcripts = [];
					var gradToPerLetters = [];
					var curriculum = [];
					var instructionalDetails = [];
					var letterfor_namechange = [];
					var affiliationDetails = [];
					var competency_letter = [];
					if (appliedDetails.educationalDetails == true) {
						models.User_Transcript.findAll({
							where: {
								user_id: req.User.id
							}
						}).then(function (userTranscripts) {
							userTranscripts.forEach(userTranscript => {
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								transcripts.push({
									name: userTranscript.name,
									filePath: constant.BASE_URL + "/upload/transcript/" + req.User.id + "/" + userTranscript.file_name,
									extension: extension
								})
							})
						})
					}

					if (appliedDetails.curriculum == true) {
						models.User_Curriculum.findAll({
							where: {
								user_id: req.User.id
							}
						}).then(function (userCurriculums) {
							userCurriculums.forEach(userCurriculum => {
								var imgArr = userCurriculum.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								curriculum.push({
									name: userCurriculum.name,
									filePath: constant.BASE_URL + "/upload/curriculum/" + req.User.id + "/" + userCurriculum.file_name,
									extension: extension
								})
							})
						})
					}
					if (appliedDetails.gradToPer == true) {
						models.GradeToPercentageLetter.findAll({
							where: {
								user_id: req.User.id
							}
						}).then(function (letters) {
							letters.forEach(letter => {
								var imgArr = letter.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								gradToPerLetters.push({
									name: letter.name,
									filePath: constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letter.file_name,
									extension: extension
								})
							})
						})
					}
					if (appliedDetails.instructionalField == true) {
						models.InstructionalDetails.findAll({
							where: {
								userId: req.User.id,
							}
						}).then(function (instruction) {
							instructionalDetails = instruction;
						})
					}
					if (appliedDetails.LetterNameChange == true) {
						models.Letterfor_NameChange.findAll({
							where: {
								user_id: req.User.id,
							}
						}).then(function (letternamechange) {
							letterfor_namechange = letternamechange;
						})
					}
					if (appliedDetails.affiliation == true) {
						models.Affiliation_Letter.findAll({
							where: {
								user_id: req.User.id,
							}
						}).then(function (Affiliation) {
							affiliationDetails: Affiliation;
						})
					}
					if (appliedDetails.CompetencyLetter == true) {
						models.competency_letter.findAll({
							where: {
								user_id: req.User.id
							}
						}).then(function (userTranscripts) {
							userTranscripts.forEach(userTranscript => {
								var imgArr = userTranscript.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								competency_letter.push({
									name: userTranscript.name,
									filePath: constant.BASE_URL + "/upload/CompetencyLetter/" + req.User.id + "/" + userTranscript.file_name,
									extension: extension
								})
							})
						})
					}

					setTimeout(() => {
						models.Institution_details.findAll({
							where: {
								user_id: req.User.id,
								app_id: {
									[Op.eq]: null
								}
							}

						}).then(function (institutions) {
							//console.log("instructionalDetails",instructionalDetails)
							res.json({
								status: 200,
								userDetails: userDetails,
								collegeData: collegeData,
								marksheets: marksheets,
								transcripts: transcripts,
								instructionalDetails: instructionalDetails,
								curriculum: curriculum,
								purpose: institutions,
								CompetencyLetter: competency_letter,
								LetterNameChange: letterfor_namechange,
								Affiliation_Letter: affiliationDetails

							})

						})
					}, 1000)
					console.log("marksheets")
				})
			} else {
				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						app_id: {
							[Op.eq]: null
						}
					}
				}).then(function (markLists) {
					if (markLists.length > 0) {
						var differentCollegeStream = (markLists[0].college_stream_type == true) ? 'Yes' : 'No';
						var collegeData = [];
						if (differentCollegeStream == 'Yes') {
							markLists.forEach(marklist => {
								models.College.find({
									where: {
										id: marklist.collegeId
									}
								}).then(function (college) {
									collegeData.push({
										name: college.name,
										year: marklist.type + " " + marklist.faculty + " " + marklist.name
									})
								})
							})
						} else {
							models.College.find({
								where: {
									id: markLists[0].collegeId
								}
							}).then(function (college) {
								collegeData.push({
									name: college.name,
									year: markLists[0].type + " " + markLists[0].faculty + " " + markLists[0].name
								})
							})
						}

						models.UserMarklist_Upload.findAll({
							where: {
								user_id: req.User.id,
								app_id: {
									[Op.eq]: null
								}
							}
						}).then(function (userMarksheets) {
							var marksheets = [];
							userMarksheets.forEach(userMarksheet => {
								var imgArr = userMarksheet.file_name.split('.');
								var extension = imgArr[imgArr.length - 1].trim();
								marksheets.push({
									name: userMarksheet.name,
									degree: userMarksheet.education_type,
									filePath: constant.BASE_URL + "/upload/marklist/" + req.User.id + "/" + userMarksheet.file_name,
									extension: extension
								})
							})
							var transcripts = [];
							var compentencyletter = [];
							var letter_namechange = [];
							var gradToPerLetters = [];
							var curriculum = [];
							var NameChanges = [];
							if (appliedDetails.educationalDetails == true) {
								models.User_Transcript.findAll({
									where: {
										user_id: req.User.id,
										type: {
											[Op.like]: "%_transcripts%"

										},
										app_id: {
											[Op.eq]: null
										}
									}
								}).then(function (userTranscripts) {

									userTranscripts.forEach(userTranscript => {
										var imgArr = userTranscript.file_name.split('.');
										var extension = imgArr[imgArr.length - 1].trim();
										transcripts.push({
											name: userTranscript.name,
											filePath: constant.BASE_URL + "/upload/transcript/" + req.User.id + "/" + userTranscript.file_name,
											extension: extension,
											type: userTranscript.type

										})
									})
								})
							}

							if (appliedDetails.CompetencyLetter == true) {
								console.log('in competency')
								models.competency_letter.findAll({
									where: {
										user_id: req.User.id,
									}
								}).then(function (competencyLetter) {
									competencyLetter.forEach(competency_letter => {
										var imgArr = competency_letter.file_name.split('.');
										var extension = imgArr[imgArr.length - 1].trim();
										compentencyletter.push({
											name: competency_letter.name,
											filePath: constant.BASE_URL + "/upload/CompetencyLetter/" + req.User.id + "/" + competency_letter.file_name,
											extension: extension
										})
									})
								})
							}
							if (appliedDetails.LetterforNameChange == true) {
								console.log('in letterfornamechange')
								models.Letterfor_NameChange.findAll({
									where: {
										user_id: req.User.id,
									}
								}).then(function (letterfornamechange) {
									letterfornamechange.forEach(letterfornamechange => {
										console.log('letterfornamechange', letterfornamechange);
										var imgArr = letterfornamechange.file_name.split('.');
										var extension = imgArr[imgArr.length - 1].trim();
										letter_namechange.push({
											name: letterfornamechange.name,
											filePath: constant.BASE_URL + "/upload/NameChangeLetter/" + req.User.id + "/" + letterfornamechange.file_name,
											extension: extension
										})
										console.log('letter_namechangeletter_namechange', letter_namechange);
									})
								})
							}
							if (appliedDetails.curriculum == true) {
								models.User_Curriculum.findAll({
									where: {
										user_id: req.User.id,
										app_id: {
											[Op.eq]: null
										}
									}
								}).then(function (userCurriculums) {
									userCurriculums.forEach(userCurriculum => {
										var imgArr = userCurriculum.file_name.split('.');
										var extension = imgArr[imgArr.length - 1].trim();
										curriculum.push({
											name: userCurriculum.name,
											filePath: constant.BASE_URL + "/upload/curriculum/" + req.User.id + "/" + userCurriculum.file_name,
											extension: extension
										})
									})
								})
							}
							if (appliedDetails.gradToPer == true) {
								models.GradeToPercentageLetter.findAll({
									where: {
										user_id: req.User.id,
										app_id: {
											[Op.eq]: null
										}
									}
								}).then(function (letters) {
									letters.forEach(letter => {
										var imgArr = letter.file_name.split('.');
										var extension = imgArr[imgArr.length - 1].trim();
										gradToPerLetters.push({
											name: letter.name,
											filePath: constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letter.file_name,
											extension: extension
										})
									})
								})
							}
							models.User_Transcript.findAll({
								where: {
									user_id: req.User.id,
									app_id: {
										[Op.eq]: null
									},
									type: 'extraDocument'
								}
							}).then(function (letters) {
								letters.forEach(letter => {
									var imgArr = letter.file_name.split('.');
									var extension = imgArr[imgArr.length - 1].trim();
									NameChanges.push({
										name: letter.name,
										filePath: constant.BASE_URL + "/upload/transcript/" + req.User.id + "/" + letter.file_name,
										extension: extension
									})
								})

								models.Affiliation_Letter.findAll({
									where: {
										user_id: req.User.id,
										app_id: {
											[Op.eq]: null
										}
									}
								}).then(function (Affiliation) {

									models.InstructionalDetails.findAll({
										where: {
											userId: req.User.id,
											app_id: {
												[Op.eq]: null
											}
										}
									}).then(function (instruction) {
										models.Institution_details.findAll({
											where: {
												user_id: req.User.id,
												app_id: {
													[Op.eq]: null
												}
											}
										}).then(function (institutions) {
											res.json({
												status: 200,
												userDetails: userDetails,
												collegeData: collegeData,
												marksheets: marksheets,
												transcripts: transcripts,
												instructionalDetails: instruction,
												curriculum: curriculum,
												purpose: institutions,
												letters: gradToPerLetters,
												CompetencyLetter: compentencyletter,
												Affiliation_Letter: Affiliation,
												NameChanges: NameChanges,
												letter_namechange: letter_namechange,
											})

										})
									})
								})
							})
						})
					}
				})

			}


		})
	})
});

router.post('/addUsergradToPerDetails', middlewares.getUserInfo, (req, res) => {
	models.User.update({
		gradToPer: req.body.gradToPer
	},
		{
			where: {
				id: req.User.id
			}
		}).then(updated => {
			const valueUpdated = updated;
			res.status(200).json({
				message: valueUpdated
			})
		})
})

router.post('/deleteErrataLetter', middlewares.getUserInfo, function (req, res) {
	var userData = req.body.data
	models.GradeToPercentageLetter.find({
		where: {
			user_id: userData.user_id
		}

	}).then(function (users) {
		if (users) {
			models.GradeToPercentageLetter.find({
				where: {
					id: userData.id,
					user_id: userData.user_id
				}
			}).then(function (file) {
				if (file) {
					//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + userData.user_id + '/' + file.file_name, function (err) {
					file.destroy().then(function (letterDelete) {

						if (letterDelete) {
							models.Activitytracker.create({
								user_id: userData.user_id,
								activity: letterDelete.name + 'Deleted',
								data: letterDelete.file_name + ' deleted by ' + req.User.email,
								applicaiton_id: userData.app_id
							})
							res.json({
								status: 200,
								message: 'Grade to Percentage Letter deleted successfully!!...'
							})
						}
					});
					//});
				} else {
					res.json({
						status: 400,
						message: 'File Not Deleted!!..'
					});
				}

			})
		}
	})
});

// router.get('/getGradeToPercentageLetterDetails',middlewares.getUserInfo,function(req,res){
// 	console.log('/getGradeToPercentageLetterDetails');
// 	var data = {
// 		bachelor : [],
// 		master : [],

// 	};
// 	var bachelorsData = [];
// 	var masterData = [];
// 	var facultyData = [];
// 	if(req.query.editFlag == 'true'){

// 	}else{
// 		models.userMarkList.find({
// 			where : {
// 				user_id : req.User.id
// 			}
// 		}).then(userMarkList_data=>{
// 			if(userMarkList_data.previous_data == true){

// 			}else{
// 				models.userMarkList.findAll({
// 					where :{
// 						user_id : req.User.id,
// 						type : 'Bachelors'
// 					}
// 				}).then(function(userMarkList){
// 					if(userMarkList.length > 0){
// 						if(userMarkList[0].college_stream_type == true){
// 							userMarkList.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push(marklist.faculty)
// 									}
// 								}else{
// 									facultyData.push(marklist.faculty)

// 								}

// 							})
// 							facultyData.forEach(faculty =>{
// 								models.facultymaster.find({
// 									where:{
// 										degree : 'Bachelors',
// 										faculty : faculty
// 									}
// 								}).then(function(facultyMaster){
// 									models.userMarkList.find({
// 										where:{
// 											user_id : req.User.id,
// 											type : 'Bachelors',
// 											faculty : faculty,
// 										}
// 									}).then(function(markListDetails){
// 										if(markListDetails.patteren == 'Annual'){
// 											var year = converter.toWordsOrdinal(facultyMaster.year);
// 											models.userMarkList.find({
// 												where :{
// 													type : 'Bachelors',
// 													user_id : req.User.id,
// 													name : year +' Year',
// 													faculty : faculty
// 												}
// 											}).then(function(markListDetails){
// 												models.GradeToPercentageLetter.find({
// 													where : {
// 														name : markListDetails.type+'_'+markListDetails.faculty,
// 														user_id  :req.User.id
// 													}
// 												}).then(function(letterData){
// 													var name;
// 													var collegeId;
// 													if(letterData){
// 														name = letterData.name;
// 														collegeId = letterData.collegeId;
// 													}else{
// 														name = markListDetails.type+'_'+markListDetails.faculty;
// 														collegeId = markListDetails.collegeId;
// 													}
// 													models.College.find({
// 														where:{
// 															id : collegeId
// 														}
// 													}).then(function(college){
// 														bachelorsData.push({
// 															doc_id : (letterData) ? (letterData.id) : null,
// 															name : name,
// 															filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 															filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 															lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 															upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 															app_id : (letterData) ? (letterData.app_id) : null,
// 															collegeId : college.id,
// 															collegeName : college.name,
// 														})
// 													})
// 												})
// 											})
// 										}else if(markListDetails.patteren == 'Semester'){
// 											var year = parseInt(facultyMaster.year) * 2;
// 											models.userMarkList.find({
// 												where:{
// 													type : 'Bachelors',
// 													user_id : req.User.id,
// 													name : 'Semester ' + year,
// 													faculty : faculty
// 												}
// 											}).then(function(markListDetails){
// 												models.GradeToPercentageLetter.find({
// 													where : {
// 														name : markListDetails.type+'_'+markListDetails.faculty,
// 														user_id  :req.User.id
// 													}
// 												}).then(function(letterData){
// 													var name;
// 													var collegeId;
// 													if(letterData){
// 														name = letterData.name;
// 														collegeId = letterData.collegeId;
// 													}else{
// 														name = markListDetails.type+'_'+markListDetails.faculty;
// 														collegeId = markListDetails.collegeId;
// 													}
// 													models.College.find({
// 														where:{
// 															id : collegeId
// 														}
// 													}).then(function(college){
// 														bachelorsData.push({
// 															doc_id:(letterData) ? (letterData.id) :null,
// 															name : name,
// 															filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 															filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 															lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 															upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 															app_id : (letterData) ? (letterData.app_id) : null,
// 															collegeId : college.id,
// 															collegeName : college.name,
// 														})
// 													})
// 												})
// 											})
// 										}
// 									})
// 								})
// 							})

// 						}else if(userMarkList[0].college_stream_type == false){
// 							models.GradeToPercentageLetter.find({
// 								where : {
// 									name : userMarkList[0].type+'_'+userMarkList[0].faculty,
// 									user_id  :req.User.id
// 								}
// 							}).then(function(letterData){
// 								var name;
// 								var collegeId;
// 								if(letterData){
// 									name = letterData.name;
// 									collegeId = letterData.collegeId;
// 								}else{
// 									name = userMarkList[0].type+'_'+userMarkList[0].faculty;
// 									collegeId =userMarkList[0].collegeId;
// 								}
// 								models.College.find({
// 									where:{
// 										id : collegeId
// 									}
// 								}).then(function(college){
// 									bachelorsData.push({
// 										doc_id:(letterData) ? (letterData.id) :null,
// 										name : name,
// 										filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 										filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 										lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 										upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 										app_id : (letterData) ? (letterData.app_id) : null,
// 										collegeId : college.id,
// 										collegeName : college.name,
// 									})
// 								})
// 							})
// 						}
// 						data.bachelor = bachelorsData
// 					}
// 					models.userMarkList.findAll({
// 						where :{
// 							user_id : req.User.id,
// 							type : 'Masters'
// 						}
// 					}).then(function(userMarkList){
// 						if(userMarkList.length > 0){
// 							if(userMarkList[0].college_stream_type == true){
// 								userMarkList.forEach(marklist=>{
// 									if(facultyData.length > 0){
// 										var flag = false;
// 										facultyData.forEach(faculty=>{
// 											if(faculty == marklist.faculty){
// 												flag = true
// 											}
// 										})
// 										if(flag == false){
// 											facultyData.push(marklist.faculty)
// 										}
// 									}else{
// 										facultyData.push(marklist.faculty)

// 									}

// 								})

// 								facultyData.forEach(faculty =>{
// 									models.facultymaster.find({
// 										where:{
// 											degree : 'Masters',
// 											faculty : faculty
// 										}
// 									}).then(function(facultyMaster){
// 										models.userMarkList.find({
// 											where:{
// 												user_id : req.User.id,
// 												type : 'Masters',
// 												faculty : faculty,
// 											}
// 										}).then(function(markListDetails){
// 											if(markListDetails.patteren == 'Annual'){
// 												var year = converter.toWordsOrdinal(facultyMaster.year);
// 												models.userMarkList.find({
// 													where:{
// 														type : 'Masters',
// 														user_id : req.User.id,
// 														name : year +' Year',
// 														faculty : faculty
// 													}
// 												}).then(function(markListDetails){
// 													models.GradeToPercentageLetter.find({
// 														where : {
// 															name : markListDetails.type+'_'+markListDetails.faculty,
// 															user_id  :req.User.id
// 														}
// 													}).then(function(letterData){
// 														var name;
// 														var collegeId;
// 														if(letterData){
// 															name = letterData.name;
// 															collegeId = letterData.collegeId;
// 														}else{
// 															name = markListDetails.type+'_'+markListDetails.faculty;
// 															collegeId = markListDetails.collegeId;
// 														}
// 														models.College.find({
// 															where:{
// 																id : collegeId
// 															}
// 														}).then(function(college){
// 															masterData.push({
// 																doc_id:(letterData) ? (letterData.id) :null,
// 																name : name,
// 																filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 																filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 																lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 																upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 																app_id : (letterData) ? (letterData.app_id) : null,
// 																collegeId : college.id,
// 																collegeName : college.name,
// 															})
// 														})
// 													})
// 												})
// 											}else if(markListDetails.patteren == 'Semester'){
// 												var year = parseInt(facultyMaster.year) * 2;
// 												models.userMarkList.find({
// 													where:{
// 														type : 'Masters',
// 														user_id : req.User.id,
// 														name : 'Semester ' + year,
// 														faculty : faculty
// 													}
// 												}).then(function(markListDetails){
// 													models.GradeToPercentageLetter.find({
// 														where : {
// 															name : markListDetails.type+'_'+markListDetails.faculty,
// 															user_id  :req.User.id
// 														}
// 													}).then(function(letterData){
// 														var name;
// 														var collegeId;
// 														if(letterData){
// 															name = letterData.name;
// 															collegeId = letterData.collegeId;
// 														}else{
// 															name = markListDetails.type+'_'+markListDetails.faculty;
// 															collegeId = markListDetails.collegeId;
// 														}
// 														models.College.find({
// 															where:{
// 																id : collegeId
// 															}
// 														}).then(function(college){
// 															masterData.push({
// 																doc_id:(letterData) ? (letterData.id) :null,
// 																name : name,
// 																filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 																filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 																lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 																upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 																app_id : (letterData) ? (letterData.app_id) : null,
// 																collegeId : college.id,
// 																collegeName : college.name,
// 															})
// 														})
// 													})
// 												})
// 											}
// 										})
// 									})
// 								})

// 							}else if(userMarkList[0].college_stream_type == false){
// 								models.GradeToPercentageLetter.find({
// 									where : {
// 										name : userMarkList[0].type+'_'+userMarkList[0].faculty,
// 										user_id  :req.User.id
// 									}
// 								}).then(function(letterData){
// 									var name;
// 									var collegeId;
// 									if(letterData){
// 										name = letterData.name;
// 										collegeId = letterData.collegeId;
// 									}else{
// 										name = userMarkList[0].type+'_'+userMarkList[0].faculty;
// 										collegeId = userMarkList[0].collegeId;
// 									}
// 									models.College.find({
// 										where:{
// 											id : collegeId
// 										}
// 									}).then(function(college){
// 										masterData.push({
// 											doc_id:(letterData) ? (letterData.id) :null,
// 											name : name,
// 											filename : (letterData) ? (constant.BASE_URL+"/upload/gradeToPercentLetter/"+ req.User.id+"/"+ letterData.file_name) : null,
// 											filePath : (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
// 											lock_transcript : (letterData) ? (letterData.lock_transcript) : false,
// 											upload_step : (letterData) ? (letterData.upload_step) : 'default',
// 											app_id : (letterData) ? (letterData.app_id) : null,
// 											collegeId : college.id,
// 											collegeName : college.name,
// 										})
// 									})
// 								})
// 							}
// 							setTimeout(()=>{
// 								data.master = masterData
// 							},2000)
// 						}
// 						setTimeout(()=>{
// 							res.json({
// 								status : 200,
// 								data : data
// 							})
// 						},2500)
// 					})
// 				})
// 			}
// 		})
// 	}

// });

router.get('/getGradeToPercentageLetterDetails', middlewares.getUserInfo, function (req, res) {
	console.log('/getGradeToPercentageLetterDetails');
	var data = {
		bachelor: [],
		master: [],
		phd: [],

	};
	var bachelorsData = [];
	var masterData = [];
	var phdData = [];
	var facultyData = [];
	if (req.query.editFlag == 'true') {

	} else {
		models.Applied_For_Details.findAll({
			where: {
				user_id: req.User.id,
				app_id: null
			}
		}).then(function (applied_for) {
			models.userMarkList.find({
				where: {
					user_id: req.User.id
				}
			}).then(userMarkList_data => {
				if (userMarkList_data.previous_data == true) {

				} else {
					if (applied_for) {
						if (applied_for[0].applying_for == 'Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Bachelors'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Bachelors',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												bachelorsData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
							})
						}
						else if (applied_for[0].applying_for == 'Masters') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Masters'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Masters',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Masters',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	masterData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Masters',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	masterData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												masterData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.master = masterData
								}
							})
						}
						else if (applied_for[0].applying_for == 'Masters,Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Bachelors'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Bachelors',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												bachelorsData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: 'Masters'
									}
								}).then(function (userMarkList) {
									if (userMarkList.length > 0) {
										if (userMarkList[0].college_stream_type == true) {
											userMarkList.forEach(marklist => {
												if (facultyData.length > 0) {
													var flag = false;
													facultyData.forEach(faculty => {
														if (faculty == marklist.faculty) {
															flag = true
														}
													})
													if (flag == false) {
														facultyData.push(marklist.faculty)
													}
												} else {
													facultyData.push(marklist.faculty)

												}

											})

											facultyData.forEach(faculty => {
												models.facultymaster.find({
													where: {
														degree: 'Masters',
														faculty: faculty
													}
												}).then(function (facultyMaster) {
													models.userMarkList.find({
														where: {
															user_id: req.User.id,
															type: 'Masters',
															faculty: faculty,
														}
													}).then(function (markListDetails) {
														if (markListDetails.patteren == 'Annual') {
															var year = converter.toWordsOrdinal(facultyMaster.year);
															models.userMarkList.find({
																where: {
																	type: 'Masters',
																	user_id: req.User.id,
																	name: year + ' Year',
																	faculty: faculty
																}
															}).then(function (markListDetails) {
																models.GradeToPercentageLetter.find({
																	where: {
																		name: markListDetails.type + '_' + markListDetails.faculty,
																		user_id: req.User.id
																	}
																}).then(function (letterData) {
																	var name;
																	var collegeId;
																	if (letterData) {
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	} else {
																		name = markListDetails.type + '_' + markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where: {
																			id: collegeId
																		}
																	}).then(function (college) {
																		masterData.push({
																			doc_id: (letterData) ? (letterData.id) : null,
																			name: name,
																			type: (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																			filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																			upload_step: (letterData) ? (letterData.upload_step) : 'default',
																			app_id: (letterData) ? (letterData.app_id) : null,
																			collegeId: college.id,
																			collegeName: college.name,
																		})
																	})
																})
															})
														} else if (markListDetails.patteren == 'Semester') {
															var year = parseInt(facultyMaster.year) * 2;
															models.userMarkList.find({
																where: {
																	type: 'Masters',
																	user_id: req.User.id,
																	name: 'Semester ' + year,
																	faculty: faculty
																}
															}).then(function (markListDetails) {
																models.GradeToPercentageLetter.find({
																	where: {
																		name: markListDetails.type + '_' + markListDetails.faculty,
																		user_id: req.User.id
																	}
																}).then(function (letterData) {
																	var name;
																	var collegeId;
																	if (letterData) {
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	} else {
																		name = markListDetails.type + '_' + markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where: {
																			id: collegeId
																		}
																	}).then(function (college) {
																		masterData.push({
																			doc_id: (letterData) ? (letterData.id) : null,
																			name: name,
																			type: (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																			filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																			upload_step: (letterData) ? (letterData.upload_step) : 'default',
																			app_id: (letterData) ? (letterData.app_id) : null,
																			collegeId: college.id,
																			collegeName: college.name,
																		})
																	})
																})
															})
														}
													})
												})
											})

										} else if (userMarkList[0].college_stream_type == false) {
											models.GradeToPercentageLetter.find({
												where: {
													name: userMarkList[0].type + '_' + userMarkList[0].faculty,
													user_id: req.User.id
												}
											}).then(function (letterData) {
												var name;
												var collegeId;
												if (letterData) {
													name = letterData.name;
													collegeId = letterData.collegeId;
												} else {
													name = userMarkList[0].type + '_' + userMarkList[0].faculty;
													collegeId = userMarkList[0].collegeId;
												}
												models.College.find({
													where: {
														id: collegeId
													}
												}).then(function (college) {
													masterData.push({
														doc_id: (letterData) ? (letterData.id) : null,
														name: name,
														type: (letterData) ? letterData.file_name.split('.').pop() : null,
														filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
														filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
														lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
														upload_step: (letterData) ? (letterData.upload_step) : 'default',
														app_id: (letterData) ? (letterData.app_id) : null,
														collegeId: college.id,
														collegeName: college.name,
													})
												})
											})
										}
										setTimeout(() => {
											data.master = masterData
										}, 2000)
									}
									// setTimeout(()=>{
									// 	res.json({
									// 		status : 200,
									// 		data : data
									// 	})
									// },2500)
								})
							})
						} else if (applied_for[0].applying_for == 'Phd,Masters,Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Phd'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Phd',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Phd',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Phd',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	phdData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	phdData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												phdData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.phd = phdData
								}
							})
						}
						setTimeout(() => {
							res.json({
								status: 200,
								data: data
							})
						}, 2500)
					} else {
						if (applied_for[0].applying_for == 'Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Bachelors'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Bachelors',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												bachelorsData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
							})
						}
						else if (applied_for[0].applying_for == 'Masters') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Masters'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Masters',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Masters',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Masters',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	masterData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Masters',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	masterData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												masterData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.master = masterData
								}
							})
						}
						else if (applied_for[0].applying_for == 'Masters,Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Bachelors'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Bachelors',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Bachelors',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	bachelorsData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												bachelorsData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.bachelor = bachelorsData
								}
								models.userMarkList.findAll({
									where: {
										user_id: req.User.id,
										type: 'Masters'
									}
								}).then(function (userMarkList) {
									if (userMarkList.length > 0) {
										if (userMarkList[0].college_stream_type == true) {
											userMarkList.forEach(marklist => {
												if (facultyData.length > 0) {
													var flag = false;
													facultyData.forEach(faculty => {
														if (faculty == marklist.faculty) {
															flag = true
														}
													})
													if (flag == false) {
														facultyData.push(marklist.faculty)
													}
												} else {
													facultyData.push(marklist.faculty)

												}

											})

											facultyData.forEach(faculty => {
												models.facultymaster.find({
													where: {
														degree: 'Masters',
														faculty: faculty
													}
												}).then(function (facultyMaster) {
													models.userMarkList.find({
														where: {
															user_id: req.User.id,
															type: 'Masters',
															faculty: faculty,
														}
													}).then(function (markListDetails) {
														if (markListDetails.patteren == 'Annual') {
															var year = converter.toWordsOrdinal(facultyMaster.year);
															models.userMarkList.find({
																where: {
																	type: 'Masters',
																	user_id: req.User.id,
																	name: year + ' Year',
																	faculty: faculty
																}
															}).then(function (markListDetails) {
																models.GradeToPercentageLetter.find({
																	where: {
																		name: markListDetails.type + '_' + markListDetails.faculty,
																		user_id: req.User.id
																	}
																}).then(function (letterData) {
																	var name;
																	var collegeId;
																	if (letterData) {
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	} else {
																		name = markListDetails.type + '_' + markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where: {
																			id: collegeId
																		}
																	}).then(function (college) {
																		masterData.push({
																			doc_id: (letterData) ? (letterData.id) : null,
																			name: name,
																			type: (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																			filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																			upload_step: (letterData) ? (letterData.upload_step) : 'default',
																			app_id: (letterData) ? (letterData.app_id) : null,
																			collegeId: college.id,
																			collegeName: college.name,
																		})
																	})
																})
															})
														} else if (markListDetails.patteren == 'Semester') {
															var year = parseInt(facultyMaster.year) * 2;
															models.userMarkList.find({
																where: {
																	type: 'Masters',
																	user_id: req.User.id,
																	name: 'Semester ' + year,
																	faculty: faculty
																}
															}).then(function (markListDetails) {
																models.GradeToPercentageLetter.find({
																	where: {
																		name: markListDetails.type + '_' + markListDetails.faculty,
																		user_id: req.User.id
																	}
																}).then(function (letterData) {
																	var name;
																	var collegeId;
																	if (letterData) {
																		name = letterData.name;
																		collegeId = letterData.collegeId;
																	} else {
																		name = markListDetails.type + '_' + markListDetails.faculty;
																		collegeId = markListDetails.collegeId;
																	}
																	models.College.find({
																		where: {
																			id: collegeId
																		}
																	}).then(function (college) {
																		masterData.push({
																			doc_id: (letterData) ? (letterData.id) : null,
																			name: name,
																			type: (letterData) ? letterData.file_name.split('.').pop() : null,
																			filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																			filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																			lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																			upload_step: (letterData) ? (letterData.upload_step) : 'default',
																			app_id: (letterData) ? (letterData.app_id) : null,
																			collegeId: college.id,
																			collegeName: college.name,
																		})
																	})
																})
															})
														}
													})
												})
											})

										} else if (userMarkList[0].college_stream_type == false) {
											models.GradeToPercentageLetter.find({
												where: {
													name: userMarkList[0].type + '_' + userMarkList[0].faculty,
													user_id: req.User.id
												}
											}).then(function (letterData) {
												var name;
												var collegeId;
												if (letterData) {
													name = letterData.name;
													collegeId = letterData.collegeId;
												} else {
													name = userMarkList[0].type + '_' + userMarkList[0].faculty;
													collegeId = userMarkList[0].collegeId;
												}
												models.College.find({
													where: {
														id: collegeId
													}
												}).then(function (college) {
													masterData.push({
														doc_id: (letterData) ? (letterData.id) : null,
														name: name,
														type: (letterData) ? letterData.file_name.split('.').pop() : null,
														filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
														filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
														lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
														upload_step: (letterData) ? (letterData.upload_step) : 'default',
														app_id: (letterData) ? (letterData.app_id) : null,
														collegeId: college.id,
														collegeName: college.name,
													})
												})
											})
										}
										setTimeout(() => {
											data.master = masterData
										}, 2000)
									}
									// setTimeout(()=>{
									// 	res.json({
									// 		status : 200,
									// 		data : data
									// 	})
									// },2500)
								})
							})
						} else if (applied_for[0].applying_for == 'Phd,Masters,Bachelors') {
							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: 'Phd'
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push(marklist.faculty)
												}
											} else {
												facultyData.push(marklist.faculty)

											}

										})
										facultyData.forEach(faculty => {
											models.facultymaster.find({
												where: {
													degree: 'Phd',
													faculty: faculty
												}
											}).then(function (facultyMaster) {
												models.userMarkList.find({
													where: {
														user_id: req.User.id,
														type: 'Phd',
														faculty: faculty,
													}
												}).then(function (markListDetails) {
													if (markListDetails.patteren == 'Annual') {
														var year = converter.toWordsOrdinal(facultyMaster.year);
														models.userMarkList.find({
															where: {
																type: 'Phd',
																user_id: req.User.id,
																name: year + ' Year',
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	phdData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													} else if (markListDetails.patteren == 'Semester') {
														var year = parseInt(facultyMaster.year) * 2;
														models.userMarkList.find({
															where: {
																type: 'Bachelors',
																user_id: req.User.id,
																name: 'Semester ' + year,
																faculty: faculty
															}
														}).then(function (markListDetails) {
															models.GradeToPercentageLetter.find({
																where: {
																	name: markListDetails.type + '_' + markListDetails.faculty,
																	user_id: req.User.id
																}
															}).then(function (letterData) {
																var name;
																var collegeId;
																if (letterData) {
																	name = letterData.name;
																	collegeId = letterData.collegeId;
																} else {
																	name = markListDetails.type + '_' + markListDetails.faculty;
																	collegeId = markListDetails.collegeId;
																}
																models.College.find({
																	where: {
																		id: collegeId
																	}
																}).then(function (college) {
																	phdData.push({
																		doc_id: (letterData) ? (letterData.id) : null,
																		name: name,
																		type: (letterData) ? letterData.file_name.split('.').pop() : null,
																		filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
																		filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
																		lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
																		upload_step: (letterData) ? (letterData.upload_step) : 'default',
																		app_id: (letterData) ? (letterData.app_id) : null,
																		collegeId: college.id,
																		collegeName: college.name,
																	})
																})
															})
														})
													}
												})
											})
										})

									} else if (userMarkList[0].college_stream_type == false) {
										models.GradeToPercentageLetter.find({
											where: {
												name: userMarkList[0].type + '_' + userMarkList[0].faculty,
												user_id: req.User.id
											}
										}).then(function (letterData) {
											var name;
											var collegeId;
											if (letterData) {
												name = letterData.name;
												collegeId = letterData.collegeId;
											} else {
												name = userMarkList[0].type + '_' + userMarkList[0].faculty;
												collegeId = userMarkList[0].collegeId;
											}
											models.College.find({
												where: {
													id: collegeId
												}
											}).then(function (college) {
												phdData.push({
													doc_id: (letterData) ? (letterData.id) : null,
													name: name,
													type: (letterData) ? letterData.file_name.split('.').pop() : null,
													filename: (letterData) ? (constant.BASE_URL + "/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name) : null,
													filePath: (letterData) ? constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + req.User.id + "/" + letterData.file_name : null,
													lock_transcript: (letterData) ? (letterData.lock_transcript) : false,
													upload_step: (letterData) ? (letterData.upload_step) : 'default',
													app_id: (letterData) ? (letterData.app_id) : null,
													collegeId: college.id,
													collegeName: college.name,
												})
											})
										})
									}
									data.phd = phdData
								}
							})
						}
						setTimeout(() => {
							res.json({
								status: 200,
								data: data
							})
						}, 2500)
					}


				}
			})
		})
	}

});
router.post('/upload_gradeToPercentLetter', function (req, res) {
	var userId = req.query.user_id;
	var image;
	var transcript_name = req.query.transcript_name;
	var transcript_doc = req.query.hiddentype;
	var doc_id = req.query.doc_id;
	var app_id = req.query.app_id;
	var filename;
	var dir = constant.FILE_LOCATION + "public/upload/gradeToPercentLetter/" + userId;
	//var dir = constant.FILE_LOCATION + "public\\upload\\gradeToPercentLetter\\" + userId; 
	if (!fs.existsSync(dir)) {
		fs.mkdirSync(dir);
	}
	var storage = multer.diskStorage({
		destination: function (req, file, callback) {
			callback(null, constant.FILE_LOCATION + 'public/upload/gradeToPercentLetter/' + userId);
			//callback(null, constant.FILE_LOCATION+'public\\upload\\gradeToPercentLetter\\'+userId);
		},
		filename: function (req, file, callback) {
			//to generate the filename in a random string
			var extension = path.extname(file.originalname)
			var randomString = functions.generateRandomString(10, 'alphabetic')
			var newFileName = randomString.concat(extension);
			image = newFileName;
			callback(null, newFileName);
		}
	});

	var upload = multer({
		storage: storage,
		fileFilter: function (req, file, callback) {
			ext = path.extname(file.originalname)
			if (ext !== '.png' && ext !== '.jpg' && ext !== '.jpeg' && ext !== '.pdf' && ext !== '.PNG' && ext !== '.JPG' && ext !== '.JPEG' && ext !== '.PDF') {
				return callback(res.end('Please upload your document in .pdf, .jpeg, .jpg or .png formats only'), null)
			}
			callback(null, true)
		}
	}).single('file');
	upload(req, res, function (err, data) {
		imageLocationToCallClient = image;
		if (ext == '.pdf') {
			fs.readFile(constant.FILE_LOCATION + 'public/upload/gradeToPercentLetter/' + userId + '/' + image, (err, pdfBuffer) => {
				//fs.readFile(constant.FILE_LOCATION +'public\\upload\\gradeToPercentLetter\\' + userId + '\\' + image, (err, pdfBuffer) => {
				new pdfreader.PdfReader().parseBuffer(pdfBuffer, function (err, item) {
					if (err) {
						uploadValue = false;
						ValueUpdateData(uploadValue);
					} else if (!item) {
						uploadValue = true;
						ValueUpdateData(uploadValue);
					} else if (item.text) { }
				});
			});
		} else {

			uploadValue = true;
			ValueUpdateData(uploadValue);
		}

		function ValueUpdateData(uploadValue) {
			if (uploadValue == true) {
				var fileStatus = false;
				models.GradeToPercentageLetter.findAll({
					where: {
						user_id: userId,
					}
				}).then((datam) => {
					if (datam.length > 0) {
						datam.forEach(function (marklistData) {
							if (marklistData) {
								if (marklistData.file_name == imageLocationToCallClient) {
									fileStatus = true;
								}
							}
						})
					}
					if (fileStatus == true) {
						res.json({
							status: 200,
							message: `File already exist. please upload another file!!!..`,
						})
					} else {
						if (doc_id != null && doc_id != undefined && doc_id != '') {
							models.GradeToPercentageLetter.find({
								where: {
									id: doc_id,

								}
							}).then(function (GradeToPercentageLetter) {
								GradeToPercentageLetter.update({
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									upload_step: 'changed'
								}).then(function (updatedLetter) {
									if (updatedLetter) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: updatedLetter
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}
								})
							})
						} else {
							if (app_id == null) {
								models.GradeToPercentageLetter.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							} else {
								models.GradeToPercentageLetter.create({
									name: transcript_name,
									user_id: userId,
									type: transcript_doc,
									file_name: imageLocationToCallClient,
									lock_transcript: false,
									collegeId: req.query.clgId,
									upload_step: "changed",
									app_id: app_id
								}).then(function (userTranscript) {
									if (userTranscript) {
										return res.json({
											status: 200,
											message: `Upload Completed.`,
											data: transcript_doc
										});
									} else {
										return res.json({
											status: 400,
											message: `Error occured in uploading document.`
										});
									}

								});
							}
						}
					}
				})
				// 	}
				// })
			} else if (uploadValue == false) {
				fs.unlink(constant.FILE_LOCATION + 'public/upload/gradeToPercentLetter/' + userId + '/' + image, function (err) {
					//fs.unlink(constant.FILE_LOCATION + 'public\\upload\\gradeToPercentLetter\\' + userId + '\\' + image, function (err) {
					if (err) {
						return res.json({
							status: 400,
							message: `Error occured in uploading document.`
						});
					} else {
						return res.json({
							status: 401,
							message: 'You have uploaded the Password Protected Document. Please Upload correct document.'
						});
					}
				});
			}

		}
	});
});


// router.get('/getExtraDocuments',middlewares.getUserInfo,function(req,res){
// 	console.log("/getExtraDocuments");

// 	var extra_documents= [];
// 	var filePath;
// 	var filename;
// 		const s3 = new AWS.S3({
// 		endpoint: `https://eu2.contabostorage.com/muattestation`, // e.g. https://eu2.contabostorage.com/bucketname
// 		accessKeyId: "f2ed09d787bc47cbb035b3e358dd0b49",
// 		secretAccessKey: "18407679424bcee60b6ce730eccba499",
// 		s3BucketEndpoint: true,
// 	});
// 		s3.listObjectsV2({
// 		Bucket: "muattestation",
// 		}, function (err, data) {
// 		if (err) {
// 			res.json({status :500})
// 		} else {
// 			// Return the list ("Contents") as JSON
// 			extra_documents = data.Contents
// 			var data = [];
// 			// res.json({status :200,
// 			//     data : data.Contents})
// 		models.User_Transcript.findAll({
// 				where :{
// 					user_id : req.User.id,
// 					type : "extraDocument"
// 				}
// 			}).then(function(userTranscripts){
// 				if(userTranscripts.length > 0){
// 					userTranscripts.forEach(userTranscript=>{
// 						extra_documents.forEach(function (data){
// 							if(data.ETag.includes(userTranscript.file_name)){
// 									filename = JSON.parse(data.ETag);
// 									filePath = 'https://eu2.contabostorage.com/939798088aeb42df9fc88c6029e0c223:muattestation/'+ data.Key
// 									// console.log("filePath of filePath"+ filePath);									
// 							}else if(userTranscript.file_name.includes('.')){
// 								filePath = (userTranscript) ? (constant.BASE_URL+"/upload/transcript/"+ req.User.id+"/"+ userTranscript.file_name) : null,
// 								filename = (userTranscript) ? constant.FILE_LOCATION + "public/upload/transcript/" + req.User.id + "/" + userTranscript.file_name : null											
// 						 }
// 						})
// 						data.push({
// 							doc_id : (userTranscript) ? (userTranscript.id) : null,
// 							name : (userTranscript) ? (userTranscript.name) : null,
// 							filename : filename,
// 							filePath : filePath,
// 							lock_transcript : (userTranscript) ? (userTranscript.lock_transcript) : false,
// 							upload_step : (userTranscript) ? (userTranscript.upload_step) : 'default',
// 							app_id : (userTranscript) ? (userTranscript.app_id) : null,
// 						})
// 					})

// 					res.json({
// 						status : 200,
// 						data : data
// 					})
// 				}else{
// 					res.json({
// 						status : 200,
// 						data : null
// 					})
// 				}
// 			})
// }
// })
// });

router.get('/getExtraDocuments', middlewares.getUserInfo, function (req, res) {
	console.log("/getExtraDocuments");
	var data = [];
	models.User_Transcript.findAll({
		where: {
			user_id: req.User.id,
			type: "extraDocument"
		}
	}).then(function (userTranscripts) {
		if (userTranscripts.length > 0) {
			userTranscripts.forEach(userTranscript => {
				data.push({
					doc_id: (userTranscript) ? (userTranscript.id) : null,
					name: (userTranscript) ? (userTranscript.name) : null,
					type: (userTranscript) ? (userTranscript.file_name).split('.').pop() : null,
					filename: (userTranscript) ? (constant.BASE_URL + "/upload/transcript/" + req.User.id + "/" + userTranscript.file_name) : null,
					filePath: (userTranscript) ? constant.FILE_LOCATION + "public/upload/transcript/" + req.User.id + "/" + userTranscript.file_name : null,
					lock_transcript: (userTranscript) ? (userTranscript.lock_transcript) : false,
					upload_step: (userTranscript) ? (userTranscript.upload_step) : 'default',
					app_id: (userTranscript) ? (userTranscript.app_id) : null,
				})
			})

			res.json({
				status: 200,
				data: data
			})
		} else {
			res.json({
				status: 200,
				data: null
			})
		}
	})

});
router.delete('/deleteDocument', function (req, res) {
	console.log('/deleteDocument');
	if (req.query.type == 'gradToPer') {
		models.GradeToPercentageLetter.find({
			where: {
				id: req.query.id
			}
		}).then(function (letter) {
			if (letter) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				letter.destroy().then(function (letterDelete) {
					res.json({
						status: 200,
						data: letterDelete
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'extraDocument') {
		models.User_Transcript.find({
			where: {
				id: req.query.id
			}
		}).then(function (file) {
			if (file) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function (userTranscriptDelete) {
					res.json({
						status: 200,
						data: userTranscriptDelete
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'marklist') {
		models.UserMarklist_Upload.find({
			where: {
				id: req.query.id
			}
		}).then(function (file) {
			if (file) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function (userTranscriptDelete) {
					res.json({
						status: 200,
						data: userTranscriptDelete
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'transcript') {
		models.User_Transcript.find({
			where: {
				id: req.query.id
			}
		}).then(function (file) {
			if (file) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function (userTranscriptDelete) {
					res.json({
						status: 200,
						data: userTranscriptDelete
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'curriculum') {

		models.User_Curriculum.find({
			where: {
				id: req.query.id
			}
		}).then(function (file) {
			if (file) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function (userTranscriptDelete) {
					res.json({
						status: 200,
						data: userTranscriptDelete
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'compentencyLetter') {

		models.competency_letter.find({
			where: {
				id: req.query.id
			}
		}).then(function (file) {
			if (file) {
				//fs.unlink(constant.FILE_LOCATION + 'public/upload/curriculum/' + req.User.id + '/' + file.file_name, function (err) {
				file.destroy().then(function (compentencyLetter) {
					res.json({
						status: 200,
						data: compentencyLetter
					})
				});
				//});
			} else {
				res.json({
					status: 400,
					message: 'File Not Deleted!!..'
				});
			}
		})
	} else if (req.query.type == 'NameChangeletter') {
		models.Letterfor_NameChange.find({
			where: {
				user_id: req.User.id
			}
		}).then(function (user) {
			console.log("user", user)
			user.destroy().then(function (ussr) {
				res.json({
					status: 200,
				})
			})
		})
	} else if (req.query.type == 'PaymentIsuue') {
		models.paymenterror_details.find({
			where: {
				user_id: req.User.id
			}
		}).then(function (user) {
			console.log("user", user)
			user.destroy().then(function (ussr) {
				res.json({
					status: 200,
				})
			})
		})
	}

});

router.delete('/deleteInfo', function (req, res) {
	console.log('/deleteInfo');
	var userId = req.query.id;
	if (req.query.type == 'Instructional') {
		models.InstructionalDetails.find({
			where: {
				userId: userId

			}
		}).then(function (user) {
			console.log("user", user)
			user.destroy().then(function (ussr) {
				res.json({
					status: 200,
				})
			})
		})

	} else if (req.query.type == 'Affiliation') {
		models.Affiliation_Letter.find({
			where: {
				user_id: userId
			}
		}).then(function (user) {
			console.log("user", user)
			user.destroy().then(function (ussr) {
				res.json({
					status: 200,
				})
			})
		})
	} else if (req.query.type == 'NameChangeletter') {
		models.Letterfor_NameChange.find({
			where: {
				user_id: userId
			}
		}).then(function (user) {
			console.log("user", user)
			user.destroy().then(function (ussr) {
				res.json({
					status: 200,
				})
			})
		})
	}




});


// router.get('/getUploadedMarksheetDetails',middlewares.getUserInfo,function(req,res){
// 	var data ={
// 		diplomaHolder : false,
// 		current_year : false,
// 		appliedDiploma : false,
// 		appliedCurrent : false
// 	};
// 	var facultyData = [];
// 	models.userMarkList.find({
// 		where :{
// 			user_id : req.User.id
// 		}
// 	}).then(function(marklistDetails){
// 		if(marklistDetails.previous_data == true){
// 			models.Applied_For_Details.find({
// 				attributes: [
// 					sequelize.fn('MAX', sequelize.col('id'))
// 				],
// 				where :{
// 					user_id : req.User.id,
// 					app_id :{
// 						[Op.ne] : null
// 					}
// 				}
// 			}).then(function(appliedDetails){
// 				data.diplomaHolder = false;
// 				data.current_year = false;
// 				data.appliedDiploma = appliedDetails.diplomaHolder;
// 				data.appliedCurrent = appliedDetails.current_year;
// 				res.json({
// 					status : 200,
// 					data : data
// 				})
// 			})
// 		}else if(marklistDetails.previous_data == false){
// 			if(req.query.eduDetails == "Bachelors" ){

// 				models.userMarkList.findAll({
// 					where : {
// 						user_id : req.User.id,
// 						type : "Bachelors",
// 						app_id : null
// 					}
// 				}).then(function(userMarkList){
// 					if(userMarkList.length > 0){
// 						if(userMarkList[0].college_stream_type == true){
// 							userMarkList.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty.faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push({
// 											type : marklist.type,
// 											faculty : marklist.faculty,
// 											pattern : marklist.patteren
// 										})
// 									}
// 								}else{
// 									facultyData.push({
// 										type : marklist.type,
// 										faculty : marklist.faculty,
// 										pattern : marklist.patteren
// 									})
// 								}
// 							})

// 							facultyData.forEach(faculty=>{
// 								var name = "Bachelors_" + faculty.faculty + "_%"
// 								models.UserMarklist_Upload.findAll({
// 									where : {
// 										user_id : req.User.id,
// 										name : {
// 											[Op.like] : name
// 										},
// 										app_id : null
// 									}
// 								}).then(function(uploadedMarksheet){
// 									if(uploadedMarksheet.length > 0){
// 										var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";

// 										var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 										var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
// 										var lastSem, secondLastSem, lastYear;
// 										models.facultymaster.find({
// 											where : {
// 												degree : faculty.type,
// 												faculty : faculty.faculty
// 											}
// 										}).then(function(facultyMaster){
// 											if(faculty.pattern == "Semester"){
// 												var lastsemster = parseInt(facultyMaster.year) * 2;
// 												var secondLast = parseInt(facultyMaster.year) * - 1;
// 												lastSem = "Bachelors_" + faculty.faculty + "_Semester " + lastsemster;
// 												secondLastSem = "Bachelors_" + faculty.faculty + "_Semester " + secondLast;
// 											}else if(faculty.pattern == "Annual"){
// 												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 												lastYear = "Bachelors_" + faculty.faculty + "_" + wordYear + " Year";
// 											}
// 											var diplomaHolder = true;
// 											var current_year = true;
// 											uploadedMarksheet.forEach(marksheet=>{
// 												if(faculty.pattern == "Semester"){
// 													if(marksheet.name == sem1 || marksheet.name == sem2){
// 														diplomaHolder = false;
// 													}
// 													if(marksheet.name == lastSem || marksheet.name == secondLastSem){
// 														current_year = false;
// 													}
// 												}else if(faculty.pattern == 'Annual'){
// 													if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 														diplomaHolder = false;
// 													}
// 													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 														current_year = false;
// 													}
// 												}
// 											})
// 											data.diplomaHolder = diplomaHolder;
// 											data.current_year = current_year;
// 										})
// 									}
// 								})
// 							})
// 							setTimeout(()=>{
// 								res.json({
// 									status : 200,
// 									data : data
// 								})
// 							},500);
// 						}else if(userMarkList[0].college_stream_type == false){
// 							var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 							models.UserMarklist_Upload.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									name : {
// 										[Op.like] : name
// 									},
// 									app_id : null
// 								}
// 							}).then(function(uploadedMarksheet){
// 								if(uploadedMarksheet.length > 0){
// 									var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 									var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 									var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 									var lastSem, secondLastSem, lastYear;
// 									models.facultymaster.find({
// 										where : {
// 											degree : userMarkList[0].type,
// 											faculty : userMarkList[0].faculty
// 										}
// 									}).then(function(facultyMaster){
// 										if(userMarkList[0].patteren == "Semester"){
// 											var lastsemster = parseInt(facultyMaster.year) * 2;
// 											var secondLast = parseInt(facultyMaster.year) * - 1;
// 											lastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + lastsemster;
// 											secondLastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + secondLast;

// 										}else if(userMarkList[0].patteren == "Annual"){
// 											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 											lastYear = "Bachelors_" + userMarkList[0].faculty + "_" + wordYear + " Year";
// 										}

// 										var diplomaHolder = true;
// 										var current_year = true;
// 										uploadedMarksheet.forEach(marksheet=>{
// 											if(userMarkList[0].patteren == "Semester"){
// 												if(marksheet.name == sem1 || marksheet.name == sem2){
// 													diplomaHolder = false;
// 												}
// 												if(marksheet.name == lastSem || marksheet.name == secondLastSem){
// 													current_year = false;

// 												}
// 											}else if(userMarkList[0].patteren == 'Annual'){
// 												if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 													diplomaHolder = false;
// 												}
// 												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 													current_year = false;
// 												}
// 											}
// 										})

// 										data.diplomaHolder = diplomaHolder;
// 										data.current_year = current_year;
// 										res.json({
// 											status : 200,
// 											data : data
// 										})
// 									})
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})
// 						}
// 					}else{
// 						res.json({
// 							status : 200,
// 							data : data
// 						})
// 					}
// 				})
// 			}else if(req.query.eduDetails == "Masters,Bachelors" ){
// 				models.userMarkList.findAll({
// 					where : {
// 						user_id : req.User.id,
// 						type : "Masters",
// 						app_id : null
// 					}
// 				}).then(function(userMarkListMaster){
// 					if(userMarkListMaster.length > 0){
// 						if(userMarkListMaster[0].college_stream_type == true){
// 							userMarkListMaster.forEach(marklist=>{
// 								if(facultyData.length > 0){
// 									var flag = false;
// 									facultyData.forEach(faculty=>{
// 										if(faculty.faculty == marklist.faculty){
// 											flag = true
// 										}
// 									})
// 									if(flag == false){
// 										facultyData.push({
// 											type : marklist.type,
// 											faculty : marklist.faculty,
// 											pattern : marklist.patteren
// 										})
// 									}
// 								}else{
// 									facultyData.push({
// 										type : marklist.type,
// 										faculty : marklist.faculty,
// 										pattern : marklist.patteren
// 									})
// 								}
// 							})
// 							facultyData.forEach(faculty=>{
// 								var name = "Masters_" + faculty.faculty + "_%"
// 								models.UserMarklist_Upload.findAll({
// 									where : {
// 										user_id : req.User.id,
// 										name : {
// 											[Op.like] : name
// 										},
// 										app_id : null
// 									}
// 								}).then(function(uploadedMarksheet){
// 									if(uploadedMarksheet.length > 0){

// 										var lastSem, secondLastSem, lastYear;
// 										models.facultymaster.find({
// 											where : {
// 												degree : faculty.type,
// 												faculty : faculty.faculty
// 											}
// 										}).then(function(facultyMaster){

// 											if(faculty.pattern == "Semester"){
// 												var lastsemster = parseInt(facultyMaster.year) * 2;
// 												var secondLast = parseInt(facultyMaster.year) * - 1;
// 												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
// 												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
// 											}else if(faculty.pattern == "Annual"){
// 												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
// 											}
// 											var current_year = true;
// 											uploadedMarksheet.forEach(marksheet=>{
// 												if(faculty.pattern == "Semester"){
// 													if(marksheet.name == lastSem || marksheet.name == secondLastSem || 	marksheet.name == lastSem){
// 														current_year = false;
// 													}
// 												}else if(faculty.pattern == 'Annual'){
// 													if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 														current_year = false;
// 													}
// 												}
// 											})
// 											data.current_year = current_year;
// 										})
// 									}
// 								})
// 							})

// 							models.userMarkList.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									type : "Bachelors",
// 									app_id : null
// 								}
// 							}).then(function(userMarkList){
// 								if(userMarkList.length > 0){
// 									if(userMarkList[0].college_stream_type == true){
// 										userMarkList.forEach(marklist=>{
// 											if(facultyData.length > 0){
// 												var flag = false;
// 												facultyData.forEach(faculty=>{
// 													if(faculty.faculty == marklist.faculty){
// 														flag = true
// 													}
// 												})
// 												if(flag == false){
// 													facultyData.push({
// 														type : marklist.type,
// 														faculty : marklist.faculty,
// 														pattern : marklist.patteren
// 													})
// 												}
// 											}else{
// 												facultyData.push({
// 													type : marklist.type,
// 													faculty : marklist.faculty,
// 													pattern : marklist.patteren
// 												})
// 											}
// 										})

// 										facultyData.forEach(faculty=>{
// 											var name = "Bachelors_" + faculty.faculty + "_%"
// 											models.UserMarklist_Upload.findAll({
// 												where : {
// 													user_id : req.User.id,
// 													name : {
// 														[Op.like] : name
// 													},
// 													app_id : null
// 												}
// 											}).then(function(uploadedMarksheet){
// 												if(uploadedMarksheet.length > 0){
// 													var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
// 													var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 													var firstYear = "Bachelors_" + faculty.faculty + "_First Year";

// 													var diplomaHolder = true;
// 													uploadedMarksheet.forEach(marksheet=>{

// 														if(faculty.pattern == "Semester"){
// 															if(marksheet.name == sem1 || marksheet.name == sem2){
// 																diplomaHolder = false;
// 															}
// 														}else if(faculty.pattern == 'Annual'){
// 															if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																diplomaHolder = false;
// 															}
// 														}
// 													})
// 													data.diplomaHolder = diplomaHolder;
// 												}
// 											})
// 										})
// 										setTimeout(()=>{
// 											res.json({
// 											status : 200,
// 											data : data
// 											})
// 										},500)
// 									}else if(userMarkList[0].college_stream_type == false){
// 										var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 										models.UserMarklist_Upload.findAll({
// 											where : {
// 												user_id : req.User.id,
// 												name : {
// 													[Op.like] : name
// 												},
// 												app_id : null
// 											}
// 										}).then(function(uploadedMarksheet){
// 											if(uploadedMarksheet.length > 0){
// 												var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 												var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 												var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 												var diplomaHolder = true;
// 												uploadedMarksheet.forEach(marksheet=>{
// 													if(userMarkList[0].patteren == "Semester"){
// 														if(marksheet.name == sem1 || marksheet.name == sem2){
// 															diplomaHolder = false;
// 														}
// 													}else if(userMarkList[0].patteren == 'Annual'){
// 														if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 															diplomaHolder = false;
// 														}
// 													}
// 												})	
// 												data.diplomaHolder = diplomaHolder;										
// 												res.json({
// 													status : 200,
// 													data : data
// 												})

// 											}else{
// 												res.json({
// 													status : 200,
// 													data : data
// 												})
// 											}
// 										})
// 									}
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})

// 						}else if(userMarkListMaster[0].college_stream_type == false){
// 							var name = "Masters_" + userMarkListMaster[0].faculty + "_%"
// 							models.UserMarklist_Upload.findAll({
// 								where : {
// 									user_id : req.User.id,
// 									name : {
// 										[Op.like] : name
// 									},
// 									app_id : null
// 								}
// 							}).then(function(uploadedMarksheet){
// 								if(uploadedMarksheet.length > 0){
// 									var lastSem, secondLastSem, lastYear;
// 									models.facultymaster.find({
// 										where : {
// 											degree : userMarkListMaster[0].type,
// 											faculty : userMarkListMaster[0].faculty
// 										}
// 									}).then(function(facultyMaster){

// 										if(userMarkListMaster[0].patteren == "Semester"){
// 											var lastsemster = parseInt(facultyMaster.year) * 2;
// 											var secondLast = parseInt(facultyMaster.year) * - 1;
// 											lastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + lastsemster;
// 											secondLastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + secondLast;
// 										}else if(userMarkListMaster[0].patteren == "Annual"){
// 											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
// 											lastYear = "Masters_" + userMarkListMaster[0].faculty + "_" + wordYear + " Year";
// 										}
// 										var current_year = true;
// 										uploadedMarksheet.forEach(marksheet=>{
// 											if(userMarkListMaster[0].patteren == "Semester"){
// 												if((marksheet.name == lastSem || marksheet.name == secondLastSem) || marksheet.name == lastSem){
// 													current_year = false;
// 												}
// 											}else if(userMarkListMaster[0].patteren == 'Annual'){
// 												if(marksheet.name.toLowerCase() == lastYear.toLowerCase()){
// 													current_year = false;
// 												}
// 											}
// 										})
// 										data.current_year = current_year
// 										models.userMarkList.findAll({
// 											where : {
// 												user_id : req.User.id,
// 												type : "Bachelors",
// 												app_id : null
// 											}
// 										}).then(function(userMarkList){
// 											if(userMarkList.length > 0){
// 												if(userMarkList[0].college_stream_type == true){
// 													userMarkList.forEach(marklist=>{
// 														if(facultyData.length > 0){
// 															var flag = false;
// 															facultyData.forEach(faculty=>{
// 																if(faculty.faculty == marklist.faculty){
// 																	flag = true
// 																}
// 															})
// 															if(flag == false){
// 																facultyData.push({
// 																	type : marklist.type,
// 																	faculty : marklist.faculty,
// 																	pattern : marklist.patteren
// 																})
// 															}
// 														}else{
// 															facultyData.push({
// 																type : marklist.type,
// 																faculty : marklist.faculty,
// 																pattern : marklist.patteren
// 															})
// 														}
// 													})

// 													facultyData.forEach(faculty=>{
// 														var name = "Bachelors_" + faculty.faculty + "_%"
// 														models.UserMarklist_Upload.findAll({
// 															where : {
// 																user_id : req.User.id,
// 																name : {
// 																	[Op.like] : name
// 																},
// 																app_id : null
// 															}
// 														}).then(function(uploadedMarksheet){
// 															if(uploadedMarksheet.length > 0){
// 																var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
// 																var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
// 																var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
// 																var diplomaHolder = true;
// 																uploadedMarksheet.forEach(marksheet=>{
// 																	if(faculty.pattern == "Semester"){
// 																		if(marksheet.name == sem1 || marksheet.name == sem2){
// 																			diplomaHolder = false;
// 																		}
// 																	}else if(faculty.pattern == 'Annual'){
// 																		if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																			diplomaHolder = true;
// 																		}
// 																	}
// 																})
// 																data.diplomaHolder = diplomaHolder
// 															}
// 														})
// 													})

// 													res.json({
// 														status : 200,
// 														data : data
// 													})
// 												}else if(userMarkList[0].college_stream_type == false){
// 													var name = "Bachelors_" + userMarkList[0].faculty + "_%"
// 													models.UserMarklist_Upload.findAll({
// 														where : {
// 															user_id : req.User.id,
// 															name : {
// 																[Op.like] : name
// 															},
// 															app_id : null
// 														}
// 													}).then(function(uploadedMarksheet){
// 														if(uploadedMarksheet.length > 0){
// 															var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
// 															var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
// 															var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
// 															var diplomaHolder = true;
// 															uploadedMarksheet.forEach(marksheet=>{
// 																if(userMarkList[0].patteren == "Semester"){
// 																	if(marksheet.name == sem1 || marksheet.name == sem2){
// 																		diplomaHolder = false;
// 																	}
// 																}else if(userMarkList[0].patteren == 'Annual'){
// 																	if(marksheet.name.toLowerCase() == firstYear.toLowerCase()){
// 																		diplomaHolder = false;
// 																	}
// 																}
// 															})	
// 															data.diplomaHolder = diplomaHolder;										
// 															res.json({
// 																status : 200,
// 																data : data
// 															})

// 														}else{
// 															res.json({
// 																status : 200,
// 																data : data
// 															})
// 														}
// 													})
// 												}
// 											}else{
// 												res.json({
// 													status : 200,
// 													data : data
// 												})
// 											}
// 										})
// 									})
// 								}else{
// 									res.json({
// 										status : 200,
// 										data : data
// 									})
// 								}
// 							})
// 						}
// 					}else{
// 						res.json({
// 							status : 200,
// 							data : data
// 						})
// 					}
// 				})
// 			}
// 		}
// 	})


// });


router.get('/getUploadedMarksheetDetails', middlewares.getUserInfo, function (req, res) {
	var data = {
		diplomaHolder: false,
		current_year: false,
		appliedDiploma: false,
		appliedCurrent: false
	};
	var facultyData = [];
	models.userMarkList.find({
		where: {
			user_id: req.User.id
		}
	}).then(function (marklistDetails) {
		if (marklistDetails.previous_data == true) {
			models.Applied_For_Details.find({
				attributes: [
					sequelize.fn('MAX', sequelize.col('id'))
				],
				where: {
					user_id: req.User.id,
					app_id: {
						[Op.ne]: null
					}
				}
			}).then(function (appliedDetails) {
				data.diplomaHolder = false;
				data.current_year = false;
				data.appliedDiploma = appliedDetails.diplomaHolder;
				data.appliedCurrent = appliedDetails.current_year;
				res.json({
					status: 200,
					data: data
				})
			})
		} else if (marklistDetails.previous_data == false) {
			if (req.query.eduDetails == "Bachelors") {

				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						type: "Bachelors",
						app_id: null
					}
				}).then(function (userMarkList) {
					if (userMarkList.length > 0) {
						if (userMarkList[0].college_stream_type == true) {
							userMarkList.forEach(marklist => {
								if (facultyData.length > 0) {
									var flag = false;
									facultyData.forEach(faculty => {
										if (faculty.faculty == marklist.faculty) {
											flag = true
										}
									})
									if (flag == false) {
										facultyData.push({
											type: marklist.type,
											faculty: marklist.faculty,
											pattern: marklist.patteren
										})
									}
								} else {
									facultyData.push({
										type: marklist.type,
										faculty: marklist.faculty,
										pattern: marklist.patteren
									})
								}
							})

							facultyData.forEach(faculty => {
								var name = "Bachelors_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where: {
										user_id: req.User.id,
										name: {
											[Op.like]: name
										},
										app_id: null
									}
								}).then(function (uploadedMarksheet) {
									if (uploadedMarksheet.length > 0) {
										var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";

										var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
										var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
										var lastSem, secondLastSem, lastYear;
										models.facultymaster.find({
											where: {
												degree: faculty.type,
												faculty: faculty.faculty
											}
										}).then(function (facultyMaster) {
											if (faculty.pattern == "Semester") {
												var lastsemster = parseInt(facultyMaster.year) * 2;
												var secondLast = parseInt(facultyMaster.year) * - 1;
												lastSem = "Bachelors_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Bachelors_" + faculty.faculty + "_Semester " + secondLast;
											} else if (faculty.pattern == "Annual") {
												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
												lastYear = "Bachelors_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var diplomaHolder = true;
											var current_year = true;
											uploadedMarksheet.forEach(marksheet => {
												if (faculty.pattern == "Semester") {
													if (marksheet.name == sem1 || marksheet.name == sem2) {
														diplomaHolder = false;
													}
													if (marksheet.name == lastSem || marksheet.name == secondLastSem) {
														current_year = false;
													}
												} else if (faculty.pattern == 'Annual') {
													if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
														diplomaHolder = false;
													}
													if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
														current_year = false;
													}
												}
											})
											data.diplomaHolder = diplomaHolder;
											data.current_year = current_year;
										})
									}
								})
							})
							setTimeout(() => {
								res.json({
									status: 200,
									data: data
								})
							}, 500);
						} else if (userMarkList[0].college_stream_type == false) {
							var name = "Bachelors_" + userMarkList[0].faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: req.User.id,
									name: {
										[Op.like]: name
									},
									app_id: null
								}
							}).then(function (uploadedMarksheet) {
								if (uploadedMarksheet.length > 0) {
									var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
									var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
									var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
									var lastSem, secondLastSem, lastYear;
									models.facultymaster.find({
										where: {
											degree: userMarkList[0].type,
											faculty: userMarkList[0].faculty
										}
									}).then(function (facultyMaster) {
										if (userMarkList[0].patteren == "Semester") {
											var lastsemster = parseInt(facultyMaster.year) * 2;
											var secondLast = parseInt(facultyMaster.year) * - 1;
											lastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + lastsemster;
											secondLastSem = "Bachelors_" + userMarkList[0].faculty + "_Semester " + secondLast;

										} else if (userMarkList[0].patteren == "Annual") {
											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
											lastYear = "Bachelors_" + userMarkList[0].faculty + "_" + wordYear + " Year";
										}

										var diplomaHolder = true;
										var current_year = true;
										uploadedMarksheet.forEach(marksheet => {
											if (userMarkList[0].patteren == "Semester") {
												if (marksheet.name == sem1 || marksheet.name == sem2) {
													diplomaHolder = false;
												}
												if (marksheet.name == lastSem || marksheet.name == secondLastSem) {
													current_year = false;

												}
											} else if (userMarkList[0].patteren == 'Annual') {
												if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
													diplomaHolder = false;
												}
												if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
													current_year = false;
												}
											}
										})

										data.diplomaHolder = diplomaHolder;
										data.current_year = current_year;
										res.json({
											status: 200,
											data: data
										})
									})
								} else {
									res.json({
										status: 200,
										data: data
									})
								}
							})
						}
					} else {
						res.json({
							status: 200,
							data: data
						})
					}
				})
			} else if (req.query.eduDetails == "Masters,Bachelors") {
				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						type: "Masters",
						app_id: null
					}
				}).then(function (userMarkListMaster) {
					if (userMarkListMaster.length > 0) {
						if (userMarkListMaster[0].college_stream_type == true) {
							userMarkListMaster.forEach(marklist => {
								if (facultyData.length > 0) {
									var flag = false;
									facultyData.forEach(faculty => {
										if (faculty.faculty == marklist.faculty) {
											flag = true
										}
									})
									if (flag == false) {
										facultyData.push({
											type: marklist.type,
											faculty: marklist.faculty,
											pattern: marklist.patteren
										})
									}
								} else {
									facultyData.push({
										type: marklist.type,
										faculty: marklist.faculty,
										pattern: marklist.patteren
									})
								}
							})
							facultyData.forEach(faculty => {
								var name = "Masters_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where: {
										user_id: req.User.id,
										name: {
											[Op.like]: name
										},
										app_id: null
									}
								}).then(function (uploadedMarksheet) {
									if (uploadedMarksheet.length > 0) {

										var lastSem, secondLastSem, lastYear;
										models.facultymaster.find({
											where: {
												degree: faculty.type,
												faculty: faculty.faculty
											}
										}).then(function (facultyMaster) {

											if (faculty.pattern == "Semester") {
												var lastsemster = parseInt(facultyMaster.year) * 2;
												var secondLast = parseInt(facultyMaster.year) * - 1;
												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
											} else if (faculty.pattern == "Annual") {
												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var current_year = true;
											uploadedMarksheet.forEach(marksheet => {
												if (faculty.pattern == "Semester") {
													if (marksheet.name == lastSem || marksheet.name == secondLastSem || marksheet.name == lastSem) {
														current_year = false;
													}
												} else if (faculty.pattern == 'Annual') {
													if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
														current_year = false;
													}
												}
											})
											data.current_year = current_year;
										})
									}
								})
							})

							models.userMarkList.findAll({
								where: {
									user_id: req.User.id,
									type: "Bachelors",
									app_id: null
								}
							}).then(function (userMarkList) {
								if (userMarkList.length > 0) {
									if (userMarkList[0].college_stream_type == true) {
										userMarkList.forEach(marklist => {
											if (facultyData.length > 0) {
												var flag = false;
												facultyData.forEach(faculty => {
													if (faculty.faculty == marklist.faculty) {
														flag = true
													}
												})
												if (flag == false) {
													facultyData.push({
														type: marklist.type,
														faculty: marklist.faculty,
														pattern: marklist.patteren
													})
												}
											} else {
												facultyData.push({
													type: marklist.type,
													faculty: marklist.faculty,
													pattern: marklist.patteren
												})
											}
										})

										facultyData.forEach(faculty => {
											var name = "Bachelors_" + faculty.faculty + "_%"
											models.UserMarklist_Upload.findAll({
												where: {
													user_id: req.User.id,
													name: {
														[Op.like]: name
													},
													app_id: null
												}
											}).then(function (uploadedMarksheet) {
												if (uploadedMarksheet.length > 0) {
													var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
													var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
													var firstYear = "Bachelors_" + faculty.faculty + "_First Year";

													var diplomaHolder = true;
													uploadedMarksheet.forEach(marksheet => {

														if (faculty.pattern == "Semester") {
															if (marksheet.name == sem1 || marksheet.name == sem2) {
																diplomaHolder = false;
															}
														} else if (faculty.pattern == 'Annual') {
															if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
																diplomaHolder = false;
															}
														}
													})
													data.diplomaHolder = diplomaHolder;
												}
											})
										})
										setTimeout(() => {
											res.json({
												status: 200,
												data: data
											})
										}, 500)
									} else if (userMarkList[0].college_stream_type == false) {
										var name = "Bachelors_" + userMarkList[0].faculty + "_%"
										models.UserMarklist_Upload.findAll({
											where: {
												user_id: req.User.id,
												name: {
													[Op.like]: name
												},
												app_id: null
											}
										}).then(function (uploadedMarksheet) {
											if (uploadedMarksheet.length > 0) {
												var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
												var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
												var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
												var diplomaHolder = true;
												uploadedMarksheet.forEach(marksheet => {
													if (userMarkList[0].patteren == "Semester") {
														if (marksheet.name == sem1 || marksheet.name == sem2) {
															diplomaHolder = false;
														}
													} else if (userMarkList[0].patteren == 'Annual') {
														if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
															diplomaHolder = false;
														}
													}
												})
												data.diplomaHolder = diplomaHolder;
												res.json({
													status: 200,
													data: data
												})

											} else {
												res.json({
													status: 200,
													data: data
												})
											}
										})
									}
								} else {
									res.json({
										status: 200,
										data: data
									})
								}
							})

						} else if (userMarkListMaster[0].college_stream_type == false) {
							var name = "Masters_" + userMarkListMaster[0].faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: req.User.id,
									name: {
										[Op.like]: name
									},
									app_id: null
								}
							}).then(function (uploadedMarksheet) {
								if (uploadedMarksheet.length > 0) {
									var lastSem, secondLastSem, lastYear;
									models.facultymaster.find({
										where: {
											degree: userMarkListMaster[0].type,
											faculty: userMarkListMaster[0].faculty
										}
									}).then(function (facultyMaster) {

										if (userMarkListMaster[0].patteren == "Semester") {
											var lastsemster = parseInt(facultyMaster.year) * 2;
											var secondLast = parseInt(facultyMaster.year) * - 1;
											lastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + lastsemster;
											secondLastSem = "Masters_" + userMarkListMaster[0].faculty + "_Semester " + secondLast;
										} else if (userMarkListMaster[0].patteren == "Annual") {
											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
											lastYear = "Masters_" + userMarkListMaster[0].faculty + "_" + wordYear + " Year";
										}
										var current_year = true;
										uploadedMarksheet.forEach(marksheet => {
											if (userMarkListMaster[0].patteren == "Semester") {
												if ((marksheet.name == lastSem || marksheet.name == secondLastSem) || marksheet.name == lastSem) {
													current_year = false;
												}
											} else if (userMarkListMaster[0].patteren == 'Annual') {
												if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
													current_year = false;
												}
											}
										})
										data.current_year = current_year
										models.userMarkList.findAll({
											where: {
												user_id: req.User.id,
												type: "Bachelors",
												app_id: null
											}
										}).then(function (userMarkList) {
											if (userMarkList.length > 0) {
												if (userMarkList[0].college_stream_type == true) {
													userMarkList.forEach(marklist => {
														if (facultyData.length > 0) {
															var flag = false;
															facultyData.forEach(faculty => {
																if (faculty.faculty == marklist.faculty) {
																	flag = true
																}
															})
															if (flag == false) {
																facultyData.push({
																	type: marklist.type,
																	faculty: marklist.faculty,
																	pattern: marklist.patteren
																})
															}
														} else {
															facultyData.push({
																type: marklist.type,
																faculty: marklist.faculty,
																pattern: marklist.patteren
															})
														}
													})

													facultyData.forEach(faculty => {
														var name = "Bachelors_" + faculty.faculty + "_%"
														models.UserMarklist_Upload.findAll({
															where: {
																user_id: req.User.id,
																name: {
																	[Op.like]: name
																},
																app_id: null
															}
														}).then(function (uploadedMarksheet) {
															if (uploadedMarksheet.length > 0) {
																var sem1 = "Bachelors_" + faculty.faculty + "_Semester 1";
																var sem2 = "Bachelors_" + faculty.faculty + "_Semester 2";
																var firstYear = "Bachelors_" + faculty.faculty + "_First Year";
																var diplomaHolder = true;
																uploadedMarksheet.forEach(marksheet => {
																	if (faculty.pattern == "Semester") {
																		if (marksheet.name == sem1 || marksheet.name == sem2) {
																			diplomaHolder = false;
																		}
																	} else if (faculty.pattern == 'Annual') {
																		if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
																			diplomaHolder = true;
																		}
																	}
																})
																data.diplomaHolder = diplomaHolder
															}
														})
													})

													res.json({
														status: 200,
														data: data
													})
												} else if (userMarkList[0].college_stream_type == false) {
													var name = "Bachelors_" + userMarkList[0].faculty + "_%"
													models.UserMarklist_Upload.findAll({
														where: {
															user_id: req.User.id,
															name: {
																[Op.like]: name
															},
															app_id: null
														}
													}).then(function (uploadedMarksheet) {
														if (uploadedMarksheet.length > 0) {
															var sem1 = "Bachelors_" + userMarkList[0].faculty + "_Semester 1";
															var sem2 = "Bachelors_" + userMarkList[0].faculty + "_Semester 2";
															var firstYear = "Bachelors_" + userMarkList[0].faculty + "_First Year";
															var diplomaHolder = true;
															uploadedMarksheet.forEach(marksheet => {
																if (userMarkList[0].patteren == "Semester") {
																	if (marksheet.name == sem1 || marksheet.name == sem2) {
																		diplomaHolder = false;
																	}
																} else if (userMarkList[0].patteren == 'Annual') {
																	if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
																		diplomaHolder = false;
																	}
																}
															})
															data.diplomaHolder = diplomaHolder;
															res.json({
																status: 200,
																data: data
															})

														} else {
															res.json({
																status: 200,
																data: data
															})
														}
													})
												}
											} else {
												res.json({
													status: 200,
													data: data
												})
											}
										})
									})
								} else {
									res.json({
										status: 200,
										data: data
									})
								}
							})
						}
					} else {
						res.json({
							status: 200,
							data: data
						})
					}
				})
			} else if (req.query.eduDetails == "Masters") {

				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						type: "Masters",
						app_id: null
					}
				}).then(function (userMarkList) {
					if (userMarkList.length > 0) {
						if (userMarkList[0].college_stream_type == true) {
							userMarkList.forEach(marklist => {
								if (facultyData.length > 0) {
									var flag = false;
									facultyData.forEach(faculty => {
										if (faculty.faculty == marklist.faculty) {
											flag = true
										}
									})
									if (flag == false) {
										facultyData.push({
											type: marklist.type,
											faculty: marklist.faculty,
											pattern: marklist.patteren
										})
									}
								} else {
									facultyData.push({
										type: marklist.type,
										faculty: marklist.faculty,
										pattern: marklist.patteren
									})
								}
							})

							facultyData.forEach(faculty => {
								var name = "Masters_" + faculty.faculty + "_%"
								models.UserMarklist_Upload.findAll({
									where: {
										user_id: req.User.id,
										name: {
											[Op.like]: name
										},
										app_id: null
									}
								}).then(function (uploadedMarksheet) {
									if (uploadedMarksheet.length > 0) {
										var sem1 = "Masters_" + faculty.faculty + "_Semester 1";

										var sem2 = "Masters_" + faculty.faculty + "_Semester 2";
										var firstYear = "Masters_" + faculty.faculty + "_First Year";
										var lastSem, secondLastSem, lastYear;
										models.facultymaster.find({
											where: {
												degree: faculty.type,
												faculty: faculty.faculty
											}
										}).then(function (facultyMaster) {
											if (faculty.pattern == "Semester") {
												var lastsemster = parseInt(facultyMaster.year) * 2;
												var secondLast = parseInt(facultyMaster.year) * - 1;
												lastSem = "Masters_" + faculty.faculty + "_Semester " + lastsemster;
												secondLastSem = "Masters_" + faculty.faculty + "_Semester " + secondLast;
											} else if (faculty.pattern == "Annual") {
												var wordYear = converter.toWordsOrdinal(facultyMaster.year);
												lastYear = "Masters_" + faculty.faculty + "_" + wordYear + " Year";
											}
											var diplomaHolder = true;
											var current_year = true;
											uploadedMarksheet.forEach(marksheet => {
												if (faculty.pattern == "Semester") {
													if (marksheet.name == sem1 || marksheet.name == sem2) {
														diplomaHolder = false;
													}
													if (marksheet.name == lastSem || marksheet.name == secondLastSem) {
														current_year = false;
													}
												} else if (faculty.pattern == 'Annual') {
													if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
														diplomaHolder = false;
													}
													if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
														current_year = false;
													}
												}
											})
											data.diplomaHolder = diplomaHolder;
											data.current_year = current_year;
										})
									}
								})
							})
							setTimeout(() => {
								res.json({
									status: 200,
									data: data
								})
							}, 500);
						} else if (userMarkList[0].college_stream_type == false) {
							var name = "Masters_" + userMarkList[0].faculty + "_%"
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: req.User.id,
									name: {
										[Op.like]: name
									},
									app_id: null
								}
							}).then(function (uploadedMarksheet) {
								if (uploadedMarksheet.length > 0) {
									var sem1 = "Masters_" + userMarkList[0].faculty + "_Semester 1";
									var sem2 = "Masters_" + userMarkList[0].faculty + "_Semester 2";
									var firstYear = "Masters_" + userMarkList[0].faculty + "_First Year";
									var lastSem, secondLastSem, lastYear;
									models.facultymaster.find({
										where: {
											degree: userMarkList[0].type,
											faculty: userMarkList[0].faculty
										}
									}).then(function (facultyMaster) {
										if (userMarkList[0].patteren == "Semester") {
											var lastsemster = parseInt(facultyMaster.year) * 2;
											var secondLast = parseInt(facultyMaster.year) * - 1;
											lastSem = "Masters_" + userMarkList[0].faculty + "_Semester " + lastsemster;
											secondLastSem = "Masters_" + userMarkList[0].faculty + "_Semester " + secondLast;

										} else if (userMarkList[0].patteren == "Annual") {
											var wordYear = converter.toWordsOrdinal(facultyMaster.year);
											lastYear = "Masters_" + userMarkList[0].faculty + "_" + wordYear + " Year";
										}

										var diplomaHolder = true;
										var current_year = true;
										uploadedMarksheet.forEach(marksheet => {
											if (userMarkList[0].patteren == "Semester") {
												if (marksheet.name == sem1 || marksheet.name == sem2) {
													diplomaHolder = false;
												}
												if (marksheet.name == lastSem || marksheet.name == secondLastSem) {
													current_year = false;

												}
											} else if (userMarkList[0].patteren == 'Annual') {
												if (marksheet.name.toLowerCase() == firstYear.toLowerCase()) {
													diplomaHolder = false;
												}
												if (marksheet.name.toLowerCase() == lastYear.toLowerCase()) {
													current_year = false;
												}
											}
										})

										data.diplomaHolder = diplomaHolder;
										data.current_year = current_year;
										res.json({
											status: 200,
											data: data
										})
									})
								} else {
									res.json({
										status: 200,
										data: data
									})
								}
							})
						}
					} else {
						res.json({
							status: 200,
							data: data
						})
					}
				})
			}
		}
	})


});
router.post('/setDiplomaOrCurrent', middlewares.getUserInfo, function (req, res) {
	console.log('/setDiplomaOrCurrent');
	models.Applied_For_Details.find({
		where: {
			user_id: req.User.id,
			app_id: null
		}
	}).then(function (appliedDetails) {
		if (req.body.type == "diplomaHolder") {
			appliedDetails.update({
				diplomaHolder: req.body.value
			}).then(function (updatedDetails) {
				res.json({
					status: 200
				})
			})
		}

		if (req.body.type == "current_year") {
			appliedDetails.update({
				current_year: req.body.value
			}).then(function (updatedDetails) {
				res.json({
					status: 200
				})
			})
		}

		if (req.body.type == "diplomaHolder_and_current_year") {
			appliedDetails.update({
				diplomaHolder: req.body.value,
				current_year: req.body.value
			}).then(function (updatedDetails) {
				res.json({
					status: 200
				})
			})
		}
	})
});

router.post('/editinstructionalUserDetails', middlewares.getUserInfo, async (req, res) => {
	models.InstructionalDetails.find({
		where: {
			userId: req.User.id,
			education: req.body.education

		}
	}).then(user => {
		user.update({
			studentName: req.body.nameCtrl,
			courseName: req.body.courseCtrl,
			collegeName: req.body.collegeCtrl,
			specialization: req.body.specializationCtrl,
			duration: req.body.durationCtrl,
			yearofpassing: req.body.passingCtrl,
			division: req.body.divisionCtrl,
			academicYear: req.body.acadYearCtrl
		}).then(userUpdated => {
			res.status(200).json({
				message: 'data saved successfully!!!'
			})
		})
	})
})

router.post('/editaffiliationLetterFormValue', middlewares.getUserInfo, async (req, res) => {
	models.Affiliation_Letter.find({
		where: {
			user_id: req.User.id,
			education: req.body.education

		}

	}).then(user => {

		user.update({
			studentName: req.body.nameCtrl,
			courseName: req.body.courseCtrl,
			collegeName: req.body.collegeCtrl,
			specialization: req.body.specializationCtrl,
			duration: req.body.durationCtrl,
			yearofpassing: req.body.passingCtrl,
			division: req.body.divisionCtrl,
			academicYear: req.body.acadYearCtrl
		}).then(userUpdated => {
			res.status(200).json({
				message: 'data saved successfully!!!'
			})
		})



	})
})


router.get('/post_applicationdata', middlewares.getUserInfo, async (req, res) => {
	console.log('post_applicationdata');
	var email = req.query.email;
	var applicationData = [];
	models.Application.getAllApplicationsDetails(email).then(function (applications) {
		applications.forEach(application => {
			var status;
			if (application.transcriptRequiredMail == true) {
				status = 'On Hold'
			} else {
				status = application.status
			}
			applicationData.push({
				app_id: application.id,
				tracker: application.tracker,
				status: status,
				notes: application.notes
			})
		})
		res.json({
			status: 200,
			data: applicationData
		})
	})
})


router.get('/post_applicationdata_byApp_id', middlewares.getUserInfo, async (req, res) => {
	console.log('post_applicationdata_byApp_id');
	var email = req.query.app_id;
	var applicationData = [];
	models.Application.find({
		where: {
			id: email
		}
	}).then(function (applications) {
		var status;
		if (applications.transcriptRequiredMail == true) {
			status = 'On Hold'
		} else {
			status = applications.status
		}
		applicationData.push({
			app_id: applications.id,
			tracker: applications.tracker,
			status: status,
			notes: applications.notes
		})

		res.json({
			status: 200,
			data: applicationData
		})
	})
})
router.get('/Pre_applicationdata', middlewares.getUserInfo, async (req, res) => {
	console.log('Pre_applicationdata');
	// var userId= '51033';
	var Predata = [];

	models.User.find({
		where: {
			email: req.query.email
		}
	}).then(function (user) {
		userId = user.id

		models.Applied_For_Details.find({
			where: {
				user_id: userId
			}
		}).then(function (applied_fordetails) {
			if (applied_fordetails) {

				if (applied_fordetails.applying_for == 'Bachelors') {
					models.userMarkList.find({
						where: {
							user_id: userId,
							type: 'Bachelors',
							app_id: null
						}
					}).then(function (userdetails) {
						if (userdetails) {
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: userId,
									education_type: 'Bachelors',
									app_id: null
								}
							}).then(function (usermarklistupload_details) {

								if (usermarklistupload_details.length > 0) {
									if (applied_fordetails.instructionalField == true) {
										console.log('trueeee');
										models.InstructionalDetails.findAll({
											where: {
												userId: userId
											}
										}).then(function (instructionaldetails) {
											if (instructionaldetails.length > 0) {
												console.log('length <o ');
												Predata.push({
													message: 'You Have Filled your Instructional Details - 4th Step',
													data: instructionaldetails
												})
											} else {
												console.log('length 00 ');

												Predata.push({
													message: 'You Have Not Filled your Instructional Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.educationalDetails == true) {
										console.log('educational');
										models.User_Transcript.findAll({
											where: {
												user_id: userId
											}
										}).then(function (educationaldetails) {
											if (educationaldetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Transcript Details - 4th Step',
													data: educationaldetails
												})
											} else {
												console.log('seerere');
												Predata.push({
													message: 'You have Not Filled your Transcript Details - 4th Step'
												})
											}

										})


									}
									if (applied_fordetails.curriculum == true) {
										models.User_Curriculum.findAll({
											where: {
												user_id: userId
											}
										}).then(function (curriculumdetails) {
											if (curriculumdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Curriculum Details - 4th Step',
													data: curriculumdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Curriculum Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.gradToPer == true) {
										models.GradeToPercentageLetter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (gardetoperdetails) {
											if (gardetoperdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your GradeToPercentage Details - 4th Step',
													data: gardetoperdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your GradeToPercentage Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.affiliation == true) {
										models.Affiliation_Letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (affiliationdetails) {
											if (affiliationdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Affiliation Details - 4th Step',
													data: affiliationdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Affiliation Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.CompetencyLetter == true) {
										models.competency_letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (competencydetails) {
											if (competencydetails.length > 0) {
												Predata.push({
													message: 'You have Filled your CompetencyLetter Details - 4th Step',
													data: competencydetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your CompetencyLetter Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.LetterforNameChange == true) {
										models.Letterfor_NameChange.findAll({
											where: {
												user_id: userId
											}
										}).then(function (letterfornamechange) {
											if (letterfornamechange.length > 0) {
												Predata.push({
													message: 'You have Filled your LetterForNameChange Details - 4th Step',
													data: letterfornamechange
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your LetterForNameChange Details - 4th Step',
												})
											}

										})

									}

									models.Institution_details.findAll({
										where: {
											user_id: userId,
											app_id: null
										}
									}).then(function (purposedetails) {
										if (purposedetails.length > 0) {
											Predata.push({
												message: 'You have Filled Your Purpose',
												data: purposedetails
											})
										} else {
											Predata.push({
												message: 'You have Not Filled Your Purpose',
												// data : letterfornamechange
											})
										}
									})

									setTimeout(() => {
										res.json({
											data: Predata
										})
									}, 3000)


								} else {
									Predata.push({
										message: 'You have Not Filled Your Marksheets-3rd step'
									})
								}




							})

						} else {
							Predata.push({
								message: 'You Have Not Filled your College Information-2nd step'
							})
						}


					})

				} if (applied_fordetails.applying_for == 'Masters,Bachelors') {
					models.userMarkList.find({
						where: {
							user_id: userId,
							type: 'Masters',
							app_id: null
						}
					}).then(function (userdetails) {
						if (userdetails) {
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: userId,
									education_type: 'Masters',
									app_id: null
								}
							}).then(function (usermarklistupload_details) {

								if (usermarklistupload_details.length > 0) {
									if (applied_fordetails.instructionalField == true) {
										models.InstructionalDetails.findAll({
											where: {
												userId: userId
											}
										}).then(function (instructionaldetails) {
											if (instructionaldetails.length > 0) {
												Predata.push({
													message: 'You Have Filled your Instructional Details - 4th Step',
													data: instructionaldetails
												})
											} else {

												Predata.push({
													message: 'You Have Not Filled your Instructional Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.educationalDetails == true) {
										models.User_Transcript.findAll({
											where: {
												user_id: userId
											}
										}).then(function (educationaldetails) {
											if (educationaldetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Transcript Details - 4th Step',
													data: educationaldetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Transcript Details - 4th Step'
												})
											}

										})


									}
									if (applied_fordetails.curriculum == true) {
										models.User_Curriculum.findAll({
											where: {
												user_id: userId
											}
										}).then(function (curriculumdetails) {
											if (curriculumdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Curriculum Details - 4th Step',
													data: curriculumdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Curriculum Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.gradToPer == true) {
										models.GradeToPercentageLetter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (gardetoperdetails) {
											if (gardetoperdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your GradeToPercentage Details - 4th Step',
													data: gardetoperdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your GradeToPercentage Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.affiliation == true) {
										models.Affiliation_Letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (affiliationdetails) {
											if (affiliationdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Affiliation Details - 4th Step',
													data: affiliationdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Affiliation Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.CompetencyLetter == true) {
										models.competency_letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (competencydetails) {
											if (competencydetails.length > 0) {
												Predata.push({
													message: 'You have Filled your CompetencyLetter Details - 4th Step',
													data: competencydetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your CompetencyLetter Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.LetterforNameChange == true) {
										models.Letterfor_NameChange.findAll({
											where: {
												user_id: userId
											}
										}).then(function (letterfornamechange) {
											if (letterfornamechange.length > 0) {
												Predata.push({
													message: 'You have Filled your LetterForNameChange Details - 4th Step',
													data: letterfornamechange
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your LetterForNameChange Details - 4th Step',
												})
											}

										})

									}

									models.Institution_details.findAll({
										where: {
											user_id: userId,
											app_id: null
										}
									}).then(function (purposedetails) {
										if (purposedetails.length > 0) {
											Predata.push({
												message: 'You have Filled Your Purpose',
												data: purposedetails
											})
										} else {
											Predata.push({
												message: 'You have Not Filled Your Purpose',
												// data : letterfornamechange
											})
										}
									})

									setTimeout(() => {
										res.json({
											data: Predata
										})
									}, 3000)


								} else {
									Predata.push({
										message: 'You have Not Filled Your Marksheets-3rd step'
									})
								}




							})

						} else {
							Predata.push({
								message: 'You Have Not Filled your College Information-2nd step'
							})
						}


					})

				} if (applied_fordetails.applying_for == 'Phd,MastersBachelors') {
					models.userMarkList.find({
						where: {
							user_id: userId,
							type: 'Phd',
							app_id: null
						}
					}).then(function (userdetails) {
						if (userdetails) {
							models.UserMarklist_Upload.findAll({
								where: {
									user_id: userId,
									education_type: 'Phd',
									app_id: null
								}
							}).then(function (usermarklistupload_details) {

								if (usermarklistupload_details.length > 0) {
									if (applied_fordetails.instructionalField == true) {
										models.InstructionalDetails.findAll({
											where: {
												userId: userId
											}
										}).then(function (instructionaldetails) {
											if (instructionaldetails.length > 0) {
												Predata.push({
													message: 'You Have Filled your Instructional Details - 4th Step',
													data: instructionaldetails
												})
											} else {

												Predata.push({
													message: 'You Have Not Filled your Instructional Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.educationalDetails == true) {
										models.User_Transcript.findAll({
											where: {
												user_id: userId
											}
										}).then(function (educationaldetails) {
											if (educationaldetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Transcript Details - 4th Step',
													data: educationaldetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Transcript Details - 4th Step'
												})
											}

										})


									}
									if (applied_fordetails.curriculum == true) {
										models.User_Curriculum.findAll({
											where: {
												user_id: userId
											}
										}).then(function (curriculumdetails) {
											if (curriculumdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Curriculum Details - 4th Step',
													data: curriculumdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Curriculum Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.gradToPer == true) {
										models.GradeToPercentageLetter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (gardetoperdetails) {
											if (gardetoperdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your GradeToPercentage Details - 4th Step',
													data: gardetoperdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your GradeToPercentage Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.affiliation == true) {
										models.Affiliation_Letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (affiliationdetails) {
											if (affiliationdetails.length > 0) {
												Predata.push({
													message: 'You have Filled your Affiliation Details - 4th Step',
													data: affiliationdetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your Affiliation Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.CompetencyLetter == true) {
										models.competency_letter.findAll({
											where: {
												user_id: userId
											}
										}).then(function (competencydetails) {
											if (competencydetails.length > 0) {
												Predata.push({
													message: 'You have Filled your CompetencyLetter Details - 4th Step',
													data: competencydetails
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your CompetencyLetter Details - 4th Step'
												})
											}
										})

									}
									if (applied_fordetails.LetterforNameChange == true) {
										models.Letterfor_NameChange.findAll({
											where: {
												user_id: userId
											}
										}).then(function (letterfornamechange) {
											if (letterfornamechange.length > 0) {
												Predata.push({
													message: 'You have Filled your LetterForNameChange Details - 4th Step',
													data: letterfornamechange
												})
											} else {
												Predata.push({
													message: 'You have Not Filled your LetterForNameChange Details - 4th Step',
												})
											}

										})

									}

									models.Institution_details.findAll({
										where: {
											user_id: userId,
											app_id: null
										}
									}).then(function (purposedetails) {
										if (purposedetails.length > 0) {
											Predata.push({
												message: 'You have Filled Your Purpose',
												data: purposedetails
											})
										} else {
											Predata.push({
												message: 'You have Not Filled Your Purpose',
												// data : letterfornamechange
											})
										}
									})

									setTimeout(() => {
										res.json({
											data: Predata
										})
									}, 3000)


								} else {
									Predata.push({
										message: 'You have Not Filled Your Marksheets-3rd step'
									})
								}




							})

						} else {
							Predata.push({
								message: 'You Have Not Filled your College Information-2nd step'
							})
						}


					})

				}
			} else {
				Predata.push({
					message: 'Applied Details not filled (1st step)'
				})
			}


		})
	})

})



router.post('/setPaymentIssueDetails', middlewares.getUserInfo, async (req, res) => {
	console.log('setPaymentIssueDetails')
	var data = req.body.data
	var userId = req.user.id
	var studentData = [];
	var attachment = {};
	var updatedetails;

	models.paymenterror_details.find({
		where: {
			user_id: userId
		}
	}).then(function (userdata) {
		if (userdata) {
			userdata.update({
				email: req.body.data.emailId,
				date: req.body.data.paymentDate,
				transaction_id: req.body.data.transactionId,
				order_id: req.body.data.orderId,
				bank_refno: req.body.data.bankRefNo,
				amount: req.body.data.amount,
				note: req.body.data.note
			}).then(function (studentdetails) {

				var file_location = constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + userId + '/' + studentdetails.file_name;
				var base64String = fs.readFileSync(file_location).toString("base64");
				attachment = {
					content: base64String,
					filename: studentdetails.file_name,
					type: 'application/pdf',
					disposition: 'attachment',
					contentId: 'mytext'
				}

				studentData.push({
					studentdetails: studentdetails,
					attachment: attachment
				})
				request.post(constant.BASE_URL_SENDGRID + 'Paymenterror_toAdmin', {
					json: {
						studentData: studentData,
						// attachment :  attachment
					}
				}, function (error, response, body) {
					if (response) {
						res.json({
							status: 200
						})
					} else {
						status: 400
					}
				})

			})
		} else {
		}

	})



})

router.get('/getPaymentIssueDetails', middlewares.getUserInfo, async (req, res) => {
	console.log('/getPaymentIssueDetails');
	var filename = [];
	models.paymenterror_details.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (getallDetails) {
		if (getallDetails) {
			filename.push({
				filePath: (getallDetails[0].file_name) ? constant.FILE_LOCATION + "public/upload/Payment_Acknowledgement/" + req.User.id + "/" + getallDetails[0].file_name : null,
				filename: (getallDetails[0].file_name) ? constant.BASE_URL + "/upload/Payment_Acknowledgement/" + req.User.id + "/" + getallDetails[0].file_name : null,
			})

			res.json({
				status: 200,
				data: getallDetails,
				fileName: filename
			})
		} else {
			res.json({
				status: 400,
				// data  : getallDetails
			})
		}
	})
})
// router.get('/checkDegree',middlewares.getUserInfo,async(req,res)=>{
// 	console.log("/checkDegreee");
// 	var bach_Data=[];
// 	var mast_Data=[];
// 	var phd_Data=[];

// 	models.Applied_For_Details.findAll({
// 		where : {
// 			user_id :  req.User.id,
// 			app_id : null
// 		}
// 	}).then(function (appl){
// 		console.log("appl[0].applying_for "+ appl[0].applying_for );
// 		if(appl[0].applying_for == 'Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null
// 				}
// 			}).then(function (bachdata){
// 				bach_Data.push({
// 					value  :'bach'
// 				})
// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					phd_Data : phd_Data
// 				})
// 			})

// 		}else if(appl[0].applying_for == 'Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null,
// 					type : 'Bachelors'
// 				}
// 			}).then(function (bachdata){
// 				bach_Data.push({
// 					value  :'bach'
// 				})
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :null,
// 					type : 'Masters'
// 				}
// 			}).then(function (mastdata) {
// 				mast_Data.push({
// 					value  :'mast'
// 				})

// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					// phd_Data : phd_Data
// 				})
// 				console.log("bach_Dat1"+ JSON.stringify(bach_Data));
// 				console.log("mast_Data2"+ JSON.stringify(mast_Data));
// 			})			


// 			})

// 		}else if(appl[0].applying_for == 'Phd,Masters,Bachelors'){
// 			models.userMarkList.findAll({
// 				where  :{
// 					user_id : req.User.id,
// 					// app_id :'null',
// 					type : 'Phd'
// 				}
// 			}).then(function (bachdata){
// 				console.log("innnn");
// 				phd_Data.push({
// 					value  :'phd'
// 				})
// 				console.log("phd_Data"+ phd_Data);
// 				res.json({
// 					status : 200,
// 					bach_Data : bach_Data,
// 					mast_Data : mast_Data,
// 					phd_Data : phd_Data
// 				})
// 			})

// 		}

// 		console.log("bach_Data"+bach_Data);
// 		console.log("mast_Data"+mast_Data);
// 		console.log("phd_Data"+phd_Data);

// 	})

// })

router.get('/checkDegree', middlewares.getUserInfo, async (req, res) => {
	console.log("/checkDegreee");
	var bach_Data = [];
	var mast_Data = [];
	var phd_Data = [];

	models.Applied_For_Details.findAll({
		where: {
			user_id: req.User.id,
			app_id: null
		}
	}).then(function (appl) {
		console.log("appl[0].applying_for " + appl[0].applying_for);
		if (appl[0].applying_for == 'Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					// app_id :null
				}
			}).then(function (bachdata) {
				bach_Data.push({
					value: 'bach'
				})
				res.json({
					status: 200,
					bach_Data: bach_Data,
					mast_Data: null,
					phd_Data: null
				})
			})

		} else if (appl[0].applying_for == 'Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					// app_id :null,
					type: 'Bachelors'
				}
			}).then(function (bachdata) {
				bach_Data.push({
					value: 'bach'
				})
				models.userMarkList.findAll({
					where: {
						user_id: req.User.id,
						// app_id :null,
						type: 'Masters'
					}
				}).then(function (mastdata) {
					mast_Data.push({
						value: 'mast'
					})

					phd_Data.push({
						value: 'null'
					})
					res.json({
						status: 200,
						bach_Data: bach_Data,
						mast_Data: mast_Data,
						phd_Data: phd_Data
					})
					console.log("bach_Dat1" + JSON.stringify(bach_Data));
					console.log("mast_Data2" + JSON.stringify(mast_Data));
				})


			})

		} else if (appl[0].applying_for == 'Phd,Masters,Bachelors') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					// app_id :'null',
					type: 'Phd'
				}
			}).then(function (bachdata) {
				console.log("innnn");
				phd_Data.push({
					value: 'phd'
				})
				bach_Data.push({
					value: ''
				})
				mast_Data.push({
					value: ''
				})
				console.log("phd_Data" + JSON.stringify(phd_Data));
				res.json({
					status: 200,
					bach_Data: bach_Data,
					mast_Data: mast_Data,
					phd_Data: phd_Data
				})
			})

		} if (appl[0].applying_for == 'Masters') {
			models.userMarkList.findAll({
				where: {
					user_id: req.User.id,
					// app_id :null
				}
			}).then(function (bachdata) {
				mast_Data.push({
					value: 'mast'
				})
				bach_Data.push({
					value: ''
				})
				phd_Data.push({
					value: ''
				})
				res.json({
					status: 200,
					mast_Data: mast_Data,
					bach_Data: bach_Data,
					phd_Data: phd_Data
				})
			})

		}

		console.log("bach_Data" + bach_Data);
		console.log("mast_Data" + mast_Data);
		console.log("phd_Data" + phd_Data);

	})

})
router.get('/geterror_msg', middlewares.getUserInfo, async (req, res) => {
	console.log('geterror_msg');
	var userId = req.User.id;
	var Predata = [];


	models.Applied_For_Details.findAll({
		where: {
			user_id: userId,
			app_id: null
		}
	}).then(function (userdetails) {

		if (req.query.value == 2) {
			console.log("userdetails[0].applying_for" + userdetails[0].applying_for);
			if (userdetails[0].applying_for == 'Bachelors') {
				models.userMarkList.findAll({
					where: {
						user_id: userId,
						type: 'Bachelors',
						app_id: null
					}
				}).then(function (usermarklist) {
					if (usermarklist.length > 0) {
						Predata.push({
							user: 'uploaded'
						})
					} else {
						Predata.push({
							user: 'Kindly Fill Your Bachelors College Details'
						})
					}


				})
			}
			if (userdetails[0].applying_for == 'Masters,Bachelors') {
				models.userMarkList.findAll({
					where: {
						user_id: userId,
						type: 'Masters',
						app_id: null
					}
				}).then(function (usermarklist) {
					if (usermarklist.length > 0) {
						Predata.push({
							user: 'uploaded'
						})
					} else {
						Predata.push({
							user: 'Kindly Fill Your Masters College Details'
						})
					}


				})
			}
			if (userdetails[0].applying_for == 'Phd,Masters,Bachelors') {
				models.userMarkList.findAll({
					where: {
						user_id: userId,
						type: 'Phd',
						app_id: null
					}
				}).then(function (usermarklist) {
					if (usermarklist.length > 0) {
						Predata.push({
							user: 'uploaded'
						})
					} else {
						Predata.push({
							user: 'Kindly Fill Your Phd College Details'
						})
					}


				})
			}
			if (userdetails[0].applying_for == 'Masters') {
				models.userMarkList.findAll({
					where: {
						user_id: userId,
						type: 'Masters',
						app_id: null
					}
				}).then(function (usermarklist) {
					if (usermarklist.length > 0) {
						Predata.push({
							user: 'uploaded'
						})
					} else {
						Predata.push({
							user: 'Kindly Fill Your Masters College Details'
						})
					}


				})
			}

		}
		else if (req.query.value == 3) {
			if (userdetails[0].applying_for == 'Bachelors') {
				models.UserMarklist_Upload.findAll({
					where: {
						user_id: userId,
						education_type: 'Bachelors',
						app_id: null
					}
				}).then(function (marksheet) {
					if (marksheet.length > 0) {

						Predata.push({
							user: 'uploaded'
						})
					} else {

						Predata.push({
							user: 'Kindly Upload Your Bachelors Marksheet'
						})
					}
				})
			}
			if (userdetails[0].applying_for == 'Masters,Bachelors') {

				models.userMarkList.find({
					where: {
						user_id: userId,
						type: 'Masters',
						app_id: null
					}
				}).then(function (marklistdata) {
					models.UserMarklist_Upload.findAll({
						where: {
							user_id: userId,
							education_type: marklistdata.type
						}
					}).then(function (marksheet) {
						if (marksheet.length > 0) {

							Predata.push({
								user: 'uploaded'
							})
						} else {

							Predata.push({
								user: 'Kindly Upload Your Masters Marksheet'
							})
						}
					})
				})


			}
			if (userdetails[0].applying_for == 'Phd,Masters,Bachelors') {

				models.userMarkList.find({
					where: {
						user_id: userId,
						type: 'Phd',
						app_id: null
					}
				}).then(function (marklistdata) {

					models.UserMarklist_Upload.findAll({
						where: {
							user_id: userId,
							education_type: marklistdata.type
						}
					}).then(function (marksheet) {
						if (marksheet.length > 0) {

							Predata.push({
								user: 'uploaded'
							})
						} else {

							Predata.push({
								user: 'Kindly Upload Your Phd Marksheet'
							})
						}
					})
				})
			}
			if (userdetails[0].applying_for == 'Masters') {

				models.userMarkList.find({
					where: {
						user_id: userId,
						type: 'Masters',
						app_id: null
					}
				}).then(function (marklistdata) {

					models.UserMarklist_Upload.findAll({
						where: {
							user_id: userId,
							education_type: marklistdata.type
						}
					}).then(function (marksheet) {
						if (marksheet.length > 0) {

							Predata.push({
								user: 'uploaded'
							})
						} else {

							Predata.push({
								user: 'Kindly Upload Your Masters Marksheet'
							})
						}
					})
				})
			}

		}
		else if (req.query.value == 4) {

			models.Applied_For_Details.findAll({
				where: {
					user_id: userId
				}
			}).then(function (applied_for) {
				if (applied_for[0].applying_for == 'Bachelors') {
					if (applied_for[0].instructionalField == true) {
						models.InstructionalDetails.findAll({
							where: {
								userId: userId,
								education: {
									[Op.like]: "%Bachelors%"

								},
								app_id: null
							}
						}).then(function (instructionaldetails) {
							if (instructionaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {

								Predata.push({
									user: 'Kindly Upload Bachelors Instructional Details'
								})
							}
						})

					}
					if (applied_for[0].educationalDetails == true) {
						models.User_Transcript.findAll({
							where: {
								user_id: userId,
								type: {
									[Op.like]: "%Bachelors%"

								},
								app_id: null
							}
						}).then(function (educationaldetails) {
							if (educationaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Upload Your Bachelors Transcript'
								})
							}

						})


					}
					if (applied_for[0].curriculum == true) {
						models.User_Curriculum.findAll({
							where: {
								user_id: userId,
								app_id: null

							}
						}).then(function (curriculumdetails) {
							if (curriculumdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Curriculum'
								})
							}
						})

					}
					if (applied_for[0].gradToPer == true) {
						models.GradeToPercentageLetter.findAll({
							where: {
								user_id: userId,
								name: {
									[Op.like]: "%Bachelors_%"

								},
								app_id: null
							}
						}).then(function (gardetoperdetails) {
							if (gardetoperdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Bachelors GradeToPercentage Letter'
								})
							}
						})

					}
					if (applied_for[0].affiliation == true) {
						models.Affiliation_Letter.findAll({
							where: {
								user_id: userId,
								education: {
									[Op.like]: "%Bachelors%"
								},
								app_id: null
							}
						}).then(function (affiliationdetails) {
							if (affiliationdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Bachelors Affiliation Letter'
								})
							}
						})

					}
					if (applied_for[0].CompetencyLetter == true) {
						models.competency_letter.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (competencydetails) {
							if (competencydetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Competency Letter'
								})
							}
						})

					}
					if (applied_for[0].LetterforNameChange == true) {
						models.Letterfor_NameChange.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (letterfornamechange) {
							if (letterfornamechange.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Fill Letter For NameChange Details'
								})
							}

						})

					}
				}
				if (applied_for[0].applying_for == 'Masters,Bachelors') {
					if (applied_for[0].instructionalField == true) {
						models.InstructionalDetails.findAll({
							where: {
								userId: userId,
								education: {
									[Op.like]: "%Masters%"

								},
								app_id: null
							}
						}).then(function (instructionaldetails) {
							if (instructionaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {

								Predata.push({
									user: 'Kindly Fill Masters Instructional Details'
								})
							}
						})

					}
					if (applied_for[0].educationalDetails == true) {
						models.User_Transcript.findAll({
							where: {
								user_id: userId,
								type: {
									[Op.like]: "%Masters%"

								},
							}
						}).then(function (educationaldetails) {
							if (educationaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Your Masters Transcript'
								})
							}

						})


					}
					if (applied_for[0].curriculum == true) {
						models.User_Curriculum.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (curriculumdetails) {
							if (curriculumdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Curriculum'
								})
							}
						})

					}
					if (applied_for[0].gradToPer == true) {
						models.GradeToPercentageLetter.findAll({
							where: {
								user_id: userId,
								name: {
									[Op.like]: "%Masters%"

								},
								app_id: null
							}
						}).then(function (gardetoperdetails) {
							if (gardetoperdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Masters GradeToPercentage Letter'
								})
							}
						})

					}
					if (applied_for[0].affiliation == true) {
						models.Affiliation_Letter.findAll({
							where: {
								user_id: userId,
								education: {
									[Op.like]: "%Masters%"
								},
								app_id: null
							}
						}).then(function (affiliationdetails) {
							if (affiliationdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Masters Affiliation Letter'
								})
							}
						})

					}
					if (applied_for[0].CompetencyLetter == true) {
						models.competency_letter.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (competencydetails) {
							if (competencydetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Competency Letter'
								})
							}
						})

					}
					if (applied_for[0].LetterforNameChange == true) {
						models.Letterfor_NameChange.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (letterfornamechange) {
							if (letterfornamechange.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Fill Letter For NameChange Details'
								})
							}

						})

					}
				}
				if (applied_for[0].applying_for == 'Phd,Masters,Bachelors') {
					if (applied_for[0].instructionalField == true) {
						models.InstructionalDetails.findAll({
							where: {
								userId: userId,
								app_id: null
							}
						}).then(function (instructionaldetails) {
							if (instructionaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {

								Predata.push({
									user: 'Kindly Fill Instructional Details'
								})
							}
						})

					}
					if (applied_for[0].educationalDetails == true) {
						models.User_Transcript.findAll({
							where: {
								user_id: userId,
								type: {
									[Op.like]: "%Phd%"

								},
								app_id: null
							}
						}).then(function (educationaldetails) {
							if (educationaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Your Phd Transcript'
								})
							}

						})


					}
					if (applied_for[0].curriculum == true) {
						models.User_Curriculum.findAll({
							where: {
								user_id: userId,
								app_id: null

							}
						}).then(function (curriculumdetails) {
							if (curriculumdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Curriculum'
								})
							}
						})

					}
					if (applied_for[0].gradToPer == true) {
						models.GradeToPercentageLetter.findAll({
							where: {
								user_id: userId,
								app_id: null

							}
						}).then(function (gardetoperdetails) {
							if (gardetoperdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload  GradeToPercentage Letter'
								})
							}
						})

					}
					if (applied_for[0].affiliation == true) {
						models.Affiliation_Letter.findAll({
							where: {
								user_id: userId,
								app_id: null

							}
						}).then(function (affiliationdetails) {
							if (affiliationdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Affiliation Letter'
								})
							}
						})

					}
					if (applied_for[0].CompetencyLetter == true) {
						models.competency_letter.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (competencydetails) {
							if (competencydetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Competency Letter'
								})
							}
						})

					}
					if (applied_for[0].LetterforNameChange == true) {
						models.Letterfor_NameChange.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (letterfornamechange) {
							if (letterfornamechange.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Fill Letter For NameChange Details'
								})
							}

						})

					}
				}
				if (applied_for[0].applying_for == 'Masters') {
					if (applied_for[0].instructionalField == true) {
						models.InstructionalDetails.findAll({
							where: {
								userId: userId,
								education: {
									[Op.like]: "%Masters%"

								},
								app_id: null
							}
						}).then(function (instructionaldetails) {
							if (instructionaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {

								Predata.push({
									user: 'Kindly Fill Masters Instructional Details'
								})
							}
						})

					}
					if (applied_for[0].educationalDetails == true) {
						models.User_Transcript.findAll({
							where: {
								user_id: userId,
								type: {
									[Op.like]: "%Masters%"

								},
								app_id: null
							}
						}).then(function (educationaldetails) {
							if (educationaldetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Your Masters Transcript'
								})
							}

						})


					}
					if (applied_for[0].curriculum == true) {
						models.User_Curriculum.findAll({
							where: {
								user_id: userId,
								app_id: null

							}
						}).then(function (curriculumdetails) {
							if (curriculumdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Curriculum'
								})
							}
						})

					}
					if (applied_for[0].gradToPer == true) {
						models.GradeToPercentageLetter.findAll({
							where: {
								user_id: userId,
								name: {
									[Op.like]: "%Masters%"

								},
								app_id: null
							}
						}).then(function (gardetoperdetails) {
							if (gardetoperdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Masters GradeToPercentage Letter'
								})
							}
						})

					}
					if (applied_for[0].affiliation == true) {
						models.Affiliation_Letter.findAll({
							where: {
								user_id: userId,
								education: {
									[Op.like]: "%Masters%"
								},
								app_id: null
							}
						}).then(function (affiliationdetails) {
							if (affiliationdetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Masters Affiliation Letter'
								})
							}
						})

					}
					if (applied_for[0].CompetencyLetter == true) {
						models.competency_letter.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (competencydetails) {
							if (competencydetails.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Upload Competency Letter'
								})
							}
						})

					}
					if (applied_for[0].LetterforNameChange == true) {
						models.Letterfor_NameChange.findAll({
							where: {
								user_id: userId,
								app_id: null
							}
						}).then(function (letterfornamechange) {
							if (letterfornamechange.length > 0) {
								Predata.push({
									user: 'uploaded'
								})
							} else {
								Predata.push({
									user: 'Kindly Fill Letter For NameChange Details'
								})
							}

						})

					}
				}


			})
		}
	})
	setTimeout(() => {
		console.log("Predata" + JSON.stringify(Predata));
		res.json({
			data: Predata
		})
	}, 3000)
})

router.get('/getNamechangeLetter', middlewares.getUserInfo, async (req, res) => {
	console.log('/getNamechangeLetter')

	var value;
	models.Letterfor_NameChange.findAll({
		where: {
			user_id: req.User.id
		}
	}).then(function (namechangedata) {
		console.log('namechange', namechangedata[0].file_name)
		value = namechangedata[0].file_name
		if (namechangedata) {
			res.json({
				status: 200,
				value: value
			})
		} else {
			res.json({
				status: 400
				// data  : namechangedata.file_name
			})
		}

	})
})

router.get('/getAdminLetterForNameChange', (req, res) => {
	console.log("getAdminLetterForNameChange");
	var data = [];
	models.Letterfor_NameChange.findAll(
		{
			where: {
				user_id: req.query.userId,
				app_id: {
					[Op.ne]: null
				}
			}
		}
	).then(user => {
		user.forEach(function (userdata) {
			console.log("userdata" + JSON.stringify(userdata));
			data.push({
				firstnameaspermarksheet: userdata.firstnameaspermarksheet,
				fathersnameaspermarksheet: userdata.fathersnameaspermarksheet,
				mothersnameaspermarksheet: userdata.mothersnameaspermarksheet,
				lastnameaspermarksheet: userdata.lastnameaspermarksheet,
				firstnameasperpassport: userdata.firstnameasperpassport,
				fathersnameasperpassport: userdata.fathersnameasperpassport,
				lastnameasperpassport: userdata.lastnameasperpassport,
				reference_no: userdata.reference_no
			})
		})
		if (data) {
			res.json({
				data: data
			})
		} else {
			res.json({
				data: null
			})
		}
	})
})

module.exports = router;
